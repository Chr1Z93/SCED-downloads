local playAreaApi     = require("playarea/PlayAreaApi")
local searchLib       = require("util/SearchLib")
local tokenManagerApi = require("tokens/TokenManagerApi")

local clickableResourceCounter = nil
local foundTokens              = 0

ALL_LOCATIONS = {
  "Southside",
  "Rivertown",
  "Merchant District",
  "French Hill",
  "South Church",
  "Uptown",
  "Hangman's Hill",
  "Silver Twilight Lodge"
}

RANDOMIZED_LOCATIONS = {
  { name = "Southside",         deck = "4730c6" },
  { name = "Rivertown",         deck = "3f6cb7" },
  { name = "Merchant District", deck = "6ed4f6" },
  { name = "French Hill",       deck = "8ff540" },
  { name = "South Church",      deck = "e18226" },
  { name = "Uptown",            deck = "08a5f6" },
}

SET_ASIDE = {
  position = { x = -2.52, y = 2, z = 14.87 },
  rotation = { x = 0, y = 270, z = 0 }
}

PLAYAREA = {
  position = { -27.92, 4.04, -0.20 },
  rotation = { 0, 90, 0 },
  scale = { 37.63, 5.10, 37.19 }
}

function onLoad()
  self.createButton({
    label = "Set Up",
    click_function = "setup",
    function_owner = self,
    position = { 0, 0.1, -0.6 },
    height = 120,
    width = 525,
    scale = { x = 1.75, y = 1.75, z = 1.75 },
    font_size = 75
  })

  self.createButton({
    label = "Place Clue",
    click_function = "placeClue",
    function_owner = self,
    position = { 0, 0.1, 0 },
    height = 120,
    width = 525,
    scale = { x = 1.75, y = 1.75, z = 1.75 },
    font_size = 75
  })

  self.createButton({
    label = "Add Breaches",
    click_function = "addBreaches",
    function_owner = self,
    position = { 0, 0.1, 0.6 },
    height = 120,
    width = 525,
    scale = { x = 1.75, y = 1.75, z = 1.75 },
    font_size = 75
  })

  math.randomseed(os.time())
end

function findBagLocations()
  -- find Hangman's Hill and Silver Twilight Lodge
  for i, obj in ipairs(searchLib.inArea(PLAYAREA.position, PLAYAREA.rotation, PLAYAREA.scale, "isCard")) do
    if obj.getName() == "Hangman's Hill" then
      locationData["Hangman's Hill"] = { guid = obj.getGUID(), breach = 0 }
    elseif obj.getName() == "Silver Twilight Lodge" then
      locationData["Silver Twilight Lodge"] = { guid = obj.getGUID(), breach = 0 }
    end
  end
end

function setup(_, playerColor, _)
  locationData = {}
  findBagLocations()

  if locationData["Hangman's Hill"] == nil or locationData["Silver Twilight Lodge"] == nil then
    Player[playerColor].showOptionsDialog("Choose setup", {"Carl Sanford posesses the secrets of the universe", "Annette Mason is posessed by evil"},
    function(_, index, playerColor)
      if index == 1 then
        bag = getObjectFromGUID("92c6fc")
      else
        bag = getObjectFromGUID("d14543")
      end
      bag.call("buttonClick_place")
      findBagLocations()
      setup2(playerColor)
    end
    )
  else
    setup2(playerColor)
  end
end

function setup2(playerColor)
  Player[playerColor].showOptionsDialog("Use clickable counters for breaches?", {"Yes", "No"}, "No",
  function(text) useClickable = text

    for i, loc in ipairs(RANDOMIZED_LOCATIONS) do
      local deck = getObjectFromGUID(loc.deck)
      deck.shuffle()
      for j = 1, 2 do
        deck.takeObject({
          position = SET_ASIDE.position,
          rotation = SET_ASIDE.rotation
        })
      end
      locationData[loc.name] = { guid = deck.remainder.guid, breach = 0 }
    end

    if useClickable == "Yes" then
      for i, v in ipairs(ALL_LOCATIONS) do
        local location = locationData[v]
        local locationCard = getObjectFromGUID(location.guid)
        tokenManagerApi.spawnTokenGroup(locationCard, "resourceCounter", 1)
      end
    end

    local numPlayers   = playAreaApi.getInvestigatorCount()
    local numLocations = (numPlayers == 4) and 3 or 2
    local numDraws     = (numPlayers == 4) and 3 or numPlayers

    Wait.frames(function() 
        for i = 1, numDraws do
          placeBreaches(numLocations)
        end
      end, 3)

    self.editButton({
      label = "Random Location",
      click_function = "broadCastRandomLocation",
      function_owner = self,
      position = { 0, 0.1, -0.6 },
      height = 120,
      width = 525,
      scale = { x = 1.75, y = 1.75, z = 1.75 },
      font_size = 60
    })
  end)
end

function getRandomLocation()
  return ALL_LOCATIONS[math.random(1, #ALL_LOCATIONS)]
end

function broadCastRandomLocation()
  broadcastToAll(getRandomLocation())
end

function placeClue()
  local name = getRandomLocation()
  local location = locationData[name]
  local locationCard = getObjectFromGUID(location.guid)
  broadcastToAll("Clue placed at: " .. name, "White")
  tokenManagerApi.addUseToCard(locationCard, "clue")
end

function addBreaches()
  placeBreaches(playAreaApi.getInvestigatorCount() + 1)
end

function placeBreaches(numBreaches)
  local shuffled = {}
  for i, v in ipairs(ALL_LOCATIONS) do
    local pos = math.random(1, #shuffled + 1)
    table.insert(shuffled, pos, v)
  end

  broadcastToAll("Breaches added to:", "White")
  for j = 1, numBreaches do
    broadcastToAll("- " .. shuffled[j], "White")
    local location = locationData[shuffled[j]]
    local breach = location.breach
    breach = breach + 1
    
    local locationCard = getObjectFromGUID(location.guid)
    searchLocation(locationCard)

    if breach == 4 then
      locationCard.highlightOn("Red", 3)
    else
      locationCard.highlightOn("Yellow", 3)
    end
    if clickableResourceCounter then
      clickableResourceCounter.call("updateVal", breach)
    else
      locationCard.resting = true
      tokenManagerApi.spawnTokenGroup(locationCard, "resource", breach)
    end
    if breach > 4 then breach = 0 end
    location.breach = breach
  end
end

function searchLocation(locationCard)
  clickableResourceCounter = nil
  foundTokens = 0
  for _, obj in ipairs(searchLib.onObject(locationCard, "isTileOrToken")) do
    local memo = obj.getMemo()
    if memo == "resource" then
      foundTokens = foundTokens + math.abs(obj.getQuantity())
      obj.destruct()
    elseif memo == "resourceCounter" then
      foundTokens = obj.getVar("val")
      clickableResourceCounter = obj
      return
    end
  end
end
