local playAreaApi     = require("playarea/PlayAreaApi")
local searchLib       = require("util/SearchLib")
local tokenManagerApi = require("tokens/TokenManagerApi")

ALL_LOCATIONS = {
  "Southside",
  "Rivertown",
  "Merchant District",
  "French Hill",
  "South Church",
  "Uptown",
  "Hangman's Hill",
  "Silver Twilight Lodge"
}

RANDOMIZED_LOCATIONS = {
  {
    name = "Southside",
    guids = { "c898a0", "e7f5fa" },
    position = { -30.22, 1.64, -0.03 }
  },
  {
    name = "Rivertown",
    guids = { "db4b20", "92ee68" },
    position = { -23.68, 1.65, -3.83 }
  },
  {
    name = "Merchant District",
    guids = { "bed0da", "b568b8" },
    position = { -23.68, 1.63, 3.86 }
  },
  {
    name = "French Hill",
    guids = { "fc9d97", "6ed2ae" },
    position = { -30.24, 1.63, -7.70 }
  },
  {
    name = "South Church",
    guids = { "3d2a8a", "1a0ad2" },
    position = { -36.77, 1.65, -0.03 }
  },
  {
    name = "Uptown",
    guids = { "9484e9", "441006" },
    position = { -30.22, 1.64, 7.57 }
  },
}

SET_ASIDE = {
  position = { x = -2.52, y = 2, z = 14.87 },
  rotation = { x = 0, y = 270, z = 0 }
}

PLAYAREA = {
  position = { -27.92, 4.04, -0.20 },
  rotation = { 0.00, 90, 0.00 },
  scale = { 37.63, 5.10, 37.19 }
}
local beforeSetup = true

function onSave()
  return JSON.encode({ beforeSetup = beforeSetup, locationData = locationData })
end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    local loadedData = JSON.decode(savedData)
    beforeSetup      = loadedData.beforeSetup
    locationData     = loadedData.locationData
  end

  buttonCreation()
  math.randomseed(os.time())
end

function buttonCreation()
  self.clearButtons()

  local bParams = {}
  bParams.function_owner = self
  bParams.position = Vector(0, 0.1, -0.6)
  bParams.height = 420
  bParams.width = 1800
  bParams.scale = Vector(0.5, 0.5, 0.5)

  -- first button (Setup / Random Location)
  if beforeSetup then
    bParams.label = "Set Up"
    bParams.click_function = "setup"
    bParams.font_size = 260
  else
    bParams.label = "Random Location"
    bParams.click_function = "broadCastRandomLocation"
    bParams.font_size = 210
  end
  self.createButton(bParams)

  -- second button (Place Clue)
  bParams.label = "Place Clue"
  bParams.click_function = "placeClue"
  bParams.position.z = 0
  bParams.font_size = 260
  self.createButton(bParams)

  -- third button (Add Breaches)
  bParams.label = "Add Breaches"
  bParams.click_function = "addBreaches"
  bParams.position.z = 0.6
  bParams.font_size = 260
  self.createButton(bParams)
end

function setup(_, playerColor, _)
  locationData = {}
  -- find Hangman's Hill and Silver Twilight Lodge
  for i, obj in ipairs(searchLib.inArea(PLAYAREA.position, PLAYAREA.rotation, PLAYAREA.scale, "isCard")) do
    if obj.getName() == "Hangman's Hill" then
      locationData["Hangman's Hill"] = { guid = obj.getGUID(), breach = 0, clue = 0 }
    elseif obj.getName() == "Silver Twilight Lodge" then
      locationData["Silver Twilight Lodge"] = { guid = obj.getGUID(), breach = 0, clue = 0 }
    end
  end

  if locationData["Hangman's Hill"] == nil or locationData["Silver Twilight Lodge"] == nil then
    printToColor("Place Hangman's Hill and Silver Twilight Lodge first", playerColor)
    return
  end

  beforeSetup = false
  buttonCreation()

  for k, loc in pairs(RANDOMIZED_LOCATIONS) do
    local chosen = math.random(2)

    local guid1 = loc.guids[3 - chosen]
    local card1 = getObjectFromGUID(guid1)
    card1.setPosition(SET_ASIDE.position)
    card1.setRotation(SET_ASIDE.rotation)

    local guid2 = loc.guids[chosen]
    local card2 = getObjectFromGUID(guid2)
    card2.setPosition(loc.position)
    card2.setRotation(SET_ASIDE.rotation)
    locationData[loc.name] = { guid = guid2, breach = 0, clue = 0 }
  end

  local numPlayers   = playAreaApi.getInvestigatorCount()
  local numLocations = (numPlayers == 4) and 3 or 2
  local numDraws     = (numPlayers == 4) and 3 or numPlayers

  for i = 1, numDraws do
    placeBreaches(numLocations)
  end
end

function getRandomLocation()
  return ALL_LOCATIONS[math.random(1, #ALL_LOCATIONS)]
end

function broadCastRandomLocation()
  broadcastToAll(getRandomLocation())
end

function placeClue()
  local name = getRandomLocation()
  local location = locationData[name]
  local clue = location.clue
  local pos = getObjectFromGUID(location.guid).getPosition()
  local cluePos = { x = pos.x + 0.85, y = pos.y + 1, z = pos.z - 0.8 + (0.55 * clue) }
  clue = clue + 1
  if clue > 3 then clue = 0 end
  location.clue = clue
  printToAll("Clue placed at: " .. name)
  tokenManagerApi.spawnToken(cluePos, "clue")
end

function addBreaches()
  placeBreaches(playAreaApi.getInvestigatorCount() + 1)
end

function placeBreaches(numBreaches)
  local shuffled = {}
  for i, v in ipairs(ALL_LOCATIONS) do
    local pos = math.random(1, #shuffled + 1)
    table.insert(shuffled, pos, v)
  end

  printToAll("Breaches added to:")
  for j = 1, numBreaches do
    printToAll("- " .. shuffled[j])
    local location = locationData[shuffled[j]]
    local pos = getObjectFromGUID(location.guid).getPosition()
    local breach = location.breach
    local z = breach < 3 and (pos.z - 0.7 + (0.7 * breach)) or (pos.z - 0.35 + (0.7 * (breach - 3)))
    local breachPos = { x = pos.x + 0.3, y = pos.y + 1, z = z }
    breach = breach + 1
    if breach > 4 then breach = 0 end
    location.breach = breach
    tokenManagerApi.spawnToken(breachPos, "resource")
  end
end
