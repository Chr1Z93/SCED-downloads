local chaosBagApi = require("chaosbag/ChaosBagApi")

local sealedToken

function onSave()
  if sealedToken then
    return JSON.encode(sealedToken.getGUID())
  end
  return nil
end

function onLoad(savedData)
  if savedData and savedData ~= "" then
    sealedToken = getObjectFromGUID(JSON.decode(savedData))
  end
  updateMenu()
end

function updateMenu()
  self.clearContextMenu()
  if sealedToken then
    self.addContextMenuItem("Release tablet", function(playerColor) releaseToken() end)
  else
    self.addContextMenuItem("Seal tablet", function(playerColor) sealToken("Tablet", playerColor) end)
  end
end

function sealToken(name, playerColor)
  local chaosBag = chaosBagApi.findChaosBag()

  for i, obj in ipairs(chaosBag.getObjects()) do
    if obj.name == name then
      sealedToken = chaosBag.takeObject({
        position = self.getPosition() + Vector(0, 0.2, 0),
        rotation = self.getRotation(),
        index = i - 1,
        smooth = true
      })
      Wait.time(function() updateMenu() end, 0.1)
      return
    end
  end
  printToColor("Tablet token not found in bag", playerColor)
end

function releaseToken()
  if sealedToken == nil then return end

  local chaosBag = chaosBagApi.findChaosBag()
  chaosBag.putObject(sealedToken)
  sealedToken = nil
  updateMenu()
end
