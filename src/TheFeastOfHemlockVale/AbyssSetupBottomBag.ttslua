-- Bottom Abyss Bag

function updateSave()
  self.script_state = val
end

function onLoad(savedData)
  val = tonumber(savedData or 1) or 1 -- read only = 1
  self.max_typed_number = 0
end

function setReadOnly(readOnly)
  if readOnly then
    val = 1
  else
    val = 0
  end
  updateSave()
end

-- only allow cards to enter, split decks and reject other objects
function tryObjectEnter(object)
  if val == 1 then return end -- read only

  if object.getName() == lastRejectedName then return end

  if object.type == "Deck" then
    object.shuffle()
    local pos = self.getPosition()
    for i = 1, #object.getObjects() do
      local card = object.takeObject({ position = pos + Vector(0, 0.1 * i, 0), smooth = false })
      self.putObject(card)
    end
    return false
  elseif object.type ~= "Card" then
    lastRejectedName = object.getName()
    Wait.time(function() lastRejectedName = nil end, 1)
    return false
  end

  return true
end
