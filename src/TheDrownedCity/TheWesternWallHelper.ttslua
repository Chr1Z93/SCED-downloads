local CoroutineLib               = require("util/CoroutineLib")
local DeckLib                    = require("util/DeckLib")
local GUIDReferenceApi           = require("core/GUIDReferenceApi")
local MythosAreaApi              = require("mythos/MythosAreaApi")

local WALKWAYS_DECK_GUID         = "612a6b"
local REMAINING_WALKWAYS_GUID    = "3948c1"
local OBSIDIAN_FOUNDATIONS_GUID  = "91eb93"
local WESTERN_WALL_GUID          = "28aaa8"
local FLOOD_TOKENS_GUID          = "5c6098"
local INESCAPABLE_SET_GUID       = "09f2da"

local trash

local BAG_GUIDS                  = {
  ["west"] = "aff57b",
  ["east"] = "7cd284"
}

local WESTERN_LOCATION_POSITIONS = {
  Vector(-23.64, 1.53, 0.00),
  Vector(-30.24, 1.53, 3.83),
  Vector(-30.24, 1.53, -3.83),
  Vector(-36.84, 1.53, 7.65),
  Vector(-36.84, 1.53, 0.00),
  Vector(-36.84, 1.53, -7.65),
  Vector(-43.44, 1.53, 7.65),
  Vector(-43.44, 1.53, 0.00),
  Vector(-43.44, 1.53, -7.65)
}

local EASTERN_LOCATION_POSITIONS = {
  Vector(-36.84, 1.53, 0.00),
  Vector(-30.24, 1.58, 3.83),
  Vector(-30.24, 1.58, -3.83),
  Vector(-23.64, 1.53, 7.65),
  Vector(-23.64, 1.53, 0.00),
  Vector(-23.64, 1.53, -7.65),
  Vector(-17.04, 1.53, 7.65),
  Vector(-17.04, 1.53, 0.00),
  Vector(-17.04, 1.53, -7.65)
}

function onLoad()
  trash = GUIDReferenceApi.getObjectByOwnerAndType("Mythos", "Trash")
  if not trash then
    printToAll("Trash not found!", "Red")
  end

  self.createButton({
    label = "Western",
    click_function = "westernSetup",
    function_owner = self,
    position = { 0, 0.1, -0.5 },
    height = 150,
    width = 460,
    scale = { x = 2, y = 2, z = 2 },
    font_color = { r = 0, g = 0, b = 0 },
    color = { r = 1, g = 1, b = 1 }
  })

  self.createButton({
    label = "Eastern",
    click_function = "easternSetup",
    function_owner = self,
    position = { 0, 0.1, 0.5 },
    height = 150,
    width = 460,
    scale = { x = 2, y = 2, z = 2 },
    font_color = { r = 0, g = 0, b = 0 },
    color = { r = 1, g = 1, b = 1 }
  })
end

function westernSetup(_, color)
  playerColor = color
  setup("west", WESTERN_LOCATION_POSITIONS)
end

function easternSetup(_, color)
  playerColor = color
  setup("east", EASTERN_LOCATION_POSITIONS)
end

function setup(direction, locationPositions)
  function westernWallSetupCoroutine()
    local bag = getObjectFromGUID(BAG_GUIDS[direction])

    if #bag.getObjects() > 0 then
      bag.call("buttonClick_place")
    end

    -- remove two random locations
    local walkwaysDeck = getObjectFromGUID(WALKWAYS_DECK_GUID)
    walkwaysDeck.shuffle()

    CoroutineLib.yieldSeconds(0.5)

    for i = 1, 2 do
      local card = walkwaysDeck.takeObject()
      trash.putObject(card)
    end

    CoroutineLib.yieldSeconds(0.5)

    -- shuffle together cards
    local remainingWWDeck = getObjectFromGUID(REMAINING_WALKWAYS_GUID)
    DeckLib.placeOrMergeIntoDeck(remainingWWDeck, walkwaysDeck.getPosition(), walkwaysDeck.getRotation(), false, true)

    CoroutineLib.yieldSeconds(1)

    for i = 1, 6 do
      walkwaysDeck.takeObject({ position = locationPositions[i] })
    end

    CoroutineLib.yieldSeconds(1)

    -- place final three locations
    local finalLocation
    if direction == "west" then
      finalLocation = getObjectFromGUID(OBSIDIAN_FOUNDATIONS_GUID)
    else
      finalLocation = getObjectFromGUID(WESTERN_WALL_GUID)
    end

    DeckLib.placeOrMergeIntoDeck(finalLocation, walkwaysDeck.getPosition(), walkwaysDeck.getRotation(), false, true, true)

    CoroutineLib.yieldSeconds(1)

    for i = 7, 9 do
      walkwaysDeck.takeObject({ position = locationPositions[i] })
    end

    local floodTokenPool = getObjectFromGUID(FLOOD_TOKENS_GUID)

    -- place flood tokens and deal with the Inescapable
    if direction == "west" then
      for i = 1, 9 do
        floodTokenPool.takeObject({
          position = locationPositions[i] + Vector(2, 0, -1.5),
          callback_function = function(spawnedObject) if i > 3 then spawnedObject.flip() end end
        })
      end

      -- put The Inescapable into the set aside chest and shuffle the rest of the encounter set into the encounter deck
      local inescapableSet = getObjectFromGUID(INESCAPABLE_SET_GUID)
      local setAsideChest = MythosAreaApi.getSetAsideChest()

      -- The Inescapable set is face-down for dramatic effect
      local inescapable = inescapableSet.takeObject({ top = false })
      setAsideChest.putObject(inescapable)

      CoroutineLib.yieldSeconds(0.5)

      DeckLib.placeOrMergeIntoDeck(inescapableSet, MythosAreaApi.getEncounterDeckPosition(), nil, false, true)
    else
      for i = 1, 6 do
        floodTokenPool.takeObject({
          position = locationPositions[i] + Vector(2, 0, -1.5),
          callback_function = function(spawnedObject) if i == 1 then spawnedObject.flip() end end
        })
      end

      floodTokenPool.takeObject({
        position = Vector(-43.44, 1.53, 0.00) + Vector(2, 0, -1.5),
        callback_function = function(spawnedObject) spawnedObject.flip() end
      })

      -- prompt user to report on the Inescapable
      Player[playerColor].showOptionsDialog("Was the creature defeated?", { "Yes", "No" }, 1, function(text)
        local inescapableSet = getObjectFromGUID(INESCAPABLE_SET_GUID)
        if text == "No" then
          -- add the entire Inescapable Encounter set to the deck
          DeckLib.placeOrMergeIntoDeck(inescapableSet, MythosAreaApi.getEncounterDeckPosition(), nil, false, true)
          broadcastToAll("Added 'The Inescapable' Encounter Set to the game.", "White")
        else
          trash.putObject(inescapableSet)
          broadcastToAll("Removed 'The Inescapable' Encounter Set from the game.", "White")
        end
      end)
    end
    trash.putObject(bag)
    trash.putObject(self)
  end

  CoroutineLib.start(westernWallSetupCoroutine)
end
