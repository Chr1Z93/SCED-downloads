{
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "Autoraise": true,
  "ColorDiffuse": {
    "b": 1,
    "g": 1,
    "r": 1
  },
  "CustomImage": {
    "CustomToken": {
      "MergeDistancePixels": 15,
      "Stackable": false,
      "StandUp": false,
      "Thickness": 0.1
    },
    "ImageScalar": 1,
    "ImageSecondaryURL": "",
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1974294597231440911/F362CCCFF8C4BDA15CBF084A68DDD20BC245BA8A/",
    "WidthScale": 0
  },
  "Description": "Page 1",
  "DragSelectable": true,
  "GMNotes": "",
  "GUID": "6b4f22",
  "Grid": true,
  "GridProjection": false,
  "Hands": false,
  "HideWhenFaceDown": false,
  "IgnoreFoW": false,
  "LayoutGroupSortIndex": 0,
  "Locked": false,
  "LuaScript": "require(\"TheScarletKeys/CampaignLog1\")",
  "LuaScriptState": "",
  "MeasureMovement": false,
  "Name": "Custom_Tile",
  "Nickname": "The Scarlet Keys - Campaign Log",
  "Snap": true,
  "States": {
    "2": {
      "AltLookAngle": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "Autoraise": true,
      "ColorDiffuse": {
        "b": 1,
        "g": 1,
        "r": 1
      },
      "CustomImage": {
        "CustomToken": {
          "MergeDistancePixels": 15,
          "Stackable": false,
          "StandUp": false,
          "Thickness": 0.1
        },
        "ImageScalar": 1,
        "ImageSecondaryURL": "",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1974294597231446647/10DF67ED7E3060748A17112DDB568558605764DA/",
        "WidthScale": 0
      },
      "Description": "Page 2",
      "DragSelectable": true,
      "GMNotes": "",
      "GUID": "ce17b8",
      "Grid": true,
      "GridProjection": false,
      "Hands": false,
      "HideWhenFaceDown": false,
      "IgnoreFoW": false,
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "LuaScript": "-- Campaign Log: The Scarlet Keys (Page 2)\r\n\r\n--Set this to true while editing and false when you have finished\r\nlocal disableSave       = false\r\nlocal buttonFontColor   = { 0, 0, 0 }\r\nlocal buttonColor       = { 1, 1, 1 }\r\nlocal buttonScale       = { 0.13, 0.13, 0.13 }\r\nlocal defaultButtonData = {\r\n  checkbox = {},\r\n  counter = {},\r\n  --Add editable text boxes\r\n  textbox = {\r\n    -- San Juan\r\n    { pos = { -0.72, 0.11, -1.44 },\r\n      rot = { 0, -6, 0 } },\r\n    -- Quito\r\n    { pos = { -0.86, 0.11, -0.93 },\r\n      rot = { 0, -19, 0 } },\r\n    -- Reykjavik\r\n    { pos = { 0.25, 0.11, -1.21 },\r\n      rot = { 0, -6, 0 } },\r\n    -- London\r\n    { pos = { 0.56, 0.11, -0.92 },\r\n      rot = { 0, 5, 0 } },\r\n    -- Hong Kong\r\n    { pos = { -0.49, 0.11, -0.14 },\r\n      rot = { 0, -3, 0 } },\r\n    -- Kuala Lumpur\r\n    { pos = { -0.9, 0.11, 0.28 },\r\n      rot = { 0, 9, 0 } },\r\n    -- Manokwari\r\n    { pos = { -0.11, 0.11, 0.52 },\r\n      rot = { 0, 14, 0 } },\r\n    -- Tunguska\r\n    { pos = { 0.905, 0.11, -0.03 },\r\n      rot = { 0, -16, 0 } },\r\n    -- Kabul\r\n    { pos = { 0.53, 0.11, 0.61 },\r\n      rot = { 0, -4, 0 } },\r\n    -- killed investigators\r\n    { pos = { -0.7, 0.11, 1.7 },\r\n      rot       = { 0, 3, 0 },\r\n      rows      = 9,\r\n      width     = 4500,\r\n      font_size = 200,\r\n      label     = \"Click to type\",\r\n      value     = \"\",\r\n      noDefault = true\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateSave() self.script_state = onSave() end\r\n\r\nfunction onSave() return JSON.encode(ref_buttonData) end\r\n\r\n--Startup procedure\r\nfunction onLoad(saved_data)\r\n  if disableSave == true then saved_data = \"\" end\r\n  if saved_data ~= \"\" then\r\n    local loaded_data = JSON.decode(saved_data)\r\n    ref_buttonData = loaded_data\r\n  else\r\n    -- default settings for all boxes\r\n    for _, entry in ipairs(defaultButtonData.textbox) do\r\n      if entry.noDefault == true then break end\r\n      entry.label = \"Click\"\r\n      entry.value = \"\"\r\n      entry.width = 950\r\n      entry.font_size = 300\r\n      if entry.rows == nil then entry.rows = 1 end\r\n    end\r\n\r\n    ref_buttonData = defaultButtonData\r\n  end\r\n\r\n  spawnedButtonCount = 0\r\n  createCheckbox()\r\n  createCounter()\r\n  createTextbox()\r\nend\r\n\r\n--Click functions for buttons\r\n--Checks or unchecks the given box\r\nfunction click_checkbox(tableIndex, buttonIndex)\r\n  if ref_buttonData.checkbox[tableIndex].state == true then\r\n    ref_buttonData.checkbox[tableIndex].state = false\r\n    self.editButton({ index = buttonIndex, label = \"\" })\r\n  else\r\n    ref_buttonData.checkbox[tableIndex].state = true\r\n    self.editButton({ index = buttonIndex, label = string.char(10008) })\r\n  end\r\n  updateSave()\r\nend\r\n\r\n--Applies value to given counter display\r\nfunction click_counter(tableIndex, buttonIndex, amount)\r\n  ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\r\n  self.editButton({ index = buttonIndex, label = ref_buttonData.counter[tableIndex].value })\r\n  updateSave()\r\nend\r\n\r\n--Updates saved value for given text box\r\nfunction click_textbox(i, value, selected)\r\n  if selected == false then\r\n    ref_buttonData.textbox[i].value = value\r\n    updateSave()\r\n  end\r\nend\r\n\r\n--Makes checkboxes\r\nfunction createCheckbox()\r\n  for i, data in ipairs(ref_buttonData.checkbox) do\r\n    --Sets up reference function\r\n    local buttonNumber = spawnedButtonCount\r\n    local funcName = \"checkbox\" .. i\r\n    local func = function() click_checkbox(i, buttonNumber) end\r\n    self.setVar(funcName, func)\r\n    local label = \"\"\r\n    if data.state == true then label = string.char(10008) end\r\n    --Creates button and counts it\r\n    self.createButton({\r\n      label          = label,\r\n      click_function = funcName,\r\n      function_owner = self,\r\n      position       = data.pos,\r\n      rotation       = data.rot or { 0, 0, 0 },\r\n      height         = data.size,\r\n      width          = data.size,\r\n      font_size      = data.size,\r\n      scale          = buttonScale,\r\n      color          = buttonColor,\r\n      font_color     = buttonFontColor\r\n    })\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n  end\r\nend\r\n\r\n--Makes counters\r\nfunction createCounter()\r\n  for i, data in ipairs(ref_buttonData.counter) do\r\n    -- common parameters\r\n    local size                      = 400\r\n    local offsetDistance            = 3 / 4 * size * buttonScale[1] * 0.002\r\n    local buttonParameters          = {}\r\n    buttonParameters.function_owner = self\r\n    buttonParameters.scale          = buttonScale\r\n    buttonParameters.color          = buttonColor\r\n    buttonParameters.font_color     = buttonFontColor\r\n\r\n    --Sets up display\r\n    local displayNumber             = spawnedButtonCount\r\n    buttonParameters.label          = data.value\r\n    buttonParameters.click_function = \"click_none\"\r\n    buttonParameters.position       = data.pos\r\n    buttonParameters.height         = 0\r\n    buttonParameters.width          = 0\r\n    buttonParameters.font_size      = size\r\n    self.createButton(buttonParameters)\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n    --Sets up add 1\r\n    local funcName = \"counterAdd\" .. i\r\n    local func = function() click_counter(i, displayNumber, 1) end\r\n    self.setVar(funcName, func)\r\n\r\n    buttonParameters.label          = \"+\"\r\n    buttonParameters.click_function = funcName\r\n    buttonParameters.position       = { data.pos[1] + offsetDistance, data.pos[2], data.pos[3] - 0.005 }\r\n    buttonParameters.height         = size * 0.55\r\n    buttonParameters.width          = size * 0.55\r\n    buttonParameters.font_size      = size * 0.55\r\n    self.createButton(buttonParameters)\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n    --Sets up subtract 1\r\n    local funcName = \"counterSub\" .. i\r\n    local func = function() click_counter(i, displayNumber, -1) end\r\n    self.setVar(funcName, func)\r\n\r\n    buttonParameters.label          = \"-\"\r\n    buttonParameters.click_function = funcName\r\n    buttonParameters.position       = { data.pos[1] - offsetDistance, data.pos[2], data.pos[3] - 0.005 }\r\n    self.createButton(buttonParameters)\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n  end\r\nend\r\n\r\nfunction createTextbox()\r\n  for i, data in ipairs(ref_buttonData.textbox) do\r\n    --Sets up reference function\r\n    local funcName = \"textbox\" .. i\r\n    local func = function(_, _, val, sel) click_textbox(i, val, sel) end\r\n    self.setVar(funcName, func)\r\n    self.createInput({\r\n      input_function = funcName,\r\n      function_owner = self,\r\n      label          = data.label,\r\n      alignment      = 2,\r\n      position       = data.pos,\r\n      rotation       = data.rot or { 0, 0, 0 },\r\n      scale          = buttonScale,\r\n      width          = data.width,\r\n      height         = (data.font_size * data.rows) + 33,\r\n      font_size      = data.font_size,\r\n      color          = buttonColor,\r\n      font_color     = buttonFontColor,\r\n      value          = data.value\r\n    })\r\n  end\r\nend\r\n",
      "LuaScriptState": "",
      "MeasureMovement": false,
      "Name": "Custom_Token",
      "Nickname": "The Scarlet Keys - Campaign Log",
      "Snap": true,
      "Sticky": true,
      "Tags": [
        "CampaignLog"
      ],
      "Tooltip": true,
      "Transform": {
        "posX": -1.466,
        "posY": 1.58,
        "posZ": -26.93,
        "rotX": 0,
        "rotY": 270,
        "rotZ": 0,
        "scaleX": 3.25,
        "scaleY": 1,
        "scaleZ": 3.25
      },
      "Value": 0,
      "XmlUI": ""
    }
  },
  "Sticky": true,
  "Tags": [
    "CampaignLog"
  ],
  "Tooltip": true,
  "Transform": {
    "posX": -1.466,
    "posY": 1.531,
    "posZ": -26.93,
    "rotX": 0,
    "rotY": 270,
    "rotZ": 0,
    "scaleX": 3.25,
    "scaleY": 1,
    "scaleZ": 3.25
  },
  "Value": 0,
  "XmlUI": ""
}