{
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "Autoraise": true,
  "ColorDiffuse": {
    "b": 1,
    "g": 1,
    "r": 1
  },
  "CustomImage": {
    "CustomToken": {
      "MergeDistancePixels": 15,
      "Stackable": false,
      "StandUp": false,
      "Thickness": 0.1
    },
    "ImageScalar": 1,
    "ImageSecondaryURL": "",
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2424696374457427657/D4DA58E4EFB2E90DA45E65C7E531814CE30D4C77/",
    "WidthScale": 0
  },
  "Description": "Page 1",
  "DragSelectable": true,
  "GMNotes": "",
  "GUID": "200a62",
  "Grid": true,
  "GridProjection": false,
  "Hands": false,
  "HideWhenFaceDown": false,
  "IgnoreFoW": false,
  "LayoutGroupSortIndex": 0,
  "Locked": false,
  "LuaScript": "require(\"TheFeastOfHemlockVale/CampaignLog1\")",
  "LuaScriptState_path": "TheFeastofHemlockVale.c740af/TheFeastofHemlockVale-CampaignLog.200a62.luascriptstate",
  "MeasureMovement": false,
  "Name": "Custom_Token",
  "Nickname": "The Feast of Hemlock Vale - Campaign Log",
  "Snap": true,
  "States": {
    "2": {
      "AltLookAngle": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "Autoraise": true,
      "ColorDiffuse": {
        "b": 1,
        "g": 1,
        "r": 1
      },
      "CustomImage": {
        "CustomToken": {
          "MergeDistancePixels": 15,
          "Stackable": false,
          "StandUp": false,
          "Thickness": 0.1
        },
        "ImageScalar": 1,
        "ImageSecondaryURL": "",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2424696374457427846/E1669CDCD1759DB3CAFC39379221EEC8DC0BA08F/",
        "WidthScale": 0
      },
      "Description": "Page 2",
      "DragSelectable": true,
      "GMNotes": "",
      "GUID": "a62ee7",
      "Grid": true,
      "GridProjection": false,
      "Hands": false,
      "HideWhenFaceDown": false,
      "IgnoreFoW": false,
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "LuaScript": "-- Campaign Log: The Feast of Hemlock Vale (Page 2)\r\n\r\n-- set this to true while editing and false when you have finished\r\nlocal disableSave       = false\r\nlocal buttonFontColor   = { 0, 0, 0 }\r\nlocal buttonColor       = { 1, 1, 1 }\r\nlocal buttonScale       = { 0.13, 0.13, 0.13 }\r\nlocal defaultButtonData = {\r\n  checkbox = {},\r\n  counter = {},\r\n  textbox = {\r\n    -- Madre\r\n    {\r\n      pos = { -0.69, 0.11, -1.58 },\r\n      rot = { 0, -3, 0 }\r\n    },\r\n    -- Leah\r\n    {\r\n      pos = { 0.765, 0.11, -1.545 },\r\n      rot = { 0, 3, 0 }\r\n    },\r\n    -- Simeon\r\n    {\r\n      pos = { -0.7, 0.11, -0.66 },\r\n      rot = { 0, -1, 0 }\r\n    },\r\n    -- William\r\n    {\r\n      pos = { 0.82, 0.11, -0.6 },\r\n      rot = { 0, -2, 0 }\r\n    },\r\n    -- River\r\n    {\r\n      pos = { -0.63, 0.11, 0.455 },\r\n      rot = { 0, 0, 0 }\r\n    },\r\n    -- Gideon\r\n    {\r\n      pos = { 0.79, 0.11, 0.365 },\r\n      rot = { 0, 0, 0 }\r\n    },\r\n    -- Judith\r\n    {\r\n      pos = { -0.78, 0.11, 1.54 },\r\n      rot = { 0, -1, 0 }\r\n    },\r\n    -- Theo\r\n    {\r\n      pos = { 0.585, 0.11, 1.22 },\r\n      rot = { 0, 2, 0 }\r\n    }\r\n  }\r\n}\r\n\r\nlocal cb_unicode = {}\r\n\r\nfunction updateSave() self.script_state = onSave() end\r\n\r\nfunction onSave() return JSON.encode(ref_buttonData) end\r\n\r\n-- startup procedure\r\nfunction onLoad(saved_data)\r\n  if disableSave == true then saved_data = \"\" end\r\n  if saved_data ~= \"\" then\r\n    local loaded_data = JSON.decode(saved_data)\r\n    ref_buttonData = loaded_data\r\n  else\r\n    -- default settings for all boxes\r\n    for _, entry in ipairs(defaultButtonData.textbox) do\r\n      if entry.noDefault == true then break end\r\n      entry.label = \"Click to type\"\r\n      entry.value = \"\"\r\n      entry.width = 3250\r\n      entry.font_size = 215\r\n      if entry.rows == nil then entry.rows = 9 end\r\n    end\r\n\r\n    -- checkboxes for relationship level\r\n    local rlPos = {\r\n      madre   = {\r\n        startPos = Vector(-0.64, 0.06, -1.23),\r\n        boxCount = 6\r\n      },\r\n      leah    = {\r\n        startPos = Vector(0.82, 0.06, -1.194),\r\n        boxCount = 6\r\n      },\r\n      simeon  = {\r\n        startPos = Vector(-0.61, 0.06, -0.32),\r\n        boxCount = 6\r\n      },\r\n      william = {\r\n        startPos = Vector(0.945, 0.06, -0.265),\r\n        boxCount = 6\r\n      },\r\n      river   = {\r\n        startPos = Vector(-0.67, 0.06, 0.805),\r\n        boxCount = 6\r\n      },\r\n      gideon  = {\r\n        startPos = Vector(0.89, 0.06, 0.7),\r\n        boxCount = 6\r\n      },\r\n      judith  = {\r\n        startPos = Vector(-0.772, 0.06, 1.88),\r\n        boxCount = 7\r\n      },\r\n      theo    = {\r\n        startPos = Vector(0.475, 0.06, 1.56),\r\n        boxCount = 7\r\n      }\r\n    }\r\n    for _, char in pairs(rlPos) do\r\n      for i = 0, (char.boxCount - 1) do\r\n        local random_degree = math.random(-5, 5)\r\n        local random_size = math.random(90, 110)\r\n        local cb_tbl = {\r\n          pos = { char.startPos.x + i * 0.0657, char.startPos.y, char.startPos.z },\r\n          rot = { 0, 3 + random_degree, 0 },\r\n          size = 250 * random_size / 100,\r\n          state = false\r\n        }\r\n        table.insert(defaultButtonData.checkbox, cb_tbl)\r\n      end\r\n    end\r\n\r\n    ref_buttonData = defaultButtonData\r\n  end\r\n\r\n  math.randomseed(112)\r\n  local choices = { 10007, 10008 }\r\n  for i = 1, 50 do\r\n    table.insert(cb_unicode, choices[math.random(1, #choices)])\r\n  end\r\n\r\n  spawnedButtonCount = 0\r\n  createCheckbox()\r\n  createCounter()\r\n  createTextbox()\r\nend\r\n\r\n-- click functions for buttons\r\n-- checks or unchecks the given box\r\nfunction click_checkbox(tableIndex, buttonIndex)\r\n  local state = ref_buttonData.checkbox[tableIndex].state\r\n  ref_buttonData.checkbox[tableIndex].state = not state\r\n  self.editButton({\r\n    index = buttonIndex,\r\n    label = (state and \"\" or string.char(cb_unicode[buttonIndex + 1]))\r\n  })\r\n  updateSave()\r\nend\r\n\r\n-- applies value to given counter display\r\nfunction click_counter(tableIndex, buttonIndex, amount)\r\n  ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\r\n  self.editButton({ index = buttonIndex, label = ref_buttonData.counter[tableIndex].value })\r\n  updateSave()\r\nend\r\n\r\n-- updates saved value for given text box\r\nfunction click_textbox(i, value, selected)\r\n  if selected == false then\r\n    ref_buttonData.textbox[i].value = value\r\n    updateSave()\r\n  end\r\nend\r\n\r\n-- makes checkboxes\r\nfunction createCheckbox()\r\n  for i, data in ipairs(ref_buttonData.checkbox) do\r\n    local buttonIndex = spawnedButtonCount\r\n    local funcName = \"checkbox\" .. i\r\n    self.setVar(funcName, function() click_checkbox(i, buttonIndex) end)\r\n    self.createButton({\r\n      label          = data.state and string.char(cb_unicode[buttonIndex + 1]) or \"\",\r\n      click_function = funcName,\r\n      function_owner = self,\r\n      position       = data.pos,\r\n      rotation       = data.rot or { 0, 0, 0 },\r\n      height         = data.size,\r\n      width          = data.size,\r\n      font_size      = data.size,\r\n      scale          = buttonScale,\r\n      color          = { 1, 1, 1, 0 },\r\n      font_color     = { 0, 0, 0, 97 }\r\n    })\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n  end\r\nend\r\n\r\n-- makes counters\r\nfunction createCounter()\r\n  for i, data in ipairs(ref_buttonData.counter) do\r\n    -- common parameters\r\n    local size                      = 400\r\n    local offsetDistance            = 3 / 4 * size * buttonScale[1] * 0.002\r\n    local buttonParameters          = {}\r\n    buttonParameters.function_owner = self\r\n    buttonParameters.scale          = buttonScale\r\n    buttonParameters.color          = buttonColor\r\n    buttonParameters.font_color     = buttonFontColor\r\n\r\n    -- sets up display\r\n    local displayNumber             = spawnedButtonCount\r\n    buttonParameters.label          = data.value\r\n    buttonParameters.click_function = \"click_none\"\r\n    buttonParameters.position       = data.pos\r\n    buttonParameters.height         = 0\r\n    buttonParameters.width          = 0\r\n    buttonParameters.font_size      = size\r\n    self.createButton(buttonParameters)\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n    -- sets up add 1\r\n    local funcName = \"counterAdd\" .. i\r\n    local func = function() click_counter(i, displayNumber, 1) end\r\n    self.setVar(funcName, func)\r\n\r\n    buttonParameters.label          = \"+\"\r\n    buttonParameters.click_function = funcName\r\n    buttonParameters.position       = { data.pos[1] + offsetDistance, data.pos[2], data.pos[3] - 0.005 }\r\n    buttonParameters.height         = size * 0.55\r\n    buttonParameters.width          = size * 0.55\r\n    buttonParameters.font_size      = size * 0.55\r\n    self.createButton(buttonParameters)\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n    -- sets up subtract 1\r\n    local funcName = \"counterSub\" .. i\r\n    local func = function() click_counter(i, displayNumber, -1) end\r\n    self.setVar(funcName, func)\r\n\r\n    buttonParameters.label          = \"-\"\r\n    buttonParameters.click_function = funcName\r\n    buttonParameters.position       = { data.pos[1] - offsetDistance, data.pos[2], data.pos[3] - 0.005 }\r\n    self.createButton(buttonParameters)\r\n    spawnedButtonCount = spawnedButtonCount + 1\r\n  end\r\nend\r\n\r\nfunction createTextbox()\r\n  for i, data in ipairs(ref_buttonData.textbox) do\r\n    local funcName = \"textbox\" .. i\r\n    self.setVar(funcName, function(_, _, val, sel) click_textbox(i, val, sel) end)\r\n    self.createInput({\r\n      input_function = funcName,\r\n      function_owner = self,\r\n      label          = data.label,\r\n      alignment      = 2,\r\n      position       = data.pos,\r\n      rotation       = data.rot or { 0, 0, 0 },\r\n      scale          = buttonScale,\r\n      width          = data.width,\r\n      height         = (data.font_size * data.rows) + 40,\r\n      font_size      = data.font_size,\r\n      color          = buttonColor,\r\n      font_color     = buttonFontColor,\r\n      value          = data.value\r\n    })\r\n  end\r\nend",
      "LuaScriptState": "{\"checkbox\":[{\"pos\":[-0.64,0.06,-1.23],\"rot\":[0,6,0],\"size\":235,\"state\":false},{\"pos\":[-0.5743,0.06,-1.23],\"rot\":[0,0,0],\"size\":235,\"state\":false},{\"pos\":[-0.5086,0.06,-1.23],\"rot\":[0,6,0],\"size\":262.5,\"state\":false},{\"pos\":[-0.4429,0.06,-1.23],\"rot\":[0,-2,0],\"size\":260,\"state\":false},{\"pos\":[-0.3772,0.06,-1.23],\"rot\":[0,7,0],\"size\":252.5,\"state\":false},{\"pos\":[-0.3115,0.06,-1.23],\"rot\":[0,0,0],\"size\":225,\"state\":false},{\"pos\":[0.82,0.06,-1.194],\"rot\":[0,0,0],\"size\":252.5,\"state\":false},{\"pos\":[0.8857,0.06,-1.194],\"rot\":[0,8,0],\"size\":255,\"state\":false},{\"pos\":[0.9514,0.06,-1.194],\"rot\":[0,3,0],\"size\":245,\"state\":false},{\"pos\":[1.0171,0.06,-1.194],\"rot\":[0,-2,0],\"size\":265,\"state\":false},{\"pos\":[1.0828,0.06,-1.194],\"rot\":[0,7,0],\"size\":237.5,\"state\":false},{\"pos\":[1.1485,0.06,-1.194],\"rot\":[0,-1,0],\"size\":232.5,\"state\":false},{\"pos\":[-0.61,0.06,-0.32],\"rot\":[0,-2,0],\"size\":247.5,\"state\":false},{\"pos\":[-0.5443,0.06,-0.32],\"rot\":[0,2,0],\"size\":232.5,\"state\":false},{\"pos\":[-0.4786,0.06,-0.32],\"rot\":[0,-2,0],\"size\":227.5,\"state\":false},{\"pos\":[-0.4129,0.06,-0.32],\"rot\":[0,2,0],\"size\":237.5,\"state\":false},{\"pos\":[-0.3472,0.06,-0.32],\"rot\":[0,6,0],\"size\":250,\"state\":false},{\"pos\":[-0.2815,0.06,-0.32],\"rot\":[0,3,0],\"size\":240,\"state\":false},{\"pos\":[0.945,0.06,-0.265],\"rot\":[0,6,0],\"size\":240,\"state\":false},{\"pos\":[1.0107,0.06,-0.265],\"rot\":[0,2,0],\"size\":230,\"state\":false},{\"pos\":[1.0764,0.06,-0.265],\"rot\":[0,0,0],\"size\":252.5,\"state\":false},{\"pos\":[1.1421,0.06,-0.265],\"rot\":[0,4,0],\"size\":232.5,\"state\":false},{\"pos\":[1.2078,0.06,-0.265],\"rot\":[0,-2,0],\"size\":235,\"state\":false},{\"pos\":[1.2735,0.06,-0.265],\"rot\":[0,2,0],\"size\":242.5,\"state\":false},{\"pos\":[-0.67,0.06,0.805],\"rot\":[0,6,0],\"size\":227.5,\"state\":false},{\"pos\":[-0.6043,0.06,0.805],\"rot\":[0,0,0],\"size\":272.5,\"state\":false},{\"pos\":[-0.5386,0.06,0.805],\"rot\":[0,8,0],\"size\":232.5,\"state\":false},{\"pos\":[-0.4729,0.06,0.805],\"rot\":[0,1,0],\"size\":252.5,\"state\":false},{\"pos\":[-0.4072,0.06,0.805],\"rot\":[0,-1,0],\"size\":225,\"state\":false},{\"pos\":[-0.3415,0.06,0.805],\"rot\":[0,0,0],\"size\":240,\"state\":false},{\"pos\":[0.89,0.06,0.7],\"rot\":[0,1,0],\"size\":272.5,\"state\":false},{\"pos\":[0.9557,0.06,0.7],\"rot\":[0,5,0],\"size\":267.5,\"state\":false},{\"pos\":[1.0214,0.06,0.7],\"rot\":[0,-1,0],\"size\":272.5,\"state\":false},{\"pos\":[1.0871,0.06,0.7],\"rot\":[0,0,0],\"size\":260,\"state\":false},{\"pos\":[1.1528,0.06,0.7],\"rot\":[0,-2,0],\"size\":257.5,\"state\":false},{\"pos\":[1.2185,0.06,0.7],\"rot\":[0,6,0],\"size\":232.5,\"state\":false},{\"pos\":[-0.772,0.06,1.88],\"rot\":[0,8,0],\"size\":272.5,\"state\":false},{\"pos\":[-0.7063,0.06,1.88],\"rot\":[0,4,0],\"size\":240,\"state\":false},{\"pos\":[-0.6406,0.06,1.88],\"rot\":[0,5,0],\"size\":272.5,\"state\":false},{\"pos\":[-0.5749,0.06,1.88],\"rot\":[0,-1,0],\"size\":267.5,\"state\":false},{\"pos\":[-0.5092,0.06,1.88],\"rot\":[0,-2,0],\"size\":230,\"state\":false},{\"pos\":[-0.4435,0.06,1.88],\"rot\":[0,2,0],\"size\":272.5,\"state\":false},{\"pos\":[-0.3778,0.06,1.88],\"rot\":[0,6,0],\"size\":250,\"state\":false},{\"pos\":[0.475,0.06,1.56],\"rot\":[0,1,0],\"size\":255,\"state\":false},{\"pos\":[0.5407,0.06,1.56],\"rot\":[0,-1,0],\"size\":275,\"state\":false},{\"pos\":[0.6064,0.06,1.56],\"rot\":[0,-1,0],\"size\":265,\"state\":false},{\"pos\":[0.6721,0.06,1.56],\"rot\":[0,-1,0],\"size\":230,\"state\":false},{\"pos\":[0.7378,0.06,1.56],\"rot\":[0,7,0],\"size\":237.5,\"state\":false},{\"pos\":[0.8035,0.06,1.56],\"rot\":[0,7,0],\"size\":262.5,\"state\":false},{\"pos\":[0.8692,0.06,1.56],\"rot\":[0,-2,0],\"size\":232.5,\"state\":false}],\"counter\":[],\"textbox\":[{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[-0.69,0.11,-1.58],\"rot\":[0,-3,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[0.765,0.11,-1.545],\"rot\":[0,3,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[-0.7,0.11,-0.66],\"rot\":[0,-1,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[0.82,0.11,-0.6],\"rot\":[0,-2,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[-0.63,0.11,0.455],\"rot\":[0,0,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[0.79,0.11,0.365],\"rot\":[0,0,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[-0.78,0.11,1.54],\"rot\":[0,-1,0],\"rows\":9,\"value\":\"\",\"width\":3250},{\"font_size\":215,\"label\":\"Click to type\",\"pos\":[0.585,0.11,1.22],\"rot\":[0,2,0],\"rows\":9,\"value\":\"\",\"width\":3250}]}",
      "MeasureMovement": false,
      "Name": "Custom_Token",
      "Nickname": "The Feast of Hemlock Vale - Campaign Log",
      "Snap": true,
      "Sticky": true,
      "Tags": [
        "CampaignLog"
      ],
      "Tooltip": true,
      "Transform": {
        "posX": 12.184,
        "posY": 1.531,
        "posZ": -30.198,
        "rotX": 0,
        "rotY": 270,
        "rotZ": 0,
        "scaleX": 3.25,
        "scaleY": 1,
        "scaleZ": 3.25
      },
      "Value": 0,
      "XmlUI": ""
    }
  },
  "Sticky": true,
  "Tags": [
    "CampaignLog"
  ],
  "Tooltip": true,
  "Transform": {
    "posX": -1.353,
    "posY": 1.531,
    "posZ": -26.603,
    "rotX": 0,
    "rotY": 270,
    "rotZ": 0,
    "scaleX": 3.25,
    "scaleY": 1,
    "scaleZ": 3.25
  },
  "Value": 0,
  "XmlUI": ""
}
