{
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "Autoraise": true,
  "ColorDiffuse": {
    "b": 1,
    "g": 1,
    "r": 1
  },
  "CustomImage": {
    "CustomTile": {
      "Stackable": false,
      "Stretch": true,
      "Thickness": 0.1,
      "Type": 0
    },
    "ImageScalar": 1,
    "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695252/F9415595789317D4FAB83601CD43D165168FBA46/",
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/775107869055943792/F71B0D381488194732C8C56F4582709E5347D0C7/",
    "WidthScale": 0
  },
  "Description": "",
  "DragSelectable": true,
  "GMNotes": "",
  "GUID": "f40183",
  "Grid": true,
  "GridProjection": false,
  "Hands": false,
  "HideWhenFaceDown": false,
  "IgnoreFoW": false,
  "LayoutGroupSortIndex": 0,
  "Locked": false,
  "LuaScript": "require(\"TheDream-Eaters/CampaignLog1\")",
  "LuaScriptState": "",
  "MeasureMovement": false,
  "Name": "Custom_Tile",
  "Nickname": "The Dream-Quest - Campaign Log",
  "Snap": true,
  "States": {
    "2": {
      "AltLookAngle": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "Autoraise": true,
      "ColorDiffuse": {
        "b": 1,
        "g": 1,
        "r": 1
      },
      "CustomImage": {
        "CustomTile": {
          "Stackable": false,
          "Stretch": true,
          "Thickness": 0.1,
          "Type": 0
        },
        "ImageScalar": 1,
        "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695252/F9415595789317D4FAB83601CD43D165168FBA46/",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/775107869055944280/1D37D5E062542452B411D8A0EE668F75B7A909CF/",
        "WidthScale": 0
      },
      "Description": "",
      "DragSelectable": true,
      "GMNotes": "",
      "GUID": "4e2191",
      "Grid": true,
      "GridProjection": false,
      "Hands": false,
      "HideWhenFaceDown": false,
      "IgnoreFoW": false,
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"CampaignLogLibrary\", function(require, _LOADED, __bundle_register, __bundle_modules)\n---@diagnostic disable: undefined-global\n\n-- returns the trauma values for the investigators from left to right (4x physical, 4x mental)\nfunction returnTrauma()\n  if returnTraumaCustom ~= nil then\n    return returnTraumaCustom()\n  else\n    return {\n      -- physical trauma from left to right\n      ref_buttonData.counter[1].value or 0,\n      ref_buttonData.counter[4].value or 0,\n      ref_buttonData.counter[7].value or 0,\n      ref_buttonData.counter[10].value or 0,\n\n      -- mental trauma from left to right\n      ref_buttonData.counter[2].value or 0,\n      ref_buttonData.counter[5].value or 0,\n      ref_buttonData.counter[8].value or 0,\n      ref_buttonData.counter[11].value or 0\n    }\n  end\nend\n\nfunction onLoad(savedData)\n  -- set this to true while editing and false when you have finished\n  disableSave       = false\n  checkBoxColor     = checkBoxColor or { 1, 1, 1, 0 }\n  checkboxFontColor = checkboxFontColor or { 0, 0, 0, 98 }\n  counterFontColor  = counterFontColor or { 0, 0, 0, 99 }\n  interfaceScale    = interfaceScale or { 0.1, 0.1, 0.1 }\n  minValue          = minValue or 0\n  maxValue          = maxValue or 99\n\n  if not disableSave and savedData and savedData ~= \"\" then\n    ref_buttonData = JSON.decode(savedData)\n  else\n    if createCampaignSpecificStuff ~= nil then\n      createCampaignSpecificStuff()\n    end\n    ref_buttonData = defaultButtonData\n  end\n\n  math.randomseed(seed or os.time())\n  createButtonsAndBoxes()\nend\n\nfunction updateSave()\n  self.script_state = disableSave and \"\" or JSON.encode(ref_buttonData)\nend\n\nfunction click_none() end\n\n-- generates a list of random characters from a list of eligible choices\nfunction generateCharList(num)\n  choices = choices or { 10007, 10008 }\n  local charList = {}\n  for i = 1, num do\n    table.insert(charList, choices[math.random(1, #choices)])\n  end\n  return charList\nend\n\nfunction click_checkbox(buttonIndex)\n  local state = ref_buttonData.checkbox[buttonIndex].state\n  ref_buttonData.checkbox[buttonIndex].state = not state\n  self.editButton({ index = buttonIndex - 1, label = (state and \"\" or string.char(cb_unicode[buttonIndex])) })\n  updateSave()\nend\n\nfunction click_counter(tableIndex, isRightClick)\n  local buttonIndex = tableIndex + #ref_buttonData.checkbox\n  local val = (ref_buttonData.counter[tableIndex].value or 0) + (isRightClick and -1 or 1)\n  local localMin = ref_buttonData.counter[tableIndex].minValue or minValue\n  local localMax = ref_buttonData.counter[tableIndex].maxValue or maxValue\n  ref_buttonData.counter[tableIndex].value = math.min(math.max(val, localMin), localMax)\n  self.editButton({ index = buttonIndex - 1, label = ref_buttonData.counter[tableIndex].value })\n  updateSave()\nend\n\nfunction click_textbox(i, value, selected)\n  if selected == false then\n    ref_buttonData.textbox[i].value = value\n    updateSave()\n  end\nend\n\nfunction createButtonsAndBoxes()\n  cb_unicode = generateCharList(#ref_buttonData.checkbox)\n  createCheckboxes()\n  createCounters()\n  createTextboxes()\nend\n\nfunction createCheckboxes()\n  for i, data in ipairs(ref_buttonData.checkbox) do\n    local funcName = \"checkbox\" .. i\n    self.setVar(funcName, function() click_checkbox(i) end)\n    self.createButton({\n      label          = data.state and string.char(cb_unicode[i]) or \"\",\n      click_function = funcName,\n      function_owner = self,\n      position       = data.pos,\n      rotation       = data.rot or { 0, 0, 0 },\n      height         = data.size or 300,\n      width          = data.size or 300,\n      font_size      = data.size or 300,\n      scale          = data.scale or interfaceScale,\n      color          = data.color or checkBoxColor,\n      font_color     = data.fontColor or checkboxFontColor\n    })\n  end\nend\n\nfunction createCounters()\n  for i, data in ipairs(ref_buttonData.counter) do\n    local buttonParameters          = {}\n    buttonParameters.function_owner = self\n    buttonParameters.scale          = data.scale or interfaceScale\n    buttonParameters.color          = data.color or { 1, 1, 1, 0 }\n    buttonParameters.font_color     = data.fontColor or counterFontColor\n    buttonParameters.label          = data.value or 0\n    buttonParameters.position       = data.pos\n    buttonParameters.height         = data.size or 400\n    buttonParameters.width          = data.size or 400\n    buttonParameters.font_size      = data.size or 400\n\n    local funcName                  = \"counter\" .. i\n    self.setVar(funcName, function(_, _, isRightClick) click_counter(i, isRightClick) end)\n    buttonParameters.click_function = funcName\n    self.createButton(buttonParameters)\n  end\nend\n\nfunction createTextboxes()\n  for i, data in ipairs(ref_buttonData.textbox) do\n    local funcName = \"textbox\" .. i\n    self.setVar(funcName, function(_, _, val, sel) click_textbox(i, val, sel) end)\n    self.createInput({\n      input_function = funcName,\n      function_owner = self,\n      label          = data.label or \"Click to type\",\n      alignment      = data.alignment or 2,\n      position       = data.pos,\n      rotation       = data.rot or { 0, 0, 0 },\n      scale          = data.scale or interfaceScale,\n      width          = data.width or 2350,\n      height         = ((data.font_size or 175) * (data.rows or 1)) + 40,\n      font_size      = data.font_size or 175,\n      color          = data.color,\n      font_color     = data.fontColor or { 0, 0, 0 },\n      value          = data.value or \"\"\n    })\n  end\nend\nend)\n__bundle_register(\"CyclopeanFoundations\/CampaignLog1\", function(require, _LOADED, __bundle_register, __bundle_modules)\n-- Campaign Log: Web of Dreams\ncheckBoxColor     = { 0.902, 0.886, 0.788 }\ndefaultButtonData = {\n  checkbox = {\n    --1 checkbox\n    {\n      pos  = { -0.931, 0.11, -0.006 },\n      size = 250\n    },\n    --2 checkbox\n    {\n      pos  = { -0.928, 0.11, 0.076 },\n      size = 250\n    },\n    --3 checkbox\n    {\n      pos  = { -0.924, 0.11, 0.154 },\n      size = 250\n    },\n    --4 checkbox\n    {\n      pos  = { -0.919, 0.11, 0.232 },\n      size = 250\n    },\n    --5 checkbox\n    {\n      pos  = { -0.919, 0.11, 0.313 },\n      size = 250\n    },\n    --6 checkbox\n    {\n      pos  = { -0.914, 0.11, 0.388 },\n      size = 250\n    },\n    --7 checkbox\n    {\n      pos  = { -0.914, 0.11, 0.471 },\n      size = 250\n    },\n    --8 checkbox\n    {\n      pos  = { -0.915, 0.11, 0.548 },\n      size = 250\n    },\n    --9 checkbox\n    {\n      pos  = { -0.915, 0.11, 0.624 },\n      size = 250\n    }\n  },\n  counter = {\n    --Slot one counter 1\n    { pos = { -0.74, 0.11, -0.45 } },\n\n    --Slot one counter 2\n    { pos = { -0.54, 0.11, -0.45 } },\n\n    --Slot one xp 1\n    { pos = { -0.54, 0.11, -0.55 } },\n\n    --Slot two counter 1\n    { pos = { -0.3, 0.11, -0.445 } },\n\n    --Slot two counter 2\n    { pos = { -0.09, 0.11, -0.445 } },\n\n    --Slot two xp 1\n    { pos = { -0.09, 0.11, -0.54 } },\n\n    --Slot three counter 1\n    { pos = { 0.13, 0.11, -0.44 } },\n\n    --Slot three counter 2\n    { pos = { 0.34, 0.11, -0.44 } },\n\n    --Slot three xp 1\n    { pos = { 0.35, 0.11, -0.54 } },\n\n    --Slot four counter 1\n    { pos = { 0.58, 0.11, -0.44 } },\n\n    --Slot four counter 2\n    { pos = { 0.78, 0.11, -0.44 } },\n\n    --Slot four xp 1\n    { pos = { 0.78, 0.11, -0.54 } },\n\n    --Steps of the Bridge\n    {\n      pos = { 0.652, 0.11, 0.811 },\n      size = 500\n    }\n  },\n  textbox = {\n    --Slot one player\n    {\n      pos       = { -0.677, 0.11, -0.70 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot one investigator\n    {\n      pos       = { -0.677, 0.11, -0.625 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot one story\n    {\n      pos       = { -0.677, 0.11, -0.27 },\n      rows      = 9,\n      width     = 2000,\n      font_size = 100\n    },\n    --Slot two player\n    {\n      pos       = { -0.24, 0.11, -0.70 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot two investigator\n    {\n      pos       = { -0.24, 0.11, -0.625 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot two story\n    {\n      pos       = { -0.24, 0.11, -0.27 },\n      rows      = 9,\n      width     = 2000,\n      font_size = 100\n    },\n    --Slot three player\n    {\n      pos       = { 0.21, 0.11, -0.70 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot three investigator\n    {\n      pos       = { 0.21, 0.11, -0.62 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot three story\n    {\n      pos       = { 0.21, 0.11, -0.268 },\n      rows      = 9,\n      width     = 2000,\n      font_size = 100\n    },\n    --Slot four player\n    {\n      pos       = { 0.65, 0.11, -0.70 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot four investigator\n    {\n      pos       = { 0.65, 0.11, -0.62 },\n      rows      = 1,\n      width     = 2000,\n      font_size = 150\n    },\n    --Slot four story\n    {\n      pos       = { 0.65, 0.11, -0.265 },\n      rows      = 9,\n      width     = 2000,\n      font_size = 100\n    },\n    --Campaign Notes 1\n    {\n      pos       = { 0.33, 0.11, 0.273 },\n      rows      = 10,\n      width     = 2500,\n      font_size = 150\n    },\n    --Campaign Notes 2\n    {\n      pos       = { 0.48, 0.11, 0.632 },\n      rows      = 8,\n      width     = 4000,\n      font_size = 150\n    },\n    --Killed Investigators\n    {\n      pos       = { -0.542, 0.11, 0.867 },\n      rows      = 4,\n      width     = 3500,\n      font_size = 150\n    },\n    --Chaos Bag\n    {\n      pos       = { 0.797, 0.11, 0.26 },\n      rows      = 10,\n      width     = 1500,\n      font_size = 150\n    }\n  }\n}\n\nrequire(\"CampaignLogLibrary\")\nend)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"CyclopeanFoundations\/CampaignLog1\")\nend)\nreturn __bundle_require(\"__root\")",
      "LuaScriptState": "",
      "MeasureMovement": false,
      "Name": "Custom_Tile",
      "Nickname": "The Web of Dreams - Campaign Log",
      "Snap": true,
      "Sticky": true,
      "Tags": [
        "CampaignLog"
      ],
      "Tooltip": true,
      "Transform": {
        "posX": -1.22,
        "posY": 1.48,
        "posZ": -26.87,
        "rotX": 0,
        "rotY": 270,
        "rotZ": 0,
        "scaleX": 7,
        "scaleY": 1,
        "scaleZ": 7
      },
      "Value": 0,
      "XmlUI": ""
    }
  },
  "Sticky": true,
  "Tags": [
    "CampaignLog"
  ],
  "Tooltip": true,
  "Transform": {
    "posX": -1.353,
    "posY": 1.481,
    "posZ": -26.603,
    "rotX": 0,
    "rotY": 270,
    "rotZ": 0,
    "scaleX": 7,
    "scaleY": 1,
    "scaleZ": 7
  },
  "Value": 0,
  "XmlUI": ""
}