{
  "GUID": "2634e3",
  "Name": "Custom_Model_Bag",
  "Transform": {
    "posX": 37.0352554,
    "posY": 1.48554015,
    "posZ": -7.280645,
    "rotX": 3.7416126e-07,
    "rotY": 270.0,
    "rotZ": 2.75230775e-07,
    "scaleX": 1.0,
    "scaleY": 0.14,
    "scaleZ": 1.0
  },
  "Nickname": "The Sands of Memphis Campaign Expansion",
  "ColorDiffuse": {
    "r": 1.0,
    "g": 1.0,
    "b": 1.0
  },
  "Tags": [
    "CampaignBox",
    "CleanUpHelper_ignore"
  ],
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomMesh": {
    "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515295/AFB8F257CE1E4973F4C06160A2E156C147AEE1E3/",
    "DiffuseURL": "https://i.imgur.com/uGpKv09.png",
    "ColliderURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515251/E1C8E8EDBCFEDCB529D88539FD89104537DE3584/",
    "MaterialIndex": 3,
    "TypeIndex": 6,
    "CustomShader": {
      "SpecularColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "SpecularIntensity": 0.0,
      "SpecularSharpness": 2.0,
      "FresnelStrength": 0.0
    }
  },
  "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-6}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 4\n            objPos.z = objPos.z * globalScaleFactor\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=1000, width=1000,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-1.25,0.1,-6}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-1.25,0.3,-7}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={1.25,0.3,-6}, rotation={0,0,0}, height=500, width=1200,\n          font_size=350, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={1.25,0.3,-8}, rotation={0,0,0}, height=500, width=1200,\n                font_size=350, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={1.25,0.3,-7}, rotation={0,0,0}, height=500, width=1200,\n                font_size=350, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-1.25,0.3,-8}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={1.35,1,6}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-1.25,1,6}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-6}, rotation={0,0,0}, height=500, width=1200,\n        font_size=350, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend",
  "LuaScriptState": "{\"ml\":{\"06f59e\":{\"lock\":false,\"pos\":{\"x\":12.25,\"y\":1.4815,\"z\":27.986},\"rot\":{\"x\":0,\"y\":270.0057,\"z\":0}},\"08f239\":{\"lock\":false,\"pos\":{\"x\":-1.6782,\"y\":1.4872,\"z\":44.163},\"rot\":{\"x\":-0.0004,\"y\":270.0016,\"z\":359.9229}},\"14f711\":{\"lock\":true,\"pos\":{\"x\":-3.6726,\"y\":1.583,\"z\":-15.0626},\"rot\":{\"x\":0,\"y\":269.9956,\"z\":0}},\"18b4a5\":{\"lock\":false,\"pos\":{\"x\":21.5755,\"y\":1.5315,\"z\":4.8772},\"rot\":{\"x\":0,\"y\":269.9998,\"z\":0}},\"1fa912\":{\"lock\":false,\"pos\":{\"x\":12.25,\"y\":1.4815,\"z\":-28.014},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"41bdcf\":{\"lock\":false,\"pos\":{\"x\":12.252,\"y\":1.4815,\"z\":11.986},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"4d0b51\":{\"lock\":false,\"pos\":{\"x\":21.5409,\"y\":1.5315,\"z\":9.8421},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"5c40c2\":{\"lock\":false,\"pos\":{\"x\":21.5648,\"y\":1.5315,\"z\":-0.1243},\"rot\":{\"x\":0,\"y\":269.9999,\"z\":0}},\"627004\":{\"lock\":false,\"pos\":{\"x\":3.8987,\"y\":1.4603,\"z\":-19.1796},\"rot\":{\"x\":0,\"y\":179.9933,\"z\":0}},\"7dc41d\":{\"lock\":false,\"pos\":{\"x\":12.25,\"y\":1.4815,\"z\":3.986},\"rot\":{\"x\":0,\"y\":270.0057,\"z\":0}},\"9d647a\":{\"lock\":false,\"pos\":{\"x\":21.5451,\"y\":1.5315,\"z\":-5.1399},\"rot\":{\"x\":0,\"y\":270.0079,\"z\":0}},\"9de2f6\":{\"lock\":false,\"pos\":{\"x\":12.251,\"y\":1.4815,\"z\":-20.014},\"rot\":{\"x\":0,\"y\":270.0058,\"z\":0}},\"9e9462\":{\"lock\":false,\"pos\":{\"x\":12.247,\"y\":1.4815,\"z\":-12.016},\"rot\":{\"x\":0,\"y\":270.0055,\"z\":0}},\"b95abd\":{\"lock\":false,\"pos\":{\"x\":12.249,\"y\":1.4815,\"z\":35.986},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"bf51c8\":{\"lock\":false,\"pos\":{\"x\":-1.353,\"y\":1.5815,\"z\":-26.603},\"rot\":{\"x\":0,\"y\":269.9982,\"z\":0}},\"c182b5\":{\"lock\":false,\"pos\":{\"x\":12.25,\"y\":1.4815,\"z\":-4.014},\"rot\":{\"x\":0,\"y\":269.9998,\"z\":0}},\"ce86a7\":{\"lock\":false,\"pos\":{\"x\":21.4989,\"y\":1.5315,\"z\":-10.271},\"rot\":{\"x\":0,\"y\":269.9697,\"z\":0}},\"ec7dc9\":{\"lock\":false,\"pos\":{\"x\":12.25,\"y\":1.4815,\"z\":19.9858},\"rot\":{\"x\":0,\"y\":270.0073,\"z\":0}}}}",
  "ContainedObjects": [
    {
      "GUID": "08f239",
      "Name": "Custom_PDF",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.993432,
        "scaleY": 1.0,
        "scaleZ": 2.993432
      },
      "Nickname": "Arkham.cards Taboo / Errata",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "CleanUpHelper_ignore"
      ],
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomPDF": {
        "PDFUrl": "https://github.com/ArkhamDotCards/adc-meta/raw/main/docs/adc-taboo-latest.pdf",
        "PDFPassword": "",
        "PDFPage": 0,
        "PDFPageOffset": 0
      }
    },
    {
      "GUID": "b95abd",
      "Name": "Custom_PDF",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.993432,
        "scaleY": 1.0,
        "scaleZ": 2.993432
      },
      "Nickname": "The Sands of Memphis Campaign Guide",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "CampaignGuide",
        "CleanUpHelper_ignore"
      ],
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomPDF": {
        "PDFUrl": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/adc-the_sands_of_memphis-campaign_guide-latest.pdf?raw=true",
        "PDFPassword": "",
        "PDFPage": 0,
        "PDFPageOffset": 0
      }
    },
    {
      "GUID": "06f59e",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario I: The Stormfront",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/xNViDWf.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":{\"01ed21\":{\"lock\":false,\"pos\":{\"x\":-26.94,\"y\":1.52,\"z\":7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"096d00\":{\"lock\":false,\"pos\":{\"x\":-33.54,\"y\":1.52,\"z\":7.65},\"rot\":{\"x\":0,\"y\":269.9993,\"z\":0}},\"099ef6\":{\"lock\":false,\"pos\":{\"x\":-17.0384,\"y\":1.5336,\"z\":0},\"rot\":{\"x\":0,\"y\":270.0002,\"z\":0}},\"0c2858\":{\"lock\":false,\"pos\":{\"x\":-11.9295,\"y\":1.52,\"z\":8.8964},\"rot\":{\"x\":0,\"y\":270.0003,\"z\":0}},\"0d3181\":{\"lock\":false,\"pos\":{\"x\":1.694,\"y\":1.558,\"z\":14.2415},\"rot\":{\"x\":0,\"y\":224.9999,\"z\":0}},\"121db3\":{\"lock\":false,\"pos\":{\"x\":-12.0031,\"y\":1.5336,\"z\":-6.4248},\"rot\":{\"x\":0,\"y\":269.9993,\"z\":0}},\"15021c\":{\"lock\":false,\"pos\":{\"x\":-33.54,\"y\":1.52,\"z\":0},\"rot\":{\"x\":0,\"y\":269.9993,\"z\":0}},\"1a880d\":{\"lock\":false,\"pos\":{\"x\":-30.2454,\"y\":1.5336,\"z\":-0.0028},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"1b37fe\":{\"lock\":false,\"pos\":{\"x\":-26.94,\"y\":1.52,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"26f003\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.52,\"z\":-11.48},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"43c5d1\":{\"lock\":false,\"pos\":{\"x\":-3.9288,\"y\":1.7772,\"z\":5.7218},\"rot\":{\"x\":0,\"y\":270.004,\"z\":180}},\"4c5d32\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.52,\"z\":3.83},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0}},\"64e3f4\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.52,\"z\":11.48},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"6b69ec\":{\"lock\":false,\"pos\":{\"x\":-40.14,\"y\":1.52,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":-20.34,\"y\":1.52,\"z\":0},\"rot\":{\"x\":0,\"y\":269.9996,\"z\":0}},\"8abc09\":{\"lock\":false,\"pos\":{\"x\":-12.0366,\"y\":1.5939,\"z\":6.5072},\"rot\":{\"x\":0,\"y\":269.9998,\"z\":180}},\"8d5789\":{\"lock\":false,\"pos\":{\"x\":-2.9534,\"y\":1.6136,\"z\":0.4116},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"a3ee76\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.52,\"z\":-3.83},\"rot\":{\"x\":0,\"y\":-0.0002,\"z\":0}},\"a85aa6\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.52,\"z\":-3.83},\"rot\":{\"x\":0,\"y\":-0.0001,\"z\":0}},\"bbda87\":{\"lock\":false,\"pos\":{\"x\":-3.8503,\"y\":1.5966,\"z\":-10.3898},\"rot\":{\"x\":0,\"y\":269.9982,\"z\":0}},\"bc8c1f\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.52,\"z\":3.83},\"rot\":{\"x\":0,\"y\":0.0001,\"z\":0}},\"c2ec5f\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.52,\"z\":-3.83},\"rot\":{\"x\":0,\"y\":0.0002,\"z\":0}},\"c9d9a2\":{\"lock\":false,\"pos\":{\"x\":-2.94,\"y\":1.6184,\"z\":-5.1041},\"rot\":{\"x\":0,\"y\":270.0122,\"z\":0}},\"d8afe1\":{\"lock\":false,\"pos\":{\"x\":-26.94,\"y\":1.52,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"fb9475\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.52,\"z\":3.83},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"ffb546\":{\"lock\":false,\"pos\":{\"x\":-33.54,\"y\":1.52,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":269.9995,\"z\":0}}}}",
      "ContainedObjects": [
        {
          "GUID": "01ed21",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "096d00",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "099ef6",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "0c2858",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 0.781351447,
            "scaleY": 1.0,
            "scaleZ": 0.781351447
          },
          "Nickname": "The Stormwall Location Setup Helper",
          "Description": "Click Setup to shuffle the Storm Wall locations and put them into play unrevealed.",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/F5XlSAG.png",
            "ImageSecondaryURL": "https://i.imgur.com/F5XlSAG.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 0,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "START_POSITIONS = { {-30.22, 1.64, 7.57}, {-30.22, 1.63, -7.70}, {-36.77, 1.65, -0.03}, {-30.22, 1.64, 15.19}, {-36.77, 1.65, 7.57}, {-43.37, 1.66, -0.03}, {-36.77, 1.64, -7.70}, {-30.22, 1.63, -15.28}, {-23.73, 1.65, 7.57}, {-23.73, 1.65, -0.03}, {-23.73, 1.65, -7.70} }\n\nfunction onLoad()\n    self.createButton({\n        label=\"Set Up\",\n        click_function=\"setup\",\n        function_owner=self,\n        position={0,0.1,0.4},\n        height=120,\n        width=400,\n        scale={x=1.75, y=1.75, z=1.75},\n        font_size=100\n    })\n\n    ttDeck = getObjectFromGUID(\"8abc09\")\n    math.randomseed(os.time())\nend\n\nfunction setup(obj, color, alt_click)\n    if SETUP_DONE then return end\n    SETUP_DONE = true\n\n    ttDeck.shuffle()\n    for i,pos in ipairs(START_POSITIONS) do\n        ttDeck.takeObject({\n            position = pos,\n            smooth = false,\n            callback_function = storeGuid\n        })\n    end\nend\n\nfunction setup_2(obj, color, alt_click)\n    if SETUP2_DONE then return end\n    SETUP2_DONE = true\n\n    local ttIndexes = {}\n    for i,obj in ipairs(chest.getObjects()) do\n        if obj.name == \"Tidal Tunnel\" then\n            table.insert(ttIndexes, obj.index)\n        end\n    end\n    for i=#ttIndexes,1,-1 do\n        chest.takeObject({\n            index = ttIndexes[i],\n            position = ttDeck.getPosition() + Vector(0,1,0),\n            smooth = false\n        })\n    end\n\n    Wait.time(setup_3, 1)\nend\n\nfunction setup_3()\n    ttDeck.shuffle()\n    local play = {}\n\n    if isRevealed(START_POSITIONS[1]) then\n        play.TL = true;\n        play.ML = true;\n    end\n    if isRevealed(START_POSITIONS[2]) then\n        play.TR = true;\n        play.MR = true;\n    end\n    if isRevealed(START_POSITIONS[3]) then\n        play.ML = true;\n        play.B = true;\n        play.MR = true;\n    end\n\n    for key,pos in pairs(ACT1_POSITIONS) do\n        if play[key] == true then\n            ttDeck.takeObject({\n                position = pos,\n                smooth = false\n            })\n        end\n    end\nend\n\nfunction isRevealed(pos)\n    local objs = Physics.cast({\n        origin = pos,\n        direction = { x=0, y=-1, z=0 },\n        type = 3\n    })\n    local card = nil\n    for i,v in ipairs(objs) do\n        local obj = v.hit_object\n        if obj.type == \"Card\" then\n            card = obj\n            break\n        end\n    end\n\n    if card ~= nil and card.is_face_down then return true end\n    return false\nend\n"
        },
        {
          "GUID": "0d3181",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "rotY": 225,
            "scaleX": 2.0,
            "scaleY": 2.0,
            "scaleZ": 2.0
          },
          "Nickname": "Set-aside",
          "Description": "The Stormfront",
          "ColorDiffuse": {
            "r": 0.02148666,
            "g": 0.00100758043,
            "b": 0.02148666
          },
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/764975951334964971/3078F312706FC974833ECD2A359B87FD4F283509/",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/764975951334960553/C518D80E31E27DB23EEAC8CF9253E59798865790/",
            "NormalURL": "https://steamusercontent-a.akamaihd.net/ugc/764975951334960069/E70E4A58A1B7827F1E5E2AF9FF44DF0BD5DA33F7/",
            "MaterialIndex": 1,
            "TypeIndex": 6
          },
          "ContainedObjects": [
            {
              "GUID": "1809e3",
              "Name": "Deck",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cairo Actual Encounter Set",
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "Hands": false,
              "DeckIDs": [
                8703100,
                8702900,
                8703000
              ],
              "CustomDeck": {
                "87031": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/104a.png?raw=true",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "87029": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/103a.png?raw=true",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "87030": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/102a.png?raw=true",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "ContainedObjects": [
                {
                  "GUID": "463266",
                  "Name": "CardCustom",
                  "Transform": {
                    "rotY": 270,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Tobias Jackson: The Fixer",
                  "GMNotes": "{\n  \"id\": \"MB104\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Ally. Mercenary.\",\n  \"permanent\": true,\n  \"cycle\": \"The Sands of Memphis\"\n}",
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "CardID": 8703100,
                  "CustomDeck": {
                    "87031": {
                      "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/104a.png?raw=true",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  }
                },
                {
                  "GUID": "9ddec9",
                  "Name": "CardCustom",
                  "Transform": {
                    "rotY": 270,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Carmen Carlyle: Catching Fire",
                  "GMNotes": "{\n  \"id\": \"MB103\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Ally. Bystander.\",\n  \"permanent\": true,\n  \"cycle\": \"The Sands of Memphis\"\n}",
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "CardID": 8702900,
                  "CustomDeck": {
                    "87029": {
                      "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/103a.png?raw=true",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  }
                },
                {
                  "GUID": "6844a8",
                  "Name": "CardCustom",
                  "Transform": {
                    "rotY": 270,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Arno Dupree: Equivalent Exchange",
                  "GMNotes": "{\n  \"id\": \"MB102\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Ally. Miskatonic. Scholar.\",\n  \"permanent\": true,\n  \"cycle\": \"The Sands of Memphis\"\n}",
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "CardID": 8703000,
                  "CustomDeck": {
                    "87030": {
                      "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/102a.png?raw=true",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  }
                }
              ]
            },
            {
              "GUID": "b4b4b9",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Goliath Scarab: Harbinger of the Roil",
              "GMNotes": "{\n  \"id\": \"MB124\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Ancient One. Elite. Insect.\",\n  \"victory\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8702800,
              "CustomDeck": {
                "87028": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/124a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            }
          ]
        },
        {
          "GUID": "121db3",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Tesnim Amanpour: The Jade of Cairo",
          "GMNotes": "{\n  \"id\": \"MB101\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Ally. Miskatonic. Scholar.\",\n  \"permanent\": true,\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 8663000,
          "CustomDeck": {
            "86630": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/101a.png?raw=true",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "15021c",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "1a880d",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "The Pyramidion: Shattered Ziggurat",
          "GMNotes": "{\n  \"id\": \"MB111\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ancient. Forgotten.\",\n  \"victory\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612300,
          "CustomDeck": {
            "86123": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/111a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/111b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "1b37fe",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "26f003",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "43c5d1",
          "Name": "Deck",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Encounter Deck",
          "Tags": [
            "ScenarioCard"
          ],
          "Hands": false,
          "DeckIDs": [
            8664600,
            8666500,
            8663800,
            8664300,
            8665400,
            8665300,
            8664700,
            8664800,
            8666000,
            8663700,
            8666600,
            8664100,
            8665500,
            8666200,
            8664900,
            8664000,
            8665000,
            8666400,
            8665200,
            8665100,
            8664400,
            8665700,
            8664500,
            8665800,
            8663500,
            8663600,
            8664200,
            8666300,
            8666100,
            8665600,
            8665900,
            8663900,
            8663100,
            8663400,
            8663300,
            8663200
          ],
          "CustomDeck": {
            "86646": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/157a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86665": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/139a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86638": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/125a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86643": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/154a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86654": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/145a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86653": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/144a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86647": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/149a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86648": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/150a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86660": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/131a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86637": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/160a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86666": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/140a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86641": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/152a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86655": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/146a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86662": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/136a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86649": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/151a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86640": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/127a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86650": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/141a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86664": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/138a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86652": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/143a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86651": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/142a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86644": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/155a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86657": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/148a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86645": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/156a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86658": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/129a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86635": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/158a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86636": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/159a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86642": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/153a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86663": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/137a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86661": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/135a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86656": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/147a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86659": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/130a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86639": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/126a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86631": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/128a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86634": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/134a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86633": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/133a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86632": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/132a.png?raw=true",
              "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "ContainedObjects": [
            {
              "GUID": "004e87",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Chimeric Scorpion",
              "GMNotes": "{\n  \"id\": \"MB157\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Creature. Monster.\",\n  \"victory\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664600,
              "CustomDeck": {
                "86646": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/157a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "05a29c",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Quicksand",
              "GMNotes": "{\n  \"id\": \"MB139\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Trap.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666500,
              "CustomDeck": {
                "86665": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/139a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "b4b4b9",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "The Cavern of Quietus",
              "GMNotes": "{\n  \"id\": \"MB125\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Discovery.\",\n  \"victory\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663800,
              "CustomDeck": {
                "86638": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/125a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "cd7dba",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 185,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Carrion Scarabs",
              "GMNotes": "{\n  \"id\": \"MB154\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Creature. Insect.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664300,
              "CustomDeck": {
                "86643": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/154a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "aa7b17",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sand Storm",
              "GMNotes": "{\n  \"id\": \"MB145\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665400,
              "CustomDeck": {
                "86654": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/145a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "aa7b17",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rough Divide",
              "GMNotes": "{\n  \"id\": \"MB144\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard. Obstacle.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665300,
              "CustomDeck": {
                "86653": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/144a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "c43589",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dune Watcher",
              "GMNotes": "{\n  \"id\": \"MB149\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664700,
              "CustomDeck": {
                "86647": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/149a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "67ad55",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dune Watcher",
              "GMNotes": "{\n  \"id\": \"MB150\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664800,
              "CustomDeck": {
                "86648": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/150a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "5d0bfe",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ancient Architecture",
              "GMNotes": "{\n  \"id\": \"MB131\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Mystery.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666000,
              "CustomDeck": {
                "86660": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/131a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "0f3f6c",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Whispers of Nyarlathotep",
              "GMNotes": "{\n  \"id\": \"MB160\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Madness.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663700,
              "CustomDeck": {
                "86637": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/160a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "16ea2a",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Quicksand",
              "GMNotes": "{\n  \"id\": \"MB140\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Trap.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666600,
              "CustomDeck": {
                "86666": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/140a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "d2af69",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Carrion Scarabs",
              "GMNotes": "{\n  \"id\": \"MB152\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Creature. Insect.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664100,
              "CustomDeck": {
                "86641": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/152a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "3dd870",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sand Storm",
              "GMNotes": "{\n  \"id\": \"MB146\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665500,
              "CustomDeck": {
                "86655": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/146a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "94228a",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Meteor Shower",
              "GMNotes": "{\n  \"id\": \"MB136\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666200,
              "CustomDeck": {
                "86662": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/136a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "bd3023",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dune Watcher",
              "GMNotes": "{\n  \"id\": \"MB151\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Humanoid. Cultist.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664900,
              "CustomDeck": {
                "86649": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/151a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "570d9a",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "The Hollow Bastion",
              "GMNotes": "{\n  \"id\": \"MB127\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Discovery.\",\n  \"victory\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664000,
              "CustomDeck": {
                "86640": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/127a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "56e464",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rough Divide",
              "GMNotes": "{\n  \"id\": \"MB141\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard. Obstacle.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665000,
              "CustomDeck": {
                "86650": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/141a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "5d0bfe",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Quicksand",
              "GMNotes": "{\n  \"id\": \"MB138\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Trap.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666400,
              "CustomDeck": {
                "86664": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/138a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "e63515",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rough Divide",
              "GMNotes": "{\n  \"id\": \"MB143\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard. Obstacle.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665200,
              "CustomDeck": {
                "86652": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/143a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "fce173",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rough Divide",
              "GMNotes": "{\n  \"id\": \"MB142\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard. Obstacle.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665100,
              "CustomDeck": {
                "86651": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/142a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "db3874",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Locust Swarm",
              "GMNotes": "{\n  \"id\": \"MB155\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Terror.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664400,
              "CustomDeck": {
                "86644": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/155a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "0b35f1",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sand Storm",
              "GMNotes": "{\n  \"id\": \"MB148\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665700,
              "CustomDeck": {
                "86657": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/148a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "db348b",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Locust Swarm",
              "GMNotes": "{\n  \"id\": \"MB156\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Terror.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664500,
              "CustomDeck": {
                "86645": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/156a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "f92f97",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ancient Architecture",
              "GMNotes": "{\n  \"id\": \"MB129\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Mystery.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665800,
              "CustomDeck": {
                "86658": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/129a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "ece69c",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Whispers of Nyarlathotep",
              "GMNotes": "{\n  \"id\": \"MB158\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Madness.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663500,
              "CustomDeck": {
                "86635": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/158a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "af2fa2",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Whispers of Nyarlathotep",
              "GMNotes": "{\n  \"id\": \"MB159\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Madness.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663600,
              "CustomDeck": {
                "86636": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/159a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "490e57",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Carrion Scarabs",
              "GMNotes": "{\n  \"id\": \"MB153\",\n  \"class\": \"Mythos\",\n  \"type\": \"Enemy\",\n  \"traits\": \"Creature. Insect.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8664200,
              "CustomDeck": {
                "86642": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/153a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "97202a",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Meteor Shower",
              "GMNotes": "{\n  \"id\": \"MB137\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666300,
              "CustomDeck": {
                "86663": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/137a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "d2af69",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 355,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Meteor Shower",
              "GMNotes": "{\n  \"id\": \"MB135\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8666100,
              "CustomDeck": {
                "86661": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/135a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "295e87",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sand Storm",
              "GMNotes": "{\n  \"id\": \"MB147\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hazard.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665600,
              "CustomDeck": {
                "86656": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/147a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "092e14",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ancient Architecture",
              "GMNotes": "{\n  \"id\": \"MB130\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Mystery.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8665900,
              "CustomDeck": {
                "86659": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/130a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "19a945",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "The Firewall",
              "GMNotes": "{\n  \"id\": \"MB126\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Discovery.\",\n  \"victory\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663900,
              "CustomDeck": {
                "86639": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/126a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "c258d6",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "The Pharaoh's Menagerie",
              "GMNotes": "{\n  \"id\": \"MB128\",\n  \"class\": \"Neutral\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Discovery. Memory. Madness.\",\n  \"weakness\": true,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663100,
              "CustomDeck": {
                "86631": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/128a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "1b3e24",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dust Devil",
              "GMNotes": "{\n  \"id\": \"MB134\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hex.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663400,
              "CustomDeck": {
                "86634": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/134a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "6c8d0c",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dust Devil",
              "GMNotes": "{\n  \"id\": \"MB133\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hex.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663300,
              "CustomDeck": {
                "86633": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/133a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "092e14",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dust Devil",
              "GMNotes": "{\n  \"id\": \"MB132\",\n  \"class\": \"Mythos\",\n  \"type\": \"Treachery\",\n  \"traits\": \"Hex.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8663200,
              "CustomDeck": {
                "86632": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/132a.png?raw=true",
                  "BackURL": "https://raw.githubusercontent.com/ArkhamDotCards/adc-meta/main/img/cardback-encounter-tts.png",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            }
          ]
        },
        {
          "GUID": "4c5d32",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "64e3f4",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "6b69ec",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "7234af",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "8abc09",
          "Name": "Deck",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Storm Wall Locations",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "Hands": false,
          "DeckIDs": [
            8704200,
            8703600,
            8703800,
            8703700,
            8704000,
            8704500,
            8703900,
            8703500,
            8704600,
            8704100,
            8704400
          ],
          "CustomDeck": {
            "87042": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/117a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/117b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87036": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/120a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/120b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87038": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/122a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/122b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87037": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/121a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/121b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87040": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/119a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/119b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87045": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/114a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/114b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87039": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/123a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/123b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87035": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/118a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/118b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87046": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/116a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/116b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87041": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/113a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/113b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87044": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/115a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/115b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "ContainedObjects": [
            {
              "GUID": "dfd6c7",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Hidden Oasis",
              "GMNotes": "{\n  \"id\": \"MB117\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Mirage.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8704200,
              "CustomDeck": {
                "87042": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/117a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/117b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "8a4fdd",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Looking Glass",
              "GMNotes": "{\n  \"id\": \"MB120\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ritual Site.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8703600,
              "CustomDeck": {
                "87036": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/120a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/120b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "1cf807",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Looking Glass",
              "GMNotes": "{\n  \"id\": \"MB122\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ritual Site.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8703800,
              "CustomDeck": {
                "87038": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/122a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/122b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "bb76f9",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Looking Glass",
              "GMNotes": "{\n  \"id\": \"MB121\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ritual Site.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8703700,
              "CustomDeck": {
                "87037": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/121a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/121b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "e2da69",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "The New Colossus: Icon of Nyarlathotep",
              "GMNotes": "{\n  \"id\": \"MB119\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"victory\": 1,\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      },\n      {\n        \"count\": 1,\n        \"type\": \"Doom\",\n        \"token\": \"doom\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8704000,
              "CustomDeck": {
                "87040": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/119a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/119b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "df2b9e",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Crumbling Epitaph: The Dirge of the Scarab Lord",
              "GMNotes": "{\n  \"id\": \"MB114\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8704500,
              "CustomDeck": {
                "87045": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/114a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/114b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "443076",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Looking Glass",
              "GMNotes": "{\n  \"id\": \"MB123\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Ritual Site.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8703900,
              "CustomDeck": {
                "87039": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/123a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/123b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "4e8321",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Serpentine Sepulcher: Cradle of Apophis",
              "GMNotes": "{\n  \"id\": \"MB118\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Graveyard.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"victory\": 1,\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 2,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      },\n      {\n        \"count\": 1,\n        \"type\": \"Doom\",\n        \"token\": \"doom\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8703500,
              "CustomDeck": {
                "87035": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/118a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/118b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "3b8e7a",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Elephant Graveyard",
              "GMNotes": "{\n  \"id\": \"MB116\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Graveyard.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8704600,
              "CustomDeck": {
                "87046": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/116a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/116b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "04468a",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cactus Garden",
              "GMNotes": "{\n  \"id\": \"MB113\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Wastes.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"countPerInvestigator\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8704100,
              "CustomDeck": {
                "87041": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/113a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/113b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "19e2c4",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Desolate Petra",
              "GMNotes": "{\n  \"id\": \"MB115\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. City.\",\n  \"cycle\": \"The Sands of Memphis\",\n  \"locationFront\": {\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Doom\",\n        \"token\": \"doom\"\n      }\n    ]\n  }\n}",
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "CardID": 8704400,
              "CustomDeck": {
                "87044": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/115a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/115b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            }
          ]
        },
        {
          "GUID": "8d5789",
          "Name": "Deck",
          "Transform": {
            "rotY": 270,
            "scaleX": 0.92564106,
            "scaleY": 1.0,
            "scaleZ": 0.92564106
          },
          "Nickname": "Agenda Deck",
          "Tags": [
            "ScenarioCard"
          ],
          "Hands": false,
          "DeckIDs": [
            8611800,
            8611700
          ],
          "CustomDeck": {
            "86118": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/107a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/107b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "86117": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/106a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/106b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "ContainedObjects": [
            {
              "GUID": "f3b64d",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 0.92564106,
                "scaleY": 1.0,
                "scaleZ": 0.92564106
              },
              "Nickname": "Agenda 2a: The Unsealed Casket",
              "GMNotes": "{\n  \"id\": \"MB107\",\n  \"class\": \"Mythos\",\n  \"type\": \"Agenda\",\n  \"doomThreshold\": 16,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8611800,
              "CustomDeck": {
                "86118": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/107a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/107b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "b125ed",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 0.92564106,
                "scaleY": 1.0,
                "scaleZ": 0.92564106
              },
              "Nickname": "Agenda 1a: Tempest Alley",
              "GMNotes": "{\n  \"id\": \"MB106\",\n  \"class\": \"Mythos\",\n  \"type\": \"Agenda\",\n  \"doomThreshold\": 12,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8611700,
              "CustomDeck": {
                "86117": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/106a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/106b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            }
          ]
        },
        {
          "GUID": "a3ee76",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "a85aa6",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "bbda87",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Scenario",
          "Description": "The Stormfront",
          "GMNotes": "{\n  \"id\": \"MB105\",\n  \"class\": \"Mythos\",\n  \"type\": \"ScenarioReference\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "ScenarioCard"
          ],
          "CardID": 8611600,
          "CustomDeck": {
            "86116": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/105a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/105b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "bc8c1f",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "c2ec5f",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "c9d9a2",
          "Name": "Deck",
          "Transform": {
            "rotY": 270,
            "scaleX": 0.92564106,
            "scaleY": 1.0,
            "scaleZ": 0.92564106
          },
          "Nickname": "Act Deck",
          "Tags": [
            "ScenarioCard"
          ],
          "Hands": false,
          "DeckIDs": [
            8702700,
            8702600,
            8702500
          ],
          "CustomDeck": {
            "87027": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/110a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/110b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87026": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/109a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/109b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87025": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/108a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/108b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "ContainedObjects": [
            {
              "GUID": "96a227",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Act 3a: By Four, They Come",
              "GMNotes": "{\n  \"id\": \"MB110\",\n  \"class\": \"Mythos\",\n  \"type\": \"Act\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8702700,
              "CustomDeck": {
                "87027": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/110a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/110b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "c2d22d",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Act 2a: Prismatic Alignment",
              "GMNotes": "{\n  \"id\": \"MB109\",\n  \"class\": \"Mythos\",\n  \"type\": \"Act\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8702600,
              "CustomDeck": {
                "87026": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/109a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/109b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "71459d",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "scaleX": 0.92564106,
                "scaleY": 1.0,
                "scaleZ": 0.92564106
              },
              "Nickname": "Act 1a: Missing in Action",
              "GMNotes": "{\n  \"id\": \"MB108\",\n  \"class\": \"Mythos\",\n  \"type\": \"Act\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "ScenarioCard"
              ],
              "CardID": 8702500,
              "CustomDeck": {
                "87025": {
                  "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/108a.png?raw=true",
                  "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/108b.png?raw=true",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            }
          ]
        },
        {
          "GUID": "d8afe1",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "fb9475",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "ffb546",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 270,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        }
      ],
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "ec7dc9",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario II: Plausible Deniability",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/DzeqB4E.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":{\"045d2d\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.5336,\"z\":3.83},\"rot\":{\"x\":0,\"y\":270.0004,\"z\":180}},\"077221\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.52,\"z\":0},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"099ef6\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.5336,\"z\":7.65},\"rot\":{\"x\":0,\"y\":270.0001,\"z\":180}},\"16f4a4\":{\"lock\":false,\"pos\":{\"x\":-26.8409,\"y\":1.52,\"z\":-9.5921},\"rot\":{\"x\":0,\"y\":120,\"z\":0}},\"172e95\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.5336,\"z\":3.83},\"rot\":{\"x\":0,\"y\":270.0002,\"z\":180}},\"280710\":{\"lock\":false,\"pos\":{\"x\":-17.0391,\"y\":1.5336,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"2d6d7b\":{\"lock\":false,\"pos\":{\"x\":-26.8277,\"y\":1.52,\"z\":-2.036},\"rot\":{\"x\":0,\"y\":120,\"z\":0}},\"44b0c5\":{\"lock\":false,\"pos\":{\"x\":-26.6672,\"y\":1.52,\"z\":9.6027},\"rot\":{\"x\":0,\"y\":60.0018,\"z\":0}},\"46a62a\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.5336,\"z\":-3.83},\"rot\":{\"x\":0,\"y\":270.0004,\"z\":180}},\"4cd04d\":{\"lock\":false,\"pos\":{\"x\":-33.6582,\"y\":1.52,\"z\":-5.7292},\"rot\":{\"x\":0,\"y\":119.9913,\"z\":0}},\"5870b3\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.52,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"5cdb4c\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.5336,\"z\":-3.83},\"rot\":{\"x\":0,\"y\":270.0004,\"z\":180}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.52,\"z\":7.65},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"8ce455\":{\"lock\":false,\"pos\":{\"x\":-26.9889,\"y\":1.52,\"z\":2.0144},\"rot\":{\"x\":0,\"y\":60.0204,\"z\":0}},\"94c121\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.5336,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"973f47\":{\"lock\":false,\"pos\":{\"x\":-33.7412,\"y\":1.52,\"z\":-1.9962},\"rot\":{\"x\":0,\"y\":60.0691,\"z\":0}},\"9c1037\":{\"lock\":false,\"pos\":{\"x\":-33.2627,\"y\":1.52,\"z\":5.6472},\"rot\":{\"x\":0,\"y\":59.9767,\"z\":0}},\"9ea95d\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.52,\"z\":-3.83},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"a6eb30\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.52,\"z\":0},\"rot\":{\"x\":0,\"y\":0,\"z\":0}},\"b0163b\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.52,\"z\":3.83},\"rot\":{\"x\":0,\"y\":-0.0001,\"z\":0}},\"b2ceb2\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.5336,\"z\":11.4801},\"rot\":{\"x\":0,\"y\":270.0005,\"z\":180}},\"c420e5\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.5336,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":269.9999,\"z\":180}},\"c45e5c\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.5336,\"z\":-11.48},\"rot\":{\"x\":0,\"y\":270.0004,\"z\":180}},\"d4a87f\":{\"lock\":false,\"pos\":{\"x\":-33.3664,\"y\":1.52,\"z\":1.6962},\"rot\":{\"x\":0,\"y\":119.6406,\"z\":0}},\"f5cd55\":{\"lock\":false,\"pos\":{\"x\":-26.5771,\"y\":1.52,\"z\":-5.8084},\"rot\":{\"x\":0,\"y\":59.9107,\"z\":0}},\"fcaed7\":{\"lock\":false,\"pos\":{\"x\":-26.8289,\"y\":1.52,\"z\":5.5433},\"rot\":{\"x\":0,\"y\":120,\"z\":0}}}}",
      "ContainedObjects": [
        {
          "GUID": "280710",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MBXXX\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Pyramidion. Central.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8703200,
          "CustomDeck": {
            "87032": {
              "FaceURL": "https://i.imgur.com/N2heZfJ.jpg",
              "BackURL": "https://i.imgur.com/vmkVmiE.jpg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "b2ceb2",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "7234af",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "172e95",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "a6eb30",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "5cdb4c",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "5870b3",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "c45e5c",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "16f4a4",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 120,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "1": {
              "GUID": "eec601",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 300,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Path",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.60453,
                "g": 0.60453,
                "b": 0.60453
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 300,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "f5cd55",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 60,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "1": {
              "GUID": "88d5cb",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 60,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Path",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.60453,
                "g": 0.60453,
                "b": 0.60453
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 60,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "2d6d7b",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 120,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "1": {
              "GUID": "6223e2",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 300,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Path",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.60453,
                "g": 0.60453,
                "b": 0.60453
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 300,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "8ce455",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 60,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "1": {
              "GUID": "96d308",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 60,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Path",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.60453,
                "g": 0.60453,
                "b": 0.60453
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "fcaed7",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 120,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "1": {
              "GUID": "5b2193",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 300,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Path",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.60453,
                "g": 0.60453,
                "b": 0.60453
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "44b0c5",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 60,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "1": {
              "GUID": "3c5b4e",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 60,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Path",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.60453,
                "g": 0.60453,
                "b": 0.60453
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "099ef6",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "b0163b",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "94c121",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "9ea95d",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "c420e5",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "9c1037",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 60,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "d4a87f",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 120,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "973f47",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 60,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "4cd04d",
          "Name": "Custom_Tile",
          "Transform": {
            "rotY": 120,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "045d2d",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "077221",
          "Name": "Custom_Tile",
          "Transform": {
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Path",
          "Memo": "path",
          "ColorDiffuse": {
            "r": 0.60453,
            "g": 0.60453,
            "b": 0.60453
          },
          "Tags": [
            "Location"
          ],
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14735298199809840335/8217039E470F8A3EA8FD19F181D44E4DB53BC8D3/",
            "ImageSecondaryURL": "",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "States": {
            "2": {
              "GUID": "44b0c5",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 270,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/13815382431563348149/C142502E0E83DD88FD20A21961857CC0E11288D0/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "rotY": 275,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Memo": "path",
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "Tags": [
                "Location"
              ],
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/17919981479729655645/561CBDC7F488F0498310D66370A3B9C12635B5D6/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              }
            }
          }
        },
        {
          "GUID": "46a62a",
          "Name": "CardCustom",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "GMNotes": "{\n  \"id\": \"MB112\",\n  \"class\": \"Mythos\",\n  \"type\": \"Location\",\n  \"traits\": \"Desert. Campsite. Ruins.\",\n  \"cycle\": \"The Sands of Memphis\"\n}",
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "CardID": 8612400,
          "CustomDeck": {
            "86124": {
              "FaceURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112a.png?raw=true",
              "BackURL": "https://github.com/ArkhamDotCards/thesandsofmemphis/blob/main/img/enUS/no-bleed/112b.png?raw=true",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        }
      ],
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "41bdcf",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario III: Her Infernal Majesty",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/W9BTxOX.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":[]}",
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "7dc41d",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario IV: Safe Harbor",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/dHA8AVi.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":[]}",
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "c182b5",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario V: The Jackal's Prize",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/eeYf3HL.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":[]}",
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "9e9462",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario VI: Balancing the Scales",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/qhzeCj1.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":[]}",
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "9de2f6",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario VI: All the Devils Are Here",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/I7pi9qZ.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":[]}",
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "1fa912",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Scenario VIII: The Second Sun",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
        "DiffuseURL": "https://i.imgur.com/J5MiXSH.png",
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        }
      },
      "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n",
      "LuaScriptState": "{\"ml\":[]}",
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    },
    {
      "GUID": "bf51c8",
      "Name": "Custom_Token",
      "Transform": {
        "rotY": 270,
        "scaleX": 3.49981213,
        "scaleY": 1.0,
        "scaleZ": 3.49981213
      },
      "Nickname": "The Sands of Memphis Campaign Log",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "CampaignLog",
        "CleanUpHelper_ignore"
      ],
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/14124589613908650428/B027C0020E70D9CD901F426231F3F518C9B168FB/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "--[[    Character Sheet Template    by: MrStump\n\nYou can set up your own character sheet if you follow these steps.\n\nStep 1) Change the character sheet image\n    -Right click on the character sheet, click Custom\n    -Replace the image URL with one for your character sheet\n    -Click import, make sure your sheet loads\n    -SAVE THE GAME (the table setup)\n    -LOAD FROM THAT SAVE YOU JUST MADE\n\nStep 2) Edit script to fit your character sheet\n    -Below you will see some general options, and then the big data table\n    -The data table is what determines how many of which buttons are made\n        -Checkboxes\n        -Counters\n        -Textboxes\n    -By default, there are 3 of each. You can add more or remove entries\n    -If you intend to add/remove, be sure only to add/remove ENTRIES\n        -This is what an entry looks like:\n            {\n                pos   = {-0.977,0.1,-0.589},\n                size  = 800,\n                state = false\n            },\n        -Deleting the whole thing would remove that specific item on the sheet\n        -Copy and pasting it after another entry would create another\n    -Each entry type has unique data points (pos, size, state, etc)\n        -Do not try to add in your own data points or remove them individually\n        -There is a summary of what each point does at the top of its category\n\nStep 3) Save and check script changes\n    -Hit Save & Apply in the script window to save your code\n    -You can edit your code as needed and Save+Apply as often as needed\n    -When you are finished, make disableSave = false below then Save+apply\n        -This enables saving, so your sheet will remember whats on it.\n\nBonus) Finding/Editing Positions for elements\n    I have included a tool to get positions for buttons in {x,y,z} form\n    Place it where you want the center of your element to be\n    Then copy the table from the notes (lower right of screen)\n        You can highlight it and CTRL+C\n    Paste it into the data table where needed (pos=)\n    If you want to manually tweek the values:\n        {0,0,0} is the center of the character sheet\n        {1,0,0} is right, {-1,0,0} is left\n        {0,0,-1} is up, {0,0,1} is down\n        0.1 for Y is the height off of the page.\n            If it was 0, it would be down inside the model of the sheet\n\nBegin editing below:    ]]\n\n--Set this to true while editing and false when you have finished\ndisableSave = false\n--Remember to set this to false once you are done making changes\n--Then, after you save & apply it, save your game too\n\n--Color information for button text (r,g,b, values of 0-1)\nbuttonFontColor = {0,0,0}\n--Color information for button background\nbuttonColor = {1,1,1}\n--Change scale of button (Avoid changing if possible)\nbuttonScale = {0.1,0.1,0.1}\n\n--This is the button placement information\ndefaultButtonData = {\n    --Add checkboxes\n    checkbox = {\n        --[[\n        pos   = the position (pasted from the helper tool)\n        size  = height/width/font_size for checkbox\n        state = default starting value for checkbox (true=checked, false=not)\n        ]]\n        --End of checkboxes\n    },\n    --Add counters that have a + and - button\n    counter = {\n        --[[\n        pos    = the position (pasted from the helper tool)\n        size   = height/width/font_size for counter\n        value  = default starting value for counter\n        hideBG = if background of counter is hidden (true=hidden, false=not)\n        ]]\n        --1st Player Experience\n        {\n            pos    = {-0.82,0.2,-1.5},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --1st Player Physical Trauma\n        {\n            pos    = {-1.05,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --1st Player Mental Trauma\n        {\n            pos    = {-0.82,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --2nd Player Experience\n        {\n            pos    = {-0.15,0.2,-1.5},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --2nd Player Physical Trauma\n        {\n            pos    = {-0.37,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --2nd Player Mental Trauma\n        {\n            pos    = {-0.15,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --3rd Player Experience\n        {\n            pos    = {0.54,0.2,-1.49},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --3rd Player Physical Trauma\n        {\n            pos    = {0.3,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --3rd Player Mental Trauma\n        {\n            pos    = {0.54,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --4th Player Experience\n        {\n            pos    = {1.22,0.2,-1.49},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --4th Player Physical Trauma\n        {\n            pos    = {.985,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n        --4th Player Mental Trauma\n        {\n            pos    = {1.22,0.2,-1.35},\n            size   = 400,\n            value  = 0,\n            hideBG = true\n        },\n       --End of counters\n    },\n    --Add editable text boxes\n    textbox = {\n        --[[\n        pos       = the position (pasted from the helper tool)\n        rows      = how many lines of text you want for this box\n        width     = how wide the text box is\n        font_size = size of text. This and \"rows\" effect overall height\n        label     = what is shown when there is no text. \"\" = nothing\n        value     = text entered into box. \"\" = nothing\n        alignment = Number to indicate how you want text aligned\n                    (1=Automatic, 2=Left, 3=Center, 4=Right, 5=Justified)\n        ]]\n        --Campaign Title\n        {\n            pos       = {-0.35,0.2,-2.02},\n            rows      = 1,\n            width     = 6300,\n            font_size = 300,\n            label     = \"Enter Campaign Title Here\",\n            value     = \"\",\n            alignment = 2\n        },\n        --1st Player Name\n        {\n            pos       = {-1.05,0.2,-1.76},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --1st Player Investigator\n        {\n            pos       = {-1.05,0.2,-1.63},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --1st Player Story Assets/Weaknesses\n        {\n            pos       = {-1.05,0.2,-1.05},\n            rows      = 4,\n            width     = 3100,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --2nd Player Name\n        {\n            pos       = {-0.37,0.2,-1.76},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --2nd Player Investigator\n        {\n            pos       = {-0.37,0.2,-1.63},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --2nd Player Story Assets/Weaknesses\n        {\n            pos       = {-0.37,0.2,-1.05},\n            rows      = 4,\n            width     = 3100,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --3rd Player Name\n        {\n            pos       = {0.3,0.2,-1.76},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --3rd Player Investigator\n        {\n            pos       = {0.3,0.2,-1.63},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --3rd Player Story Assets/Weaknesses\n        {\n            pos       = {0.31,0.2,-1.05},\n            rows      = 4,\n            width     = 3100,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --4th Player Name\n        {\n            pos       = {0.985,0.2,-1.76},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --4th Player Investigator\n        {\n            pos       = {0.985,0.2,-1.63},\n            rows      = 1,\n            width     = 3000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --4th Player Story Assets/Weaknesses\n        {\n            pos       = {0.985,0.2,-1.05},\n            rows      = 4,\n            width     = 3100,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --Campaign Notes 1\n        {\n            pos       = {-0.7,0.2,1.3},\n            rows      = 26,\n            width     = 5500,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --Campaign Notes 2\n        {\n            pos       = {0.77,0.2,-0.1},\n            rows      = 18,\n            width     = 5500,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --Notes (Bottom Right)\n        {\n            pos       = {.9,0.2,1.8},\n            rows      = 8,\n            width     = 5000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --Chaos Bag\n        {\n            pos       = {1.2,0.2,1},\n            rows      = 6,\n            width     = 2000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --Killed/Insane Gators\n        {\n            pos       = {-0.8,0.2,-0.2},\n            rows      = 6,\n            width     = 6000,\n            font_size = 300,\n            label     = \"Empty\",\n            value     = \"\",\n            alignment = 2\n        },\n        --End of textboxes\n    }\n}\n\n\n\n--Lua beyond this point, I recommend doing something more fun with your life\n\n\n\n--Save function\nfunction updateSave()\n    saved_data = JSON.encode(ref_buttonData)\n    if disableSave==true then saved_data=\"\" end\n    self.script_state = saved_data\nend\n\n--Startup procedure\nfunction onload(saved_data)\n    if disableSave==true then saved_data=\"\" end\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        ref_buttonData = loaded_data\n    else\n        ref_buttonData = defaultButtonData\n    end\n\n    spawnedButtonCount = 0\n    createCheckbox()\n    createCounter()\n    createTextbox()\nend\n\n\n\n--Click functions for buttons\n\n\n\n--Checks or unchecks the given box\nfunction click_checkbox(tableIndex, buttonIndex)\n    if ref_buttonData.checkbox[tableIndex].state == true then\n        ref_buttonData.checkbox[tableIndex].state = false\n        self.editButton({index=buttonIndex, label=\"\"})\n    else\n        ref_buttonData.checkbox[tableIndex].state = true\n        self.editButton({index=buttonIndex, label=string.char(10008)})\n    end\n    updateSave()\nend\n\n--Applies value to given counter display\nfunction click_counter(tableIndex, buttonIndex, amount)\n    ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\n    self.editButton({index=buttonIndex, label=ref_buttonData.counter[tableIndex].value})\n    updateSave()\nend\n\n--Updates saved value for given text box\nfunction click_textbox(i, value, selected)\n    if selected == false then\n        ref_buttonData.textbox[i].value = value\n        updateSave()\n    end\nend\n\n--Dud function for if you have a background on a counter\nfunction click_none() end\n\n\n\n--Button creation\n\n\n\n--Makes checkboxes\nfunction createCheckbox()\n    for i, data in ipairs(ref_buttonData.checkbox) do\n        --Sets up reference function\n        local buttonNumber = spawnedButtonCount\n        local funcName = \"checkbox\"..i\n        local func = function() click_checkbox(i, buttonNumber) end\n        self.setVar(funcName, func)\n        --Sets up label\n        local label = \"\"\n        if data.state==true then label=string.char(10008) end\n        --Creates button and counts it\n        self.createButton({\n            label=label, click_function=funcName, function_owner=self,\n            position=data.pos, height=data.size, width=data.size,\n            font_size=data.size, scale=buttonScale,\n            color=buttonColor, font_color=buttonFontColor\n        })\n        spawnedButtonCount = spawnedButtonCount + 1\n    end\nend\n\n--Makes counters\nfunction createCounter()\n    for i, data in ipairs(ref_buttonData.counter) do\n        --Sets up display\n        local displayNumber = spawnedButtonCount\n        --Sets up label\n        local label = data.value\n        --Sets height/width for display\n        local size = data.size\n        if data.hideBG == true then size = 0 end\n        --Creates button and counts it\n        self.createButton({\n            label=label, click_function=\"click_none\", function_owner=self,\n            position=data.pos, height=size, width=size,\n            font_size=data.size, scale=buttonScale,\n            color=buttonColor, font_color=buttonFontColor\n        })\n        spawnedButtonCount = spawnedButtonCount + 1\n\n        --Sets up add 1\n        local funcName = \"counterAdd\"..i\n        local func = function() click_counter(i, displayNumber, 1) end\n        self.setVar(funcName, func)\n        --Sets up label\n        local label = \"+\"\n        --Sets up position\n        local offsetDistance = (data.size/2 + data.size/4) * (buttonScale[1] * 0.002)\n        local pos = {data.pos[1] + offsetDistance, data.pos[2], data.pos[3]}\n        --Sets up size\n        local size = data.size / 2\n        --Creates button and counts it\n        self.createButton({\n            label=label, click_function=funcName, function_owner=self,\n            position=pos, height=size, width=size,\n            font_size=size, scale=buttonScale,\n            color=buttonColor, font_color=buttonFontColor\n        })\n        spawnedButtonCount = spawnedButtonCount + 1\n\n        --Sets up subtract 1\n        local funcName = \"counterSub\"..i\n        local func = function() click_counter(i, displayNumber, -1) end\n        self.setVar(funcName, func)\n        --Sets up label\n        local label = \"-\"\n        --Set up position\n        local pos = {data.pos[1] - offsetDistance, data.pos[2], data.pos[3]}\n        --Creates button and counts it\n        self.createButton({\n            label=label, click_function=funcName, function_owner=self,\n            position=pos, height=size, width=size,\n            font_size=size, scale=buttonScale,\n            color=buttonColor, font_color=buttonFontColor\n        })\n        spawnedButtonCount = spawnedButtonCount + 1\n    end\nend\n\nfunction createTextbox()\n    for i, data in ipairs(ref_buttonData.textbox) do\n        --Sets up reference function\n        local funcName = \"textbox\"..i\n        local func = function(_,_,val,sel) click_textbox(i,val,sel) end\n        self.setVar(funcName, func)\n\n        self.createInput({\n            input_function = funcName,\n            function_owner = self,\n            label          = data.label,\n            alignment      = data.alignment,\n            position       = data.pos,\n            scale          = buttonScale,\n            width          = data.width,\n            height         = (data.font_size*data.rows)+24,\n            font_size      = data.font_size,\n            color          = buttonColor,\n            font_color     = buttonFontColor,\n            value          = data.value,\n        })\n    end\nend\n",
      "LuaScriptState": "{\"checkbox\":[],\"counter\":[{\"hideBG\":true,\"pos\":[-0.82,0.2,-1.5],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-1.05,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.82,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.15,0.2,-1.5],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.37,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[-0.15,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.54,0.2,-1.49],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.3,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.54,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[1.22,0.2,-1.49],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[0.985,0.2,-1.35],\"size\":400,\"value\":0},{\"hideBG\":true,\"pos\":[1.22,0.2,-1.35],\"size\":400,\"value\":0}],\"textbox\":[{\"alignment\":2,\"font_size\":300,\"label\":\"Enter Campaign Title Here\",\"pos\":[-0.35,0.2,-2.02],\"rows\":1,\"value\":\"The Sands of Memphis\",\"width\":6300},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-1.05,0.2,-1.76],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-1.05,0.2,-1.63],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-1.05,0.2,-1.05],\"rows\":4,\"value\":\"\",\"width\":3100},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-0.37,0.2,-1.76],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-0.37,0.2,-1.63],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-0.37,0.2,-1.05],\"rows\":4,\"value\":\"\",\"width\":3100},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.3,0.2,-1.76],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.3,0.2,-1.63],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.31,0.2,-1.05],\"rows\":4,\"value\":\"\",\"width\":3100},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.985,0.2,-1.76],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.985,0.2,-1.63],\"rows\":1,\"value\":\"\",\"width\":3000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.985,0.2,-1.05],\"rows\":4,\"value\":\"\",\"width\":3100},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-0.7,0.2,1.3],\"rows\":26,\"value\":\"\",\"width\":5500},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.77,0.2,-0.1],\"rows\":18,\"value\":\"\",\"width\":5500},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[0.9,0.2,1.8],\"rows\":8,\"value\":\"The Reckoning of Memphis: 0\",\"width\":5000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[1.2,0.2,1],\"rows\":6,\"value\":\"\",\"width\":2000},{\"alignment\":2,\"font_size\":300,\"label\":\"Empty\",\"pos\":[-0.8,0.2,-0.2],\"rows\":6,\"value\":\"\",\"width\":6000}]}"
    },
    {
      "GUID": "14f711",
      "Name": "Custom_Tile",
      "Transform": {
        "rotY": 270,
        "scaleX": 2.2,
        "scaleY": 1.0,
        "scaleZ": 2.2
      },
      "Nickname": "Campaign Difficulty Selector",
      "Description": "Select difficulty to set up Chaos Bag.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/965354846165100486/3DC8FCEF364B30758B09EF96AF9458F2B8E64D56/",
        "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 3,
          "Thickness": 0.1,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "-- edit the \"tokenData\" table to change the preset difficulties\n-- list of valid ids: 'p1', '0', 'm1', 'm2', 'm3', 'm4', 'm5', 'm6', 'm7', 'm8',\n--   'skull', 'cultist', 'tablet', 'elder', 'red', 'blue', 'bless', 'curse', 'frost'\n\n-- Ghosts of Onigawa\nlocal tokenData = {\n  Easy     = { 'p1', 'p1', '0', '0', '0', 'm1', 'm1', 'm2', 'm3', 'skull', 'cultist', 'tablet', 'elder', 'red', 'blue' },\n  Standard = { 'p1', '0', 'm1', 'm1', 'm2', 'm2', 'm3', 'm3', 'm4', 'skull', 'cultist', 'tablet', 'elder', 'red', 'blue' },\n  Hard     = { '0', '0', 'm1', 'm1', 'm2', 'm2', 'm3', 'm4', 'm5', 'skull', 'cultist', 'tablet', 'elder', 'red', 'blue' },\n  Expert   = { '0', 'm1', 'm1', 'm2', 'm2', 'm3', 'm3', 'm4', 'm5', 'skull', 'cultist', 'tablet', 'elder', 'red', 'blue' },\n}\n\n-- create buttons on startup\nfunction onLoad()\n  local z_offset = -0.15\n  for difficulty, _ in pairs(tokenData) do\n    local clickFunction = difficulty:lower() .. \"Click\"\n    self.setVar(clickFunction, function() clickFun(difficulty) end)\n\n    self.createButton({\n      label = difficulty,\n      function_owner = self,\n      click_function = clickFunction,\n      position = { 0, 0.1, z_offset },\n      rotation = { 0, 0, 0 },\n      scale = { 0.47, 1, 0.47 },\n      height = 200,\n      width = 1150,\n      font_size = 100,\n      color = { 0.87, 0.8, 0.70 },\n      font_color = { 0, 0, 0 }\n    })\n    z_offset = z_offset + 0.20\n  end\nend\n\nfunction clickFun(difficulty)\n  Global.call(\"setChaosBagState\", tokenData[difficulty])\nend"
    },
    {
      "GUID": "4d0b51",
      "Name": "Custom_Token",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Playmat I - The Fouled Oasis",
      "Description": "Click the 'Apply' button to copy this image to the main playmat.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "ImageSwapperTile"
      ],
      "HideWhenFaceDown": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/W8RNZxk.jpg",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "function onLoad()\n   local params          = {}\n   params.click_function = 'updatePlayarea'\n   params.function_owner = self\n   params.label          = 'Apply'\n   params.tooltip        = 'Left-Click: Apply image\\nRight-Click: Revert to default'\n   params.position       = { 0, 0.06, -1.45 }\n   params.height         = 300\n   params.width          = 675\n   params.color          = { 0, 0, 0 }\n   params.font_size      = 200\n   params.font_color     = { 1, 1, 1 }\n   self.createButton(params)\nend\n\nfunction updatePlayarea(_, _, isRightClick)\n   local imageswapper = getObjectFromGUID(\"b7b45b\")\n\n   -- error handling\n   if imageswapper == nil then\n      printToAll(\"Image swapper could not be found!\", \"Orange\")\n      return\n   end\n\n   -- get default image when right-clicked, else load its own image\n   if isRightClick then\n      imageswapper.call(\"updateSurface\")\n   else\n      imageswapper.call(\"updateSurface\", self.getCustomObject().image)\n   end\nend\n"
    },
    {
      "GUID": "18b4a5",
      "Name": "Custom_Token",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Playmat II - The Hour of the Scarab",
      "Description": "Click the 'Apply' button to copy this image to the main playmat.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "ImageSwapperTile"
      ],
      "HideWhenFaceDown": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/UnDKRce.jpg",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "function onLoad()\n   local params          = {}\n   params.click_function = 'updatePlayarea'\n   params.function_owner = self\n   params.label          = 'Apply'\n   params.tooltip        = 'Left-Click: Apply image\\nRight-Click: Revert to default'\n   params.position       = { 0, 0.06, -1.45 }\n   params.height         = 300\n   params.width          = 675\n   params.color          = { 0, 0, 0 }\n   params.font_size      = 200\n   params.font_color     = { 1, 1, 1 }\n   self.createButton(params)\nend\n\nfunction updatePlayarea(_, _, isRightClick)\n   local imageswapper = getObjectFromGUID(\"b7b45b\")\n\n   -- error handling\n   if imageswapper == nil then\n      printToAll(\"Image swapper could not be found!\", \"Orange\")\n      return\n   end\n\n   -- get default image when right-clicked, else load its own image\n   if isRightClick then\n      imageswapper.call(\"updateSurface\")\n   else\n      imageswapper.call(\"updateSurface\", self.getCustomObject().image)\n   end\nend\n"
    },
    {
      "GUID": "5c40c2",
      "Name": "Custom_Token",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Playmat III - The Fissure",
      "Description": "Click the 'Apply' button to copy this image to the main playmat.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "ImageSwapperTile"
      ],
      "HideWhenFaceDown": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/p8MmjeT.jpg",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "function onLoad()\n   local params          = {}\n   params.click_function = 'updatePlayarea'\n   params.function_owner = self\n   params.label          = 'Apply'\n   params.tooltip        = 'Left-Click: Apply image\\nRight-Click: Revert to default'\n   params.position       = { 0, 0.06, -1.45 }\n   params.height         = 300\n   params.width          = 675\n   params.color          = { 0, 0, 0 }\n   params.font_size      = 200\n   params.font_color     = { 1, 1, 1 }\n   self.createButton(params)\nend\n\nfunction updatePlayarea(_, _, isRightClick)\n   local imageswapper = getObjectFromGUID(\"b7b45b\")\n\n   -- error handling\n   if imageswapper == nil then\n      printToAll(\"Image swapper could not be found!\", \"Orange\")\n      return\n   end\n\n   -- get default image when right-clicked, else load its own image\n   if isRightClick then\n      imageswapper.call(\"updateSurface\")\n   else\n      imageswapper.call(\"updateSurface\", self.getCustomObject().image)\n   end\nend\n"
    },
    {
      "GUID": "9d647a",
      "Name": "Custom_Token",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Playmat IV - The Tomb of the Ghoul Queen",
      "Description": "Click the 'Apply' button to copy this image to the main playmat.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "ImageSwapperTile"
      ],
      "HideWhenFaceDown": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/WiuvCWh.jpg",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "function onLoad()\n   local params          = {}\n   params.click_function = 'updatePlayarea'\n   params.function_owner = self\n   params.label          = 'Apply'\n   params.tooltip        = 'Left-Click: Apply image\\nRight-Click: Revert to default'\n   params.position       = { 0, 0.06, -1.45 }\n   params.height         = 300\n   params.width          = 675\n   params.color          = { 0, 0, 0 }\n   params.font_size      = 200\n   params.font_color     = { 1, 1, 1 }\n   self.createButton(params)\nend\n\nfunction updatePlayarea(_, _, isRightClick)\n   local imageswapper = getObjectFromGUID(\"b7b45b\")\n\n   -- error handling\n   if imageswapper == nil then\n      printToAll(\"Image swapper could not be found!\", \"Orange\")\n      return\n   end\n\n   -- get default image when right-clicked, else load its own image\n   if isRightClick then\n      imageswapper.call(\"updateSurface\")\n   else\n      imageswapper.call(\"updateSurface\", self.getCustomObject().image)\n   end\nend\n"
    },
    {
      "GUID": "ce86a7",
      "Name": "Custom_Token",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Playmat V - The Pyramidion",
      "Description": "Click the 'Apply' button to copy this image to the main playmat.",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Tags": [
        "ImageSwapperTile"
      ],
      "HideWhenFaceDown": false,
      "CustomImage": {
        "ImageURL": "https://i.imgur.com/yLkMg0P.jpg",
        "ImageSecondaryURL": "",
        "ImageScalar": 1.0,
        "WidthScale": 0.0,
        "CustomToken": {
          "Thickness": 0.1,
          "MergeDistancePixels": 15.0,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "function onLoad()\n   local params          = {}\n   params.click_function = 'updatePlayarea'\n   params.function_owner = self\n   params.label          = 'Apply'\n   params.tooltip        = 'Left-Click: Apply image\\nRight-Click: Revert to default'\n   params.position       = { 0, 0.06, -1.45 }\n   params.height         = 300\n   params.width          = 675\n   params.color          = { 0, 0, 0 }\n   params.font_size      = 200\n   params.font_color     = { 1, 1, 1 }\n   self.createButton(params)\nend\n\nfunction updatePlayarea(_, _, isRightClick)\n   local imageswapper = getObjectFromGUID(\"b7b45b\")\n\n   -- error handling\n   if imageswapper == nil then\n      printToAll(\"Image swapper could not be found!\", \"Orange\")\n      return\n   end\n\n   -- get default image when right-clicked, else load its own image\n   if isRightClick then\n      imageswapper.call(\"updateSurface\")\n   else\n      imageswapper.call(\"updateSurface\", self.getCustomObject().image)\n   end\nend\n"
    },
    {
      "GUID": "627004",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "rotY": 180,
        "scaleX": 1.70000029,
        "scaleY": 1.70000029,
        "scaleZ": 1.70000029
      },
      "Nickname": "Encounter Sets You Might Need",
      "Description": "The Sands of Memphis",
      "ColorDiffuse": {
        "r": 0.02148666,
        "g": 0.00100758043,
        "b": 0.02148666
      },
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/764975951334964971/3078F312706FC974833ECD2A359B87FD4F283509/",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/764975951334960553/C518D80E31E27DB23EEAC8CF9253E59798865790/",
        "NormalURL": "https://steamusercontent-a.akamaihd.net/ugc/764975951334960069/E70E4A58A1B7827F1E5E2AF9FF44DF0BD5DA33F7/",
        "MaterialIndex": 1,
        "TypeIndex": 6
      },
      "ContainedObjects": [
        {
          "GUID": "903a1b",
          "Name": "Deck",
          "Transform": {
            "rotY": 270,
            "rotZ": 180,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Mementos of Cairo Encounter Set",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "Hands": false,
          "DeckIDs": [
            8703500,
            8703400,
            8703300,
            8703200
          ],
          "CustomDeck": {
            "87035": {
              "FaceURL": "https://pbs.twimg.com/media/F6a56BXa0AAbDdb?format=jpg&name=4096x4096",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87034": {
              "FaceURL": "https://pbs.twimg.com/media/F6a57QPbgAAaji3?format=jpg&name=4096x4096",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87033": {
              "FaceURL": "https://pbs.twimg.com/media/F6a56rrasAAOiXx?format=jpg&name=4096x4096",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "87032": {
              "FaceURL": "https://pbs.twimg.com/media/F6a55d_aEAA2Jei?format=jpg&name=4096x4096",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "ContainedObjects": [
            {
              "GUID": "e8cfcf",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Tesnim's Brooch: Sigil of the Scarab Lord",
              "GMNotes": "{\n  \"id\": \"MBXXX\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Item. Charm.\",\n  \"willpowerIcons\": 1,\n  \"intellectIcons\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "CardID": 8703500,
              "CustomDeck": {
                "87035": {
                  "FaceURL": "https://pbs.twimg.com/media/F6a56BXa0AAbDdb?format=jpg&name=4096x4096",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "6844a8",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Arno the Alloyed: Hollow Golem",
              "GMNotes": "{\n  \"id\": \"MBXXX\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Ally. Automata.\",\n  \"willpowerIcons\": 1,\n  \"combatIcons\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "CardID": 8703400,
              "CustomDeck": {
                "87034": {
                  "FaceURL": "https://pbs.twimg.com/media/F6a57QPbgAAaji3?format=jpg&name=4096x4096",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "463266",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ochre Strongbox: The Fixer's Implements",
              "GMNotes": "{\n  \"id\": \"MBXXX\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Item. Supply.\",\n  \"wildIcons\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "CardID": 8703300,
              "CustomDeck": {
                "87033": {
                  "FaceURL": "https://pbs.twimg.com/media/F6a56rrasAAOiXx?format=jpg&name=4096x4096",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            },
            {
              "GUID": "9ddec9",
              "Name": "CardCustom",
              "Transform": {
                "rotY": 270,
                "rotZ": 180,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Shackle of the Ifrit: A Promise Kept",
              "GMNotes": "{\n  \"id\": \"MBXXX\",\n  \"class\": \"Neutral\",\n  \"type\": \"Asset\",\n  \"traits\": \"Item. Charm. Occult.\",\n  \"intellectIcons\": 1,\n  \"agilityIcons\": 1,\n  \"cycle\": \"The Sands of Memphis\"\n}",
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "CardID": 8703200,
              "CustomDeck": {
                "87032": {
                  "FaceURL": "https://pbs.twimg.com/media/F6a55d_aEAA2Jei?format=jpg&name=4096x4096",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
