{
  "GUID": "b46db2",
  "Name": "Custom_Model_Bag",
  "Transform": {
    "posX": 28,
    "posY": 1.5,
    "posZ": 0,
    "rotX": 0,
    "rotY": 270,
    "rotZ": 0,
    "scaleX": 2.21,
    "scaleY": 0.46,
    "scaleZ": 2.42
  },
  "Nickname": "Election Night",
  "Description": "by TheBeard",
  "GMNotes": "",
  "AltLookAngle": {
    "x": 0.0,
    "y": 0.0,
    "z": 0.0
  },
  "ColorDiffuse": {
    "r": 1.0,
    "g": 1.0,
    "b": 1.0
  },
  "LayoutGroupSortIndex": 0,
  "Value": 0,
  "Locked": false,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": true,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "MaterialIndex": -1,
  "MeshIndex": -1,
  "CustomMesh": {
    "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/50205812344272454/CA743A8CCF9CDABCC10C74B2F36B2F70E5BF3F02/",
    "NormalURL": "",
    "ColliderURL": "",
    "Convex": true,
    "MaterialIndex": 3,
    "TypeIndex": 6,
    "CustomShader": {
      "SpecularColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "SpecularIntensity": 0.0,
      "SpecularSharpness": 2.0,
      "FresnelStrength": 0.0
    },
    "CastShadows": true
  },
  "Bag": {
    "Order": 0
  },
  "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"MemoryBag\", function(require, _LOADED, __bundle_register, __bundle_modules)\nfunction updateSave()\n  self.script_state = JSON.encode({ ml = memoryList, setupButton = setupButton })\nend\n\nfunction onLoad(savedData)\n  if savedData and savedData ~= \"\" then\n    local loadedData = JSON.decode(savedData)\n    memoryList = loadedData.ml\n    setupButton = loadedData.setupButton\n  end\n\n  memoryList = memoryList or {}\n  self.addContextMenuItem(\"Toggle setup button\", toggleSetupButton)\n\n  -- make sure the model is loaded so that we can use the bounds\n  Wait.condition(function()\n    Wait.frames(function()\n      generateButtonData()\n      createMemoryActionButtons()\n    end, 5)\n  end, function() return not self.loading_custom end)\nend\n\nfunction generateButtonData()\n  local selfScale = self.getScale()\n  local selfBounds = self.getBoundsNormalized()\n  buttonScale = Vector(1 / selfScale.x, 1, 1 / selfScale.z)\n\n  buttonX = math.max(selfBounds.size.x / 5, 1.5) / selfScale.x\n  buttonY = -(selfBounds.size.y / 2 + selfBounds.offset.y) / selfScale.y + 0.5\n  buttonZ = {}\n  for i = 1, 4 do\n    buttonZ[i] = (selfBounds.size.z / 2 + i * 1.15 - 0.15) / selfScale.z\n  end\n\n  local upperButtonMult = 1.1\n  buttonData = {\n    [\"Add\"]       = {\n      tooltip = \"Add highlighted objects to memory\",\n      pos = { buttonX * upperButtonMult, buttonY, -buttonZ[1] },\n      fColor = { 0.25, 1, 0.25 }\n    },\n    [\"Cancel\"]    = {\n      tooltip = \"Abort setup mode\",\n      pos = { -buttonX * upperButtonMult, buttonY, -buttonZ[1] },\n    },\n    [\"Internal\"]    = {\n      tooltip = \"Copy memory from internal bags\",\n      pos = { -buttonX * upperButtonMult, buttonY, -buttonZ[4] },\n    },\n    [\"Place\"]     = {\n      pos = { buttonX, buttonY, buttonZ[1] },\n      fSize = 350,\n      w = 1200\n    },\n    [\"Recall\"]    = {\n      pos = { -buttonX, buttonY, buttonZ[1] },\n      fSize = 350,\n      w = 1200\n    },\n    [\"Remove\"]    = {\n      tooltip = \"Remove highlighted objects from memory\",\n      pos = { buttonX * upperButtonMult, buttonY, -buttonZ[2] },\n      fColor = { 1, 0.25, 0.25 }\n    },\n    [\"Reset\"]     = {\n      tooltip = \"Completely reset memory\",\n      pos = { -buttonX * upperButtonMult, buttonY, -buttonZ[3] },\n    },\n    [\"Selection\"] = {\n      tooltip = \"Add / Remove highlight for selected objects\",\n      pos = { -buttonX * upperButtonMult, buttonY, -buttonZ[2] },\n    },\n    [\"Setup\"]     = {\n      pos = { 0, buttonY, -buttonZ[1] },\n      fSize = 350\n    },\n    [\"Update\"]   = {\n      tooltip = \"Update memory for placed objects\",\n      pos = { buttonX * upperButtonMult, buttonY, -buttonZ[3] },\n      fColor = { 0.75, 0.75, 1 }\n    }\n  }\nend\n\nfunction createButtonByName(label)\n  self.createButton({\n    label = label,\n    tooltip = buttonData[label].tooltip or \"\",\n    position = buttonData[label].pos,\n    height = buttonData[label].h or 500,\n    width = buttonData[label].w or 1500,\n    font_size = buttonData[label].fSize or 325,\n    font_color = buttonData[label].fColor or { 1, 1, 1 },\n    function_owner = self,\n    color = { 0, 0, 0 },\n    scale = buttonScale,\n    click_function = \"buttonClick_\" .. string.lower(string.gsub(label, \"%s+\", \"\"))\n  })\nend\n\n-- context menu function to toggle the setup button visibility\nfunction toggleSetupButton()\n  if setupButton then\n    setupButton = false\n    broadcastToAll(\"Setup button disabled\")\n  else\n    setupButton = true\n    broadcastToAll(\"Setup button enabled\")\n  end\n  updateSave()\n  removeAllHighlights()\n  createMemoryActionButtons()\nend\n\nfunction buttonClick_setup()\n  tempList = {}\n  self.clearButtons()\n  createButtonsOnAllObjects()\n  createSetupActionButtons()\nend\n\nfunction broadcastFeedback(str1, count, name, str2, color)\n  local bcStr = count .. \" \" .. name\n  if str1 then\n    bcStr = str1 .. \" \" .. bcStr\n  end\n  if count ~= 1 then\n    bcStr = bcStr .. \"s\"\n  end\n  if str2 then\n    bcStr = bcStr .. \" \" .. str2\n  end\n  broadcastToAll(bcStr, color)\nend\n\nfunction createButtonsOnAllObjects()\n  buttonIndexMap = {}\n\n  local buttonCount = 0\n  for _, obj in ipairs(getObjects()) do\n    if obj ~= self and obj.type ~= \"Scripting\" and obj.type ~= \"Hand\" then\n      local objPos = obj.getPosition()\n      local objBounds = obj.getBounds()\n      local offSet = Vector(0, objBounds.size.y / 2 + 1, 0)\n      local scaleVec = Vector(-1, 1, 1)\n      local buttonPos = self.positionToLocal(objPos + offSet):scale(scaleVec)\n\n      local fName = \"selectButton_\" .. buttonCount\n      _G[fName] = function() buttonClick_selectObject(obj) end\n      self.createButton({\n        click_function = fName,\n        function_owner = self,\n        position = buttonPos,\n        height = 600,\n        width = 600,\n        color = { 0.75, 0.25, 0.25, 0.75 },\n        scale = buttonScale\n      })\n      buttonIndexMap[obj.getGUID()] = buttonCount\n      buttonCount = buttonCount + 1\n    end\n  end\nend\n\nfunction createSetupActionButtons()\n  createButtonByName(\"Cancel\")\n  createButtonByName(\"Selection\")\n  createButtonByName(\"Reset\")\n  createButtonByName(\"Internal\")\n  createButtonByName(\"Add\")\n\n  if next(memoryList) then\n    createButtonByName(\"Remove\")\n    createButtonByName(\"Update\")\n  end\nend\n\nfunction buttonClick_selectObject(obj)\n  local guid = obj.getGUID()\n  local index = buttonIndexMap[guid]\n  if not index then return end\n\n  if tempList[guid] == nil then\n    self.editButton({ index = index, color = { 0, 1, 0, 0.75 } })\n    tempList[guid] = {\n      pos = roundVector(obj.getPosition(), 3),\n      rot = roundVector(obj.getRotation(), 0),\n      lock = obj.getLock()\n    }\n    obj.highlightOn({ 0, 1, 0 })\n  else\n    self.editButton({ index = index, color = { 0.75, 0.25, 0.25, 0.75 } })\n    tempList[guid] = nil\n    obj.highlightOff()\n  end\nend\n\nfunction buttonClick_cancel()\n  broadcastToAll(\"Setup Canceled\")\n  removeAllHighlights()\n  createMemoryActionButtons()\nend\n\nfunction buttonClick_selection(_, playerColor)\n  local objList = Player[playerColor].getSelectedObjects()\n\n  if #objList == 0 then\n    broadcastToAll(\"No objects selected!\")\n  else\n    broadcastFeedback(\"Toggled selection for\", #objList, \"object\")\n    for _, obj in ipairs(objList) do\n      buttonClick_selectObject(obj)\n    end\n  end\nend\n\nfunction buttonClick_add()\n  local count = 0\n  for _ in pairs(tempList) do\n    count = count + 1\n  end\n  broadcastFeedback(\"Added\", count, \"Object\", \"from selection\")\n\n  -- copy data from tempList to memoryList\n  for guid, entry in pairs(tempList) do\n    memoryList[guid] = entry\n  end\n\n  updateSave()\n  removeAllHighlights()\n  createMemoryActionButtons()\nend\n\nfunction buttonClick_update()\n  local count = 0\n  for guid, entry in pairs(memoryList) do\n    local obj = getObjectFromGUID(guid)\n    if obj ~= nil then\n      count = count + 1\n      memoryList[guid] = {\n        pos = roundVector(obj.getPosition(), 3),\n        rot = roundVector(obj.getRotation(), 0),\n        lock = obj.getLock()\n      }\n    end\n  end\n  broadcastFeedback(\"Updated data for\", count, \"Object\")\n  updateSave()\nend\n\nfunction buttonClick_remove()\n  local count = 0\n  for guid in pairs(tempList) do\n    count = count + 1\n    memoryList[guid] = nil\n  end\n  broadcastFeedback(_, count, \"Object\", \"Removed\", { 1, 1, 1 })\n\n  updateSave()\n  removeAllHighlights()\n  createMemoryActionButtons()\nend\n\nfunction buttonClick_setNew()\n  local count = 0\n  for _, obj in ipairs(getObjects()) do\n    if memoryList[obj.guid] then\n      count = count + 1\n      memoryList[obj.guid].pos = roundVector(obj.getPosition(), 3)\n      memoryList[obj.guid].rot = roundVector(obj.getRotation(), 0)\n      memoryList[obj.guid].lock = obj.getLock()\n    end\n  end\n  broadcastFeedback(\"Updated Data for\", count, \"Object\", _, { 1, 1, 1 })\n  updateSave()\n  createMemoryActionButtons()\nend\n\nfunction buttonClick_reset()\n  memoryList = {}\n  updateSave()\n  removeAllHighlights()\n  broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\n  self.clearButtons()\n\n  if setupButton then\n    createButtonByName(\"Setup\")\n  end\nend\n\nfunction buttonClick_internal()\n  local count = 0\n  for _, bagObj in ipairs(self.getObjects()) do\n    local data = bagObj.lua_script_state\n    if data ~= nil then\n      local j = JSON.decode(data)\n      if j ~= nil and j.ml ~= nil then\n        count = count + 1\n        for guid, entry in pairs(j.ml) do\n          memoryList[guid] = entry\n        end\n      end\n    end\n  end\n\n  if count > 0 then\n    broadcastFeedback(\"Added\", count, \"internal bag\", \"to existing memory\")\n  end\nend\n\nfunction createMemoryActionButtons()\n  self.clearButtons()\n\n  if next(memoryList) then\n    createButtonByName(\"Place\")\n    createButtonByName(\"Recall\")\n  end\n\n  if setupButton then\n    createButtonByName(\"Setup\")\n  end\nend\n\n-- Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n  local data = self.getData()\n\n  -- get names of contained objects\n  local guidToName = {}\n  for _, bagObjData in ipairs(data.ContainedObjects or {}) do\n    guidToName[bagObjData[\"GUID\"]] = bagObjData[\"Nickname\"]\n  end\n\n  local updateGuids = {}\n  local placeCount = 0\n  local moveCount = 0\n  for guid, entry in pairs(memoryList) do\n    local obj = getObjectFromGUID(guid)\n    if obj ~= nil and (obj.getName() == guidToName[guid] or guidToName[guid] == nil) then\n      -- If obj is out on the table and has the same name (or there's no contained copy), move it\n      moveCount = moveCount + 1\n      obj.setPositionSmooth(entry.pos)\n      obj.setRotationSmooth(entry.rot)\n      obj.setLock(entry.lock)\n    elseif guidToName[guid] then\n      -- If obj is inside of the bag\n      placeCount = placeCount + 1\n      local item = self.takeObject({\n        guid = guid,\n        position = entry.pos,\n        rotation = entry.rot,\n        smooth = false\n      })\n      item.setLock(entry.lock)\n\n      if obj ~= nil then\n        updateGuids[guid] = item.getGUID()\n      end\n    end\n  end\n\n  -- update memoryList if we placed an item that got a new GUID\n  if next(updateGuids) then\n    for oldGuid, newGuid in pairs(updateGuids) do\n      memoryList[newGuid] = memoryList[oldGuid]\n      memoryList[oldGuid] = nil\n    end\n    updateSave()\n  end\n\n  if placeCount > 0 then\n    broadcastFeedback(_, placeCount, \"Object\", \"Placed\", { 1, 1, 1 })\n  end\n\n  if moveCount > 0 then\n    broadcastFeedback(_, moveCount, \"Object\", \"Moved\", { 1, 1, 1 })\n  end\n\n  if placeCount == 0 and moveCount == 0 then\n    broadcastToAll(\"Bag is empty and no matching objects were found in play\", { 1, 1, 1 })\n  end\nend\n\nfunction buttonClick_recall()\n  local count = 0\n  for guid, _ in pairs(memoryList) do\n    local obj = getObjectFromGUID(guid)\n    if obj ~= nil then\n      self.putObject(obj)\n      count = count + 1\n    end\n  end\n  broadcastFeedback(_, count, \"Object\", \"Recalled\", { 1, 1, 1 })\nend\n\nfunction removeAllHighlights()\n  for _, obj in ipairs(getObjects()) do\n    obj.highlightOff()\n  end\nend\n\n-- Round vector to the Nth decimal\nfunction roundVector(vec, dec)\n  local mult = 10 ^ (dec or 0)\n  local t = {}\n  for _, k in ipairs({ \"x\", \"y\", \"z\" }) do\n    t[k] = math.floor(vec[k] * mult + 0.5) / mult\n  end\n  return t\nend\nend)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"MemoryBag\")\nend)\nreturn __bundle_require(\"__root\")",
  "LuaScriptState": "{\"ml\":{\"046b16\":{\"lock\":false,\"pos\":{\"x\":11.131,\"y\":1.495,\"z\":-8.171},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"12660b\":{\"lock\":false,\"pos\":{\"x\":14.49,\"y\":1.495,\"z\":15.856},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"18286f\":{\"lock\":false,\"pos\":{\"x\":18.861,\"y\":1.551,\"z\":3.927},\"rot\":{\"x\":0,\"y\":90,\"z\":0}},\"19e7d8\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.534,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"21ca4f\":{\"lock\":false,\"pos\":{\"x\":-20.423,\"y\":1.534,\"z\":8.211},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"2240f9\":{\"lock\":false,\"pos\":{\"x\":7.899,\"y\":1.495,\"z\":-0.186},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"23b896\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.534,\"z\":7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"275450\":{\"lock\":false,\"pos\":{\"x\":-58.543,\"y\":1.564,\"z\":12.043},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"2f4f15\":{\"lock\":false,\"pos\":{\"x\":-2.94,\"y\":1.597,\"z\":0.393},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"308dbb\":{\"lock\":false,\"pos\":{\"x\":-15.066,\"y\":1.534,\"z\":2.398},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"31d1cf\":{\"lock\":false,\"pos\":{\"x\":-24.397,\"y\":1.534,\"z\":-10.164},\"rot\":{\"x\":0,\"y\":270,\"z\":360}},\"3761ce\":{\"lock\":false,\"pos\":{\"x\":-31.077,\"y\":1.534,\"z\":-10.091},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"379ac4\":{\"lock\":false,\"pos\":{\"x\":-29.509,\"y\":1.534,\"z\":10.139},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"408a82\":{\"lock\":false,\"pos\":{\"x\":-26.967,\"y\":1.534,\"z\":16.681},\"rot\":{\"x\":0,\"y\":270,\"z\":360}},\"41b1e8\":{\"lock\":false,\"pos\":{\"x\":-20.449,\"y\":1.534,\"z\":-15.675},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"423d46\":{\"lock\":false,\"pos\":{\"x\":14.503,\"y\":1.495,\"z\":-8.189},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"46185e\":{\"lock\":false,\"pos\":{\"x\":-38.005,\"y\":1.534,\"z\":-2.39},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"4942e3\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.533,\"z\":15.301},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"4deeff\":{\"lock\":false,\"pos\":{\"x\":-27.617,\"y\":1.534,\"z\":-1.02},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"55fc3d\":{\"lock\":false,\"pos\":{\"x\":11.131,\"y\":1.495,\"z\":15.829},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"5630c2\":{\"lock\":false,\"pos\":{\"x\":-16.567,\"y\":1.534,\"z\":-10.111},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"634e9e\":{\"lock\":false,\"pos\":{\"x\":-55.154,\"y\":1.564,\"z\":12.139},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"66b7d5\":{\"lock\":false,\"pos\":{\"x\":14.478,\"y\":1.495,\"z\":-0.183},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"6818e0\":{\"lock\":false,\"pos\":{\"x\":-38.067,\"y\":1.534,\"z\":10.031},\"rot\":{\"x\":0,\"y\":270,\"z\":360}},\"692e5f\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.534,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"6fa7fa\":{\"lock\":false,\"pos\":{\"x\":14.502,\"y\":1.495,\"z\":-16.158},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"80628f\":{\"lock\":false,\"pos\":{\"x\":7.87,\"y\":1.495,\"z\":15.773},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"833305\":{\"lock\":false,\"pos\":{\"x\":11.131,\"y\":1.495,\"z\":-0.171},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"869d4c\":{\"lock\":false,\"pos\":{\"x\":11.131,\"y\":1.495,\"z\":-16.171},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"8dce44\":{\"lock\":false,\"pos\":{\"x\":7.843,\"y\":1.495,\"z\":7.804},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"95b160\":{\"lock\":false,\"pos\":{\"x\":-15.364,\"y\":1.534,\"z\":-2.39},\"rot\":{\"x\":0,\"y\":270,\"z\":360}},\"95fb5e\":{\"lock\":false,\"pos\":{\"x\":-55,\"y\":1.564,\"z\":8.531},\"rot\":{\"x\":0,\"y\":180,\"z\":0}},\"9bec2d\":{\"lock\":false,\"pos\":{\"x\":-17.04,\"y\":1.534,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"acb83a\":{\"lock\":false,\"pos\":{\"x\":-65,\"y\":3.495,\"z\":16.1},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"acd0da\":{\"lock\":false,\"pos\":{\"x\":11.132,\"y\":1.495,\"z\":7.829},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"af8db2\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.534,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"b5b8db\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.534,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"c5f67a\":{\"lock\":false,\"pos\":{\"x\":-17.04,\"y\":1.534,\"z\":0},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"c83097\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.534,\"z\":-15.3},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"ce0dd5\":{\"lock\":false,\"pos\":{\"x\":7.856,\"y\":1.495,\"z\":-16.204},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"d2ad6e\":{\"lock\":false,\"pos\":{\"x\":-23.64,\"y\":1.534,\"z\":7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"d6771f\":{\"lock\":false,\"pos\":{\"x\":14.436,\"y\":1.495,\"z\":7.822},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"dba516\":{\"lock\":false,\"pos\":{\"x\":-3.714,\"y\":1.597,\"z\":-10.4},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"e1b8fc\":{\"lock\":false,\"pos\":{\"x\":-30.24,\"y\":1.533,\"z\":-7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":180}},\"e470cd\":{\"lock\":false,\"pos\":{\"x\":7.907,\"y\":1.495,\"z\":-8.179},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"e88ba8\":{\"lock\":false,\"pos\":{\"x\":-55.212,\"y\":1.564,\"z\":19.971},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"f3aa75\":{\"lock\":false,\"pos\":{\"x\":-2.94,\"y\":1.597,\"z\":-5.104},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"f455e2\":{\"lock\":false,\"pos\":{\"x\":18.734,\"y\":1.551,\"z\":-4.471},\"rot\":{\"x\":0,\"y\":90,\"z\":0}},\"fac63b\":{\"lock\":false,\"pos\":{\"x\":-36.84,\"y\":1.534,\"z\":7.65},\"rot\":{\"x\":0,\"y\":270,\"z\":180}}},\"setupButton\":false}",
  "XmlUI": "",
  "ContainedObjects": [
    {
      "GUID": "046b16",
      "Name": "Card",
      "Transform": {
        "posX": 11.131,
        "posY": 1.49510384,
        "posZ": -8.1708,
        "rotX": -2.00829945E-07,
        "rotY": 270.000031,
        "rotZ": 9.614574E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "String of Curses",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"09088\",\n  \"type\": \"Event\",\n  \"class\": \"Mystic\",\n  \"cost\": 1,\n  \"level\": 0,\n  \"traits\": \"Spell.\",\n  \"combatIcons\": 1,\n  \"agilityIcons\": 1,\n  \"cycle\": \"The Scarlet Keys\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 379112,
      "SidewaysCard": false,
      "CustomDeck": {
        "3791": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1814412497119474921/33ED44071C8BCA7379B0E8031F47169B73639E37/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 9,
          "NumHeight": 6,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "12660b",
      "Name": "Card",
      "Transform": {
        "posX": 14.4896,
        "posY": 1.49510384,
        "posZ": 15.8557,
        "rotX": -3.79337841E-08,
        "rotY": 269.999939,
        "rotZ": -4.473112E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": ".45 Automatic",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"01016\",\n  \"alternate_ids\": [\n    \"01516\"\n  ],\n  \"type\": \"Asset\",\n  \"slot\": \"Hand\",\n  \"class\": \"Guardian\",\n  \"cost\": 4,\n  \"level\": 0,\n  \"traits\": \"Item. Weapon. Firearm.\",\n  \"agilityIcons\": 1,\n  \"uses\": [\n    {\n      \"count\": 4,\n      \"type\": \"Ammo\",\n      \"token\": \"resource\"\n    }\n  ],\n  \"cycle\": \"Core\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 226330,
      "SidewaysCard": false,
      "CustomDeck": {
        "2263": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860341956212466/C93A881D22B4F7E429025CFAE677DC2EB341D6A6/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "18286f",
      "Name": "Notecard",
      "Transform": {
        "posX": 18.8611,
        "posY": 1.551499,
        "posZ": 3.9265,
        "rotX": 9.413467E-09,
        "rotY": 89.9908,
        "rotZ": -4.34505365E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Election Night Setup",
      "Description": "Choose two of the five classes!\n\nPut each of those assets into play and add each of those events to your hand!\n\nThere is no player deck or encounter deck, so puzzle it out!",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "19e7d8",
      "Name": "Card",
      "Transform": {
        "posX": -36.8400078,
        "posY": 1.53356671,
        "posZ": 4.29770566E-08,
        "rotX": 0.0006939194,
        "rotY": 270.0016,
        "rotZ": 180.002975,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Southside",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01126\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Square\",\n    \"connections\": \"Diamond|Plus|Circle\"\n  },\n  \"locationBack\": {\n    \"icons\": \"Square\",\n    \"connections\": \"Diamond|Plus|Circle\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232307,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "21ca4f",
      "Name": "Card",
      "Transform": {
        "posX": -20.4234028,
        "posY": 1.53360486,
        "posZ": 8.211052,
        "rotX": 4.12782022E-08,
        "rotY": 270.0104,
        "rotZ": -1.69260783E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Engineer",
      "Description": "Ally. Bystander.",
      "GMNotes": "{\n  \"id\": \"51031\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Ally. Bystander.\",\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 233928,
      "SidewaysCard": false,
      "CustomDeck": {
        "2339": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/782999241296009359/3EF850792428E467A4475333CCBBF6E6B5975186/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2240f9",
      "Name": "Card",
      "Transform": {
        "posX": 7.8994,
        "posY": 1.49510384,
        "posZ": -0.186299935,
        "rotX": 2.11363556E-07,
        "rotY": 270.0,
        "rotZ": -1.02027138E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Coup de Grâce",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"04269\",\n  \"type\": \"Event\",\n  \"class\": \"Rogue\",\n  \"cost\": 2,\n  \"level\": 0,\n  \"traits\": \"Tactic. Fated.\",\n  \"combatIcons\": 2,\n  \"cycle\": \"The Forgotten Age\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 276200,
      "SidewaysCard": false,
      "CustomDeck": {
        "2762": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1016065725025944587/520448D0E9C22F102C7DDF64322EAD6FC221ECC8/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "23b896",
      "Name": "Card",
      "Transform": {
        "posX": -30.2400017,
        "posY": 1.53356552,
        "posZ": 7.65011024,
        "rotX": 0.000631556963,
        "rotY": 270.030334,
        "rotZ": 180.002945,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Miskatonic University",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01129\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Diamond\",\n    \"connections\": \"Tee|Plus|Circle|Square\"\n  },\n  \"locationBack\": {\n    \"victory\": 1,\n    \"icons\": \"Diamond\",\n    \"connections\": \"Tee|Plus|Circle|Square\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232310,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "275450",
      "Name": "Card",
      "Transform": {
        "posX": -58.5429,
        "posY": 1.56360507,
        "posZ": 12.0425987,
        "rotX": -5.54748E-09,
        "rotY": 270.000366,
        "rotZ": 1.06092317E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Heavy Furs",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"08126\",\n  \"type\": \"Asset\",\n  \"slot\": \"Body\",\n  \"class\": \"Neutral\",\n  \"cost\": 2,\n  \"level\": 0,\n  \"traits\": \"Item. Armor.\",\n  \"combatIcons\": 1,\n  \"cycle\": \"Edge of the Earth\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "CardWithHelper",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 378955,
      "SidewaysCard": false,
      "CustomDeck": {
        "3789": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/2424696374430579575/1F73F1B9316F11895AAD6A82B9AF2E2398FAD2F6/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"playercards/cards/HeavyFurs\")\nend)\n__bundle_register(\"chaosbag/ChaosBagApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local ChaosBagApi = {}\n\n  -- respawns the chaos bag with a new state of tokens\n  ---@param tokenList table List of chaos token ids\n  ChaosBagApi.setChaosBagState = function(tokenList)\n    Global.call(\"setChaosBagState\", tokenList)\n  end\n\n  -- returns a Table List of chaos token ids in the current chaos bag\n  -- requires copying the data into a new table because TTS is weird about handling table return values in Global\n  ChaosBagApi.getChaosBagState = function()\n    local chaosBagContentsCatcher = Global.call(\"getChaosBagState\")\n    local chaosBagContents = {}\n    for _, v in ipairs(chaosBagContentsCatcher) do\n      table.insert(chaosBagContents, v)\n    end\n    return chaosBagContents\n  end\n\n  -- checks scripting zone for chaos bag (also called by a lot of objects!)\n  ChaosBagApi.findChaosBag = function()\n    return Global.call(\"findChaosBag\")\n  end\n\n  -- returns a table of object references to the tokens in play (does not include sealed tokens!)\n  ChaosBagApi.getTokensInPlay = function()\n    return Global.call(\"getChaosTokensinPlay\")\n  end\n\n  -- returns all sealed tokens on cards to the chaos bag\n  ---@param playerColor string Color of the player to show the broadcast to\n  ChaosBagApi.releaseAllSealedTokens = function(playerColor)\n    Global.call(\"releaseAllSealedTokens\", playerColor)\n  end\n\n  -- returns all drawn tokens to the chaos bag\n  ChaosBagApi.returnChaosTokens = function()\n    Global.call(\"returnChaosTokens\")\n  end\n\n  -- removes the specified chaos token from the chaos bag\n  ---@param id string ID of the chaos token\n  ChaosBagApi.removeChaosToken = function(id)\n    Global.call(\"removeChaosToken\", id)\n  end\n\n  -- returns a chaos token to the bag and calls all relevant functions\n  ---@param token tts__Object Chaos token to return\n  ---@param fromBag boolean whether or not the token to return was in the middle of being drawn (true) or elsewhere (false)\n  ChaosBagApi.returnChaosTokenToBag = function(token, fromBag)\n    Global.call(\"returnChaosTokenToBag\", { token = token, fromBag = fromBag })\n  end\n\n  -- spawns the specified chaos token and puts it into the chaos bag\n  ---@param id string ID of the chaos token\n  ChaosBagApi.spawnChaosToken = function(id)\n    Global.call(\"spawnChaosToken\", id)\n  end\n\n  -- Checks to see if the chaos bag can be manipulated.  If a player is searching the bag when tokens\n  -- are drawn or replaced a TTS bug can cause those tokens to vanish.  Any functions which change the\n  -- contents of the bag should check this method before doing so.\n  -- This method will broadcast a message to all players if the bag is being searched.\n  ---@return any: True if the bag is manipulated, false if it should be blocked.\n  ChaosBagApi.canTouchChaosTokens = function()\n    return Global.call(\"canTouchChaosTokens\")\n  end\n\n  ChaosBagApi.activeRedrawEffect = function(validTokens, invalidTokens, returnToPool, drawSpecificToken)\n    Global.call(\"activeRedrawEffect\", {\n      validTokens = validTokens,\n      invalidTokens = invalidTokens,\n      returnToPool = returnToPool,\n      drawSpecificToken = drawSpecificToken\n    })\n  end\n\n  ChaosBagApi.getReadableTokenName = function(tokenName)\n    return Global.call(\"getReadableTokenName\", tokenName)\n  end\n\n  ChaosBagApi.getChaosTokenName = function(chosenToken)\n    return Global.call(\"getChaosTokenName\", chosenToken)\n  end\n\n  -- draws a chaos token to a playermat\n  ---@param mat tts__Object Playermat that triggered this\n  ---@param drawAdditional boolean Controls whether additional tokens should be drawn\n  ---@param tokenType? string Name of token (e.g. \"Bless\") to be drawn from the bag\n  ---@param guidToBeResolved? string GUID of the sealed token to be resolved instead of drawing a token from the bag\n  ---@param takeParameters? table Position and rotation of the location where the new token should be drawn to, usually to replace a returned token\n  ---@return tts__Object: Object reference to the token that was drawn\n  ChaosBagApi.drawChaosToken = function(mat, drawAdditional, tokenType, guidToBeResolved, takeParameters)\n    return Global.call(\"drawChaosToken\", {\n      mat              = mat,\n      drawAdditional   = drawAdditional,\n      tokenType        = tokenType,\n      guidToBeResolved = guidToBeResolved,\n      takeParameters   = takeParameters\n    })\n  end\n\n  -- returns a Table List of chaos token ids in the current chaos bag\n  -- requires copying the data into a new table because TTS is weird about handling table return values in Global\n  ChaosBagApi.getIdUrlMap = function()\n    return Global.getTable(\"ID_URL_MAP\")\n  end\n\n  return ChaosBagApi\nend\nend)\n__bundle_register(\"playercards/CardsThatRedrawTokens\", function(require, _LOADED, __bundle_register, __bundle_modules)\n--[[ Library for cards that return and redraw tokens\nThis file is used to add an XML button to a card, turned on via context menu.\nValid options modify the appearance of the XML button, as well as the\nbehavior of the return and redraw function. Set options before requiring this file.\n\nParameters for the return and redraw functions. Typically set VALID_TOKENS or INVALID_TOKENS, not both.\nIf there are no restrictions on which tokens can be redrawn (e.g. Wendy Adams), keep both empty.\n* VALID_TOKENS --@type table\n  - keyed table which lists all tokens that can be redrawn by the card\n  - example usage: \"False Covenant\"\n  > VALID_TOKENS = {\n  >   [\"Curse\"]       = true\n  > }\n\n* INVALID_TOKENS  --@type table\n  - keyed table which lists all tokens that cannot be redrawn by the card\n  - example usage: \"Custom Ammunition\"\n  > INVALID_TOKENS = {\n  >   [\"Auto-fail\"]       = true\n  > }\n\n* DRAW_SPECIFIC_TOKEN --@type string (name of token or nil)\n  - if set, will attempt to draw that specific token\n\n* RETURN_TO_POOL --@type string\n  - allows for the name of the card to be passed onto Global for any special handling\n\nThe following parameters modify the appearence of the XML button and are not listed as part of a table.\n - buttonHeight (default is 450)\n - buttonWidth  (default is 1400)\n - buttonPosition (default is \"0 -55 -22\")\n - buttonFontSize (default is 250)\n - buttonRotation (change if button is placed on an investigator cards)\n - buttonLabel (default is \"Redraw Token\")\n - buttonIcon (to add an icon to the right)\n - buttonColor (default is \"#77674DE6\")\n\n----------------------------------------------------------\nEXAMPLE: Claypool's Furs\nThis card can only redraw the Frost token, and is replaced with a random token from the bag.\nAs a nice reminder the XML button takes on the Frost color and icon with the text \"Cancel\".\n  > buttonValue = \"Cancel\"\n  > buttonIcon = \"token-frost\"\n  > buttonColor = \"#404450E6\"\n  > buttonFontSize = 300\n\n  > VALID_TOKENS = {\n  >   [\"Frost\"] = true\n  > }\n  >\n  > require...\n----------------------------------------------------------]]\n\nlocal chaosBagApi = require(\"chaosbag/ChaosBagApi\")\n\n-- intentionally global\nhasXML          = true\nisHelperEnabled = false\n\nfunction updateSave()\n  self.script_state = JSON.encode({ isHelperEnabled = isHelperEnabled })\nend\n\nfunction onLoad(savedData)\n  if savedData and savedData ~= \"\" then\n    local loadedData = JSON.decode(savedData)\n    isHelperEnabled = loadedData.isHelperEnabled\n  end\n  createHelperXML()\n  if isHelperEnabled then\n    updateDisplay()\n  end\nend\n\nfunction createHelperXML()\n  local xmlTable = { {\n    tag = \"Button\",\n    attributes = {\n      active = \"false\",\n      id = \"Helper\",\n      height = buttonHeight or 450,\n      width = buttonWidth or 1400,\n      rotation = buttonRotation or \"0 0 180\",\n      scale = \"0.1 0.1 1\",\n      position = buttonPosition or \"0 -55 -22\",\n      padding = \"50 50 50 50\",\n      font = \"font_teutonic-arkham\",\n      fontSize = buttonFontSize or 250,\n      onClick = \"triggerXMLTokenLabelCreation\",\n      color = buttonColor or \"#77674DE6\",\n      textColor = \"White\"\n    },\n    value = buttonLabel or \"Redraw Token\"\n  } }\n  if buttonIcon then\n    xmlTable[1].attributes.iconWidth = \"400\"\n    xmlTable[1].attributes.iconAlignment = \"Right\"\n    xmlTable[1].attributes.icon = buttonIcon\n  end\n  self.UI.setXmlTable(xmlTable)\nend\n\nfunction triggerXMLTokenLabelCreation()\n  chaosBagApi.activeRedrawEffect(VALID_TOKENS, INVALID_TOKENS, RETURN_TO_POOL)\nend\nend)\n__bundle_register(\"playercards/CardsWithHelper\", function(require, _LOADED, __bundle_register, __bundle_modules)\n--[[ Library for cards that have helpers\nThis file is used to share code between cards with helpers.\nIt syncs the visibility of the helper with the option panel and\nmakes sure the card has the respective tag.\nAdditionally, it will call 'initiliaze()' and 'shutOff()'\nin the parent file if they are present.\n\nInstructions:\n1) Define the global variables before requiring this file:\nhasXML          = true  (whether the card has an XML display)\nisHelperEnabled = false (default state of the helper, should be 'false')\n\n2) Add \"CardWithHelper\" tag to .json for the card object itself.\n\n3) Add `if isHelperEnabled then updateDisplay() end` to onLoad()\n\n----------------------------------------------------------]]\n\n-- forces a new state\nfunction setHelperState(newState)\n  if doNotTurnOff == true then return end\n  isHelperEnabled = newState\n  updateSave()\n  updateDisplay()\nend\n\n-- toggles the current state\nfunction toggleHelper(manual)\n  if manual and isHelperEnabled == true then -- do not allow helper to be forced to turn on\n    doNotTurnOff = true\n  elseif manual and isHelperEnabled == false then -- return to default behavior\n    doNotTurnOff = false\n  end\n  isHelperEnabled = not isHelperEnabled\n  updateSave()\n  updateDisplay()\nend\n\n-- updates the visibility and calls events (after a small delay to allow XML being set)\nfunction updateDisplay()\n  Wait.frames(actualDisplayUpdate, 5)\nend\n\nfunction actualDisplayUpdate()\n  if isHelperEnabled then\n    self.clearContextMenu()\n    self.addContextMenuItem(\"Disable Helper\", toggleHelper)\n    if hasXML then self.UI.show(\"Helper\") end\n    if initialize then initialize() end\n  else\n    self.clearContextMenu()\n    self.addContextMenuItem(\"Enable Helper\", toggleHelper)\n    if hasXML then self.UI.hide(\"Helper\") end\n    if shutOff then shutOff() end\n  end\nend\n\nfunction onPickUp()\n  setHelperState(false)\nend\nend)\n__bundle_register(\"playercards/cards/HeavyFurs\", function(require, _LOADED, __bundle_register, __bundle_modules)\nVALID_TOKENS = {\n  [\"Skull\"] = true,\n  [\"Tablet\"] = true,\n  [\"Elder Thing\"] = true,\n  [\"Cultist\"] = true,\n  [\"Frost\"] = true,\n  [\"Custom Token\"] = true,\n  [\"Elder Sign\"] = true,\n  [\"Bless\"] = true,\n  [\"Curse\"] = true\n}\n\nrequire(\"playercards/CardsWithHelper\")\nrequire(\"playercards/CardsThatRedrawTokens\")\nend)\nreturn __bundle_require(\"__root\")",
      "LuaScriptState": "{\"isHelperEnabled\":true}",
      "XmlUI": "",
      "CustomUIAssets": [
        {
          "Type": 1,
          "Name": "font_teutonic-arkham",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/2027213118467703445/89328E273B4C5180BF491516CE998DE3C604E162/"
        }
      ]
    },
    {
      "GUID": "2f4f15",
      "Name": "CardCustom",
      "Transform": {
        "posX": -2.9400003,
        "posY": 1.59660506,
        "posZ": 0.393000066,
        "rotX": 2.84163484E-08,
        "rotY": 270.0,
        "rotZ": 2.5332797E-10,
        "scaleX": 0.714955747,
        "scaleY": 1.0,
        "scaleZ": 0.714955747
      },
      "Nickname": "Agenda - Poll Bearers",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 846300,
      "SidewaysCard": false,
      "CustomDeck": {
        "8463": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/50204544123953447/09E877B206263FAB84C21A6CDBDD22B0EA5509C0/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/50204544123953517/3F3A1C27B20AA6428DA515BA6FF33C279023941D/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "308dbb",
      "Name": "Card",
      "Transform": {
        "posX": -15.0660934,
        "posY": 1.53352451,
        "posZ": 2.39840031,
        "rotX": 0.000855336548,
        "rotY": 270.018921,
        "rotZ": 180.0054,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Mr. Grey",
      "Description": "Corrupt Politician",
      "GMNotes": "{\n  \"id\": \"90033b\",\n  \"type\": \"Enemy\",\n  \"class\": \"Mythos\",\n  \"traits\": \"Humanoid. Cultist. Elite.\",  \"uses\": [\n    {\n      \"count\": 2,\n      \"type\": \"Doom\",\n      \"token\": \"doom\"\n    }\n  ],\n    \"victory\": 1,\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 3803104,
      "SidewaysCard": false,
      "CustomDeck": {
        "38031": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1719794129200855324/3885370C84672667E1C478DF751E87BC81C16EC6/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1719794129200861827/37BF32076F21A65CAE81890E92069515120B4EA3/",
          "NumWidth": 3,
          "NumHeight": 3,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "31d1cf",
      "Name": "Card",
      "Transform": {
        "posX": -24.3969955,
        "posY": 1.53350925,
        "posZ": -10.1635036,
        "rotX": 0.0009978393,
        "rotY": 269.983276,
        "rotZ": 359.9936,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Lodge Neophyte",
      "Description": "Humanoid. Cultist. Silver Twilight.",
      "GMNotes": "{\n  \"id\": \"05095\",\n  \"type\": \"Enemy\",\n  \"class\": \"Mythos\",\n  \"traits\": \"Humanoid. Cultist. Silver Twilight.\",\n  \"uses\": [\n    {\n      \"count\": 2,\n      \"type\": \"Doom\",\n      \"token\": \"doom\"\n    }\n  ],\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 231810,
      "SidewaysCard": false,
      "CustomDeck": {
        "2318": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/829135524526809828/AB799C8FFD9024655A9F179CCFF1EE30DE0D3C75/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "3761ce",
      "Name": "Card",
      "Transform": {
        "posX": -31.0768452,
        "posY": 1.53360486,
        "posZ": -10.0911255,
        "rotX": 6.080273E-08,
        "rotY": 269.990051,
        "rotZ": 6.16546743E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Keeper of Secrets",
      "Description": "Humanoid. Cultist. Silver Twilight.",
      "GMNotes": "{\n  \"id\": \"05096\",\n  \"type\": \"Enemy\",\n  \"class\": \"Mythos\",\n  \"traits\": \"Humanoid. Cultist. Silver Twilight.\",\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 231811,
      "SidewaysCard": false,
      "CustomDeck": {
        "2318": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/829135524526809828/AB799C8FFD9024655A9F179CCFF1EE30DE0D3C75/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "379ac4",
      "Name": "Card",
      "Transform": {
        "posX": -29.509,
        "posY": 1.53360486,
        "posZ": 10.1391029,
        "rotX": 4.64849741E-08,
        "rotY": 270.016724,
        "rotZ": 3.71375886E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "“Jazz” Mulligan",
      "Description": "The Head Janitor",
      "GMNotes": "{\n  \"id\": \"02060\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 234103,
      "SidewaysCard": false,
      "CustomDeck": {
        "2341": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/782999241295993974/70871F727ABBAB3DB22003051B5E1FBF8999AEEB/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "408a82",
      "Name": "Card",
      "Transform": {
        "posX": -26.9667225,
        "posY": 1.53350937,
        "posZ": 16.6814365,
        "rotX": 0.000996401,
        "rotY": 269.9862,
        "rotZ": 359.9936,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Lodge Neophyte",
      "Description": "Humanoid. Cultist. Silver Twilight.",
      "GMNotes": "{\n  \"id\": \"05095\",\n  \"type\": \"Enemy\",\n  \"class\": \"Mythos\",\n  \"traits\": \"Humanoid. Cultist. Silver Twilight.\",\n  \"uses\": [\n    {\n      \"count\": 2,\n      \"type\": \"Doom\",\n      \"token\": \"doom\"\n    }\n  ],\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 231810,
      "SidewaysCard": false,
      "CustomDeck": {
        "2318": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/829135524526809828/AB799C8FFD9024655A9F179CCFF1EE30DE0D3C75/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "41b1e8",
      "Name": "Card",
      "Transform": {
        "posX": -20.4490776,
        "posY": 1.53360486,
        "posZ": -15.67499,
        "rotX": 3.26283427E-08,
        "rotY": 270.0067,
        "rotZ": 2.77679732E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "University Chemist",
      "Description": "Bystander. Miskatonic.",
      "GMNotes": "{\n  \"id\": \"85025\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Bystander. Miskatonic.\",\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 233700,
      "SidewaysCard": false,
      "CustomDeck": {
        "2337": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/784129708171655462/0B7EFEEA9A53B93350FEC7F68F39A20D1D6580A9/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "423d46",
      "Name": "Card",
      "Transform": {
        "posX": 14.5027,
        "posY": 1.49510384,
        "posZ": -8.1893,
        "rotX": 3.095418E-07,
        "rotY": 270.0,
        "rotZ": -5.463756E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "St. Hubert's Key",
      "Description": "Cleansing Fire",
      "GMNotes": "{\n  \"id\": \"03269\",\n  \"type\": \"Asset\",\n  \"slot\": \"Accessory\",\n  \"class\": \"Mystic\",\n  \"cost\": 4,\n  \"level\": 0,\n  \"traits\": \"Item. Charm.\",\n  \"willpowerIcons\": 1,\n  \"cycle\": \"The Path to Carcosa\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 230331,
      "SidewaysCard": false,
      "CustomDeck": {
        "2303": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860341956214701/377534905048B61E88314A81F482DD31D6B54038/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "46185e",
      "Name": "Card",
      "Transform": {
        "posX": -38.0053749,
        "posY": 1.53360486,
        "posZ": -2.39042282,
        "rotX": -3.68468065E-08,
        "rotY": 270.000153,
        "rotZ": -9.69869252E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Mr. Peabody",
      "Description": "Historical Society Curator",
      "GMNotes": "{\n  \"id\": \"03141\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Ally. Historical Society.\",\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 232431,
      "SidewaysCard": false,
      "CustomDeck": {
        "2324": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775107058378761608/B291D276D6FF71FDB43B69DE7507D56767BE975E/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4942e3",
      "Name": "Card",
      "Transform": {
        "posX": -23.6399937,
        "posY": 1.53347564,
        "posZ": 15.3005075,
        "rotX": 0.00182165741,
        "rotY": 269.975769,
        "rotZ": 180.009323,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Curiositie Shoppe",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"04142\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Standalone\",\n  \"locationFront\": {\n    \"icons\": \"FromNorthside\",\n    \"connections\": \"Tee\"\n  },\n  \"locationBack\": {\n    \"victory\": 1,\n    \"icons\": \"FromNorthside\",\n    \"connections\": \"Tee\",\n    \"uses\": [\n      {\n        \"count\": 2,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 235506,
      "SidewaysCard": false,
      "CustomDeck": {
        "2355": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777261131/3E6F9DF9591B05CCE2257F910B261776662220BF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777261683/0D1AA3DD1777795A7A85C5891B15A2EC85BEDBD3/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4deeff",
      "Name": "Card",
      "Transform": {
        "posX": -27.6167,
        "posY": 1.53360486,
        "posZ": -1.01960027,
        "rotX": -1.50182942E-08,
        "rotY": 269.994873,
        "rotZ": -2.08253734E-08,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Charlie Kane",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"09018-m\",\n  \"type\": \"Minicard\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Minicard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 846105,
      "SidewaysCard": false,
      "CustomDeck": {
        "8461": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1814412497119653462/E5CB5A50E22021314BB8963E47516DBE8092D8EF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1814412497119653683/60799F36ADCEBB9027393DBB518B4025D1953FA0/",
          "NumWidth": 4,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "55fc3d",
      "Name": "Card",
      "Transform": {
        "posX": 11.131,
        "posY": 1.49510384,
        "posZ": 15.8291,
        "rotX": 4.66516241E-07,
        "rotY": 270.000031,
        "rotZ": -1.963633E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Riot Whistle",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"07108\",\n  \"type\": \"Asset\",\n  \"slot\": \"Accessory\",\n  \"class\": \"Guardian\",\n  \"cost\": 2,\n  \"level\": 0,\n  \"traits\": \"Item. Tool.\",\n  \"willpowerIcons\": 1,\n  \"uses\": [\n    {\n      \"count\": 1,\n      \"type\": \"Engage\",\n      \"token\": \"universalActionAbility\"\n    }\n  ],\n  \"cycle\": \"The Innsmouth Conspiracy\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 553100,
      "SidewaysCard": false,
      "CustomDeck": {
        "5531": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1684870715280867313/BFD2AF968EAC917D3B838DCB8B1656941CD8B5CC/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5630c2",
      "Name": "Card",
      "Transform": {
        "posX": -16.5673733,
        "posY": 1.53360486,
        "posZ": -10.1110916,
        "rotX": 6.2814145E-08,
        "rotY": 270.0005,
        "rotZ": -2.0736725E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Sergeant Monroe",
      "Description": "Two Days Until Retirement",
      "GMNotes": "{\n  \"id\": \"84008\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"cost\": 5,\n  \"traits\": \"Ally. Police.\",\n  \"willpowerIcons\": 1,\n  \"combatIcons\": 1,\n  \"wildIcons\": 1,\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 534902,
      "SidewaysCard": false,
      "CustomDeck": {
        "5349": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/778493212055041441/90F035BD69A7C5C6B6F43426DDDA3A09DFCBCBDF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "634e9e",
      "Name": "Card",
      "Transform": {
        "posX": -55.1543,
        "posY": 1.56360507,
        "posZ": 12.1387987,
        "rotX": 2.40492888E-08,
        "rotY": 270.0013,
        "rotZ": 9.792437E-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Bonnie Walsh",
      "Description": "Loyal Assistant",
      "GMNotes": "{\n  \"id\": \"09019\",\n  \"type\": \"Asset\",\n  \"slot\": \"Ally\",\n  \"class\": \"Neutral\",\n  \"cost\": 3,\n  \"traits\": \"Ally. Civic. Assistant.\",\n  \"wildIcons\": 2,\n  \"cycle\": \"The Scarlet Keys\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 379012,
      "SidewaysCard": false,
      "CustomDeck": {
        "3790": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/2021606446230201640/A992318B1957FC69EB36B5E6FC87D226AAC5EC21/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "66b7d5",
      "Name": "Card",
      "Transform": {
        "posX": 14.4778,
        "posY": 1.49510384,
        "posZ": -0.182899967,
        "rotX": -8.30776159E-08,
        "rotY": 270.0,
        "rotZ": 5.481417E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Well Connected",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"05028\",\n  \"type\": \"Asset\",\n  \"class\": \"Rogue\",\n  \"cost\": 2,\n  \"level\": 0,\n  \"traits\": \"Condition.\",\n  \"intellectIcons\": 1,\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "CardWithHelper",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 527608,
      "SidewaysCard": false,
      "CustomDeck": {
        "5276": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1016065725025944587/520448D0E9C22F102C7DDF64322EAD6FC221ECC8/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"playercards/cards/WellConnected\")\nend)\n__bundle_register(\"core/GUIDReferenceApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local GUIDReferenceApi = {}\n\n  local function getGuidHandler()\n    return getObjectFromGUID(\"123456\")\n  end\n\n  -- Returns the matching object\n  ---@param owner string Parent object for this search\n  ---@param type string Type of object to search for\n  ---@return any: Object reference to the matching object\n  GUIDReferenceApi.getObjectByOwnerAndType = function(owner, type)\n    return getGuidHandler().call(\"getObjectByOwnerAndType\", { owner = owner, type = type })\n  end\n\n  -- Returns all matching objects as a table with references\n  ---@param type string Type of object to search for\n  ---@return table: List of object references to matching objects\n  GUIDReferenceApi.getObjectsByType = function(type)\n    return getGuidHandler().call(\"getObjectsByType\", type)\n  end\n\n  -- Returns all matching objects as a table with references\n  ---@param owner string Parent object for this search\n  ---@return table: List of object references to matching objects\n  GUIDReferenceApi.getObjectsByOwner = function(owner)\n    return getGuidHandler().call(\"getObjectsByOwner\", owner)\n  end\n\n  -- Sends new information to the reference handler to edit the main index (if type/guid are omitted, entry will be removed)\n  ---@param owner string Parent of the object\n  ---@param type? string Type of the object\n  ---@param guid? string GUID of the object\n  GUIDReferenceApi.editIndex = function(owner, type, guid)\n    return getGuidHandler().call(\"editIndex\", {\n      owner = owner,\n      type = type,\n      guid = guid\n    })\n  end\n\n  -- Returns the owner of an object or the object it's located on\n  ---@param object tts__GameObject Object for this search\n  ---@return string: Parent of the object or object it's located on\n  GUIDReferenceApi.getOwnerOfObject = function(object)\n    return getGuidHandler().call(\"getOwnerOfObject\", object)\n  end\n\n  return GUIDReferenceApi\nend\nend)\n__bundle_register(\"playercards/CardsWithHelper\", function(require, _LOADED, __bundle_register, __bundle_modules)\n--[[ Library for cards that have helpers\nThis file is used to share code between cards with helpers.\nIt syncs the visibility of the helper with the option panel and\nmakes sure the card has the respective tag.\nAdditionally, it will call 'initiliaze()' and 'shutOff()'\nin the parent file if they are present.\n\nInstructions:\n1) Define the global variables before requiring this file:\nhasXML          = true  (whether the card has an XML display)\nisHelperEnabled = false (default state of the helper, should be 'false')\n\n2) Add \"CardWithHelper\" tag to .json for the card object itself.\n\n3) Add `if isHelperEnabled then updateDisplay() end` to onLoad()\n\n----------------------------------------------------------]]\n\n-- forces a new state\nfunction setHelperState(newState)\n  if doNotTurnOff == true then return end\n  isHelperEnabled = newState\n  updateSave()\n  updateDisplay()\nend\n\n-- toggles the current state\nfunction toggleHelper(manual)\n  if manual and isHelperEnabled == true then -- do not allow helper to be forced to turn on\n    doNotTurnOff = true\n  elseif manual and isHelperEnabled == false then -- return to default behavior\n    doNotTurnOff = false\n  end\n  isHelperEnabled = not isHelperEnabled\n  updateSave()\n  updateDisplay()\nend\n\n-- updates the visibility and calls events (after a small delay to allow XML being set)\nfunction updateDisplay()\n  Wait.frames(actualDisplayUpdate, 5)\nend\n\nfunction actualDisplayUpdate()\n  if isHelperEnabled then\n    self.clearContextMenu()\n    self.addContextMenuItem(\"Disable Helper\", toggleHelper)\n    if hasXML then self.UI.show(\"Helper\") end\n    if initialize then initialize() end\n  else\n    self.clearContextMenu()\n    self.addContextMenuItem(\"Enable Helper\", toggleHelper)\n    if hasXML then self.UI.hide(\"Helper\") end\n    if shutOff then shutOff() end\n  end\nend\n\nfunction onPickUp()\n  setHelperState(false)\nend\nend)\n__bundle_register(\"playercards/cards/WellConnected\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"playercards/CardsWithHelper\")\nlocal playermatApi     = require(\"playermat/PlayermatApi\")\n\n-- intentionally global\nhasXML                 = true\nisHelperEnabled        = false\n\nlocal modValue, loopId\n\nfunction updateSave()\n  self.script_state = JSON.encode({\n    isHelperEnabled = isHelperEnabled,\n    loopId = loopId\n  })\nend\n\nfunction onLoad(savedData)\n  if savedData and savedData ~= \"\" then\n    local loadedData = JSON.decode(savedData)\n    isHelperEnabled = loadedData.isHelperEnabled\n    loopId = loadedData.loopId\n  end\n\n  -- use metadata to detect level and adjust modValue accordingly\n  if JSON.decode(self.getGMNotes()).level == 0 then\n    modValue = 5\n  else\n    modValue = 4\n  end\n  createHelperXML()\n\n  if isHelperEnabled then\n    initialize()\n  end\nend\n\nfunction initialize()\n  updateValue()\n  loopId = Wait.time(updateValue, 2, -1)\nend\n\nfunction shutOff()\n  self.clearButtons()\n  if loopId then\n    Wait.stop(loopId)\n    loopId = nil\n  end\nend\n\nfunction createHelperXML()\n  local xmlTable = { {\n    tag = \"Panel\",\n    attributes = {\n      active = \"false\",\n      id = \"Helper\",\n      height = 155,\n      width = 155,\n      rotation = \"0 0 180\",\n      scale = \"0.18 0.18 1\",\n      position = \"-89 109 -22\",\n      padding = \"10 10 10 10\",\n      color = \"#134201E6\",\n    },\n    children = { {\n      tag = \"Text\",\n      attributes = {\n        id = \"Count\",\n        text = \"0\",\n        color = \"White\",\n        font = \"font_teutonic-arkham\",\n        fontsize = \"135\"\n      }\n    }}\n  } }\n  self.UI.setXmlTable(xmlTable)\nend\n\nfunction updateValue()\n  local matColor = playermatApi.getMatColorByPosition(self.getPosition())\n  local resources = playermatApi.getCounterValue(matColor, \"ResourceCounter\")\n  local count = tostring(math.floor(resources / modValue))\n  self.UI.setAttribute(\"Count\", \"text\", count)\nend\nend)\n__bundle_register(\"playermat/PlayermatApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local PlayermatApi = {}\n  local guidReferenceApi = require(\"core/GUIDReferenceApi\")\n  local searchLib = require(\"util/SearchLib\")\n  local localInvestigatorPosition = { x = -1.17, y = 1, z = -0.01 }\n\n  -- Convenience function to look up a mat's object by color, or get all mats.\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@return table: Single-element if only single playermat is requested\n  local function getMatForColor(matColor)\n    if matColor == \"All\" then\n      return guidReferenceApi.getObjectsByType(\"Playermat\")\n    else\n      return { matColor = guidReferenceApi.getObjectByOwnerAndType(matColor, \"Playermat\") }\n    end\n  end\n\n  -- Returns the color of the closest playermat\n  ---@param startPos table Starting position to get the closest mat from\n  PlayermatApi.getMatColorByPosition = function(startPos)\n    local result, smallestDistance\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local distance = Vector.between(startPos, mat.getPosition()):magnitude()\n      if smallestDistance == nil or distance < smallestDistance then\n        smallestDistance = distance\n        result = matColor\n      end\n    end\n    return result\n  end\n\n  -- Returns the color of the player's hand that is seated next to the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getPlayerColor = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.getVar(\"playerColor\")\n    end\n  end\n\n  -- Returns the color of the playermat that owns the playercolor's hand\n  ---@param handColor string Color of the playermat\n  PlayermatApi.getMatColor = function(handColor)\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local playerColor = mat.getVar(\"playerColor\")\n      if playerColor == handColor then\n        return matColor\n      end\n    end\n    return nil\n  end\n\n  -- gets the slot data for the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getSlotData = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.getTable(\"slotData\")\n    end\n  end\n\n  -- sets the slot data for the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param newSlotData table New slot data for the playermat\n  PlayermatApi.loadSlotData = function(matColor, newSlotData)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.setTable(\"slotData\", newSlotData)\n      mat.call(\"updateSave\")\n      mat.call(\"updateSlotSymbols\")\n      return\n    end\n  end\n\n  -- Performs a search of the deck area of the requested playermat and returns the result as table\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getDeckAreaObjects = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getDeckAreaObjects\")\n    end\n  end\n\n  -- Flips the top card of the deck (useful after deck manipulation for Norman Withers)\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.flipTopCardFromDeck = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"flipTopCardFromDeck\")\n    end\n  end\n\n  -- Returns the position of the discard pile of the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getDiscardPosition = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"returnGlobalDiscardPosition\")\n    end\n  end\n\n  -- Returns the position of the draw pile of the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getDrawPosition = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"returnGlobalDrawPosition\")\n    end\n  end\n\n  -- Transforms a local position into a global position\n  ---@param localPos table Local position to be transformed\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.transformLocalPosition = function(localPos, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.positionToWorld(localPos)\n    end\n  end\n\n  -- Returns the rotation of the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.returnRotation = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.getRotation()\n    end\n  end\n\n  -- Returns a table with spawn data (position and rotation) for a helper object\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param helperName string Name of the helper object\n  PlayermatApi.getHelperSpawnData = function(matColor, helperName)\n    local resultTable = {}\n    local localPositionTable = {\n      [\"Hand Helper\"] = Vector(-0.055, 0, -1.132),\n      [\"Search Assistant\"] = Vector(-0.34, 0, -1.132)\n    }\n\n    for color, mat in pairs(getMatForColor(matColor)) do\n      resultTable[color] = {\n        position = mat.positionToWorld(localPositionTable[helperName]),\n        rotation = mat.getRotation()\n      }\n    end\n    return resultTable\n  end\n\n\n  -- Triggers the Upkeep for the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param playerColor string Color of the calling player (for messages)\n  PlayermatApi.doUpkeepFromHotkey = function(matColor, playerColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"doUpkeepFromHotkey\", playerColor)\n    end\n  end\n\n  -- Handles discarding for the requested playermat for the provided list of objects\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param objList table List of objects to discard\n  PlayermatApi.discardListOfObjects = function(matColor, objList)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"discardListOfObjects\", objList)\n    end\n  end\n\n  -- Gets data about the active investigator\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getActiveInvestigatorData = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getActiveInvestigatorData\")\n    end\n  end\n\n  -- Gets data about the active investigator\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param newData table New active investigator data (class and id)\n  PlayermatApi.setActiveInvestigatorData = function(matColor, newData)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"setActiveInvestigatorData\", newData)\n    end\n  end\n\n  -- Returns the position for encounter card drawing\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param stack boolean If true, returns the leftmost position instead of the first empty from the right\n  PlayermatApi.getEncounterCardDrawPosition = function(matColor, stack)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return Vector(mat.call(\"getEncounterCardDrawPosition\", stack))\n    end\n  end\n\n  -- Sets the requested playermat's snap points to limit snapping to matching card types or not.  If\n  -- matchTypes is true, the main card slot snap points will only snap assets, while the\n  -- investigator area point will only snap Investigators.  If matchTypes is false, snap points will\n  -- be reset to snap all cards.\n  ---@param matchCardTypes boolean Whether snap points should only snap for the matching card types\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.setLimitSnapsByType = function(matchCardTypes, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"setLimitSnapsByType\", matchCardTypes)\n    end\n  end\n\n  -- Sets the requested playermat's draw 1 button to visible\n  ---@param isDrawButtonVisible boolean Whether the draw 1 button should be visible or not\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.showDrawButton = function(isDrawButtonVisible, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"showDrawButton\", isDrawButtonVisible)\n    end\n  end\n\n  -- Shows or hides the clickable clue counter for the requested playermat\n  ---@param showCounter boolean Whether the clickable counter should be present or not\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.clickableClues = function(showCounter, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"clickableClues\", showCounter)\n    end\n  end\n\n  -- Toggles the use of class textures for the requested playermat\n  ---@param state boolean Whether the class texture should be used or not\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.useClassTexture = function(state, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"useClassTexture\", state)\n    end\n  end\n\n  -- updates the texture of the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param overrideName? string Force a specific texture\n  PlayermatApi.updateTexture = function(matColor, overrideName)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"updateTexture\", overrideName)\n    end\n  end\n\n  -- Removes all clues (to the trash for tokens and counters set to 0) for the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.removeClues = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"removeClues\")\n    end\n  end\n\n  -- Reports the clue count for the requested playermat\n  ---@param useClickableCounters boolean Controls which type of counter is getting checked\n  PlayermatApi.getClueCount = function(useClickableCounters, matColor)\n    local count = 0\n    for _, mat in pairs(getMatForColor(matColor)) do\n      count = count + mat.call(\"getClueCount\", useClickableCounters)\n    end\n    return count\n  end\n\n  -- Updates the specified owned counter\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param type string Counter to target\n  ---@param newValue number Value to set the counter to\n  ---@param modifier number If newValue is not provided, the existing value will be adjusted by this modifier\n  PlayermatApi.updateCounter = function(matColor, type, newValue, modifier)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"updateCounter\", { type = type, newValue = newValue, modifier = modifier })\n    end\n  end\n\n  -- Triggers the draw function for the specified playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param number number Amount of cards to draw\n  PlayermatApi.drawCardsWithReshuffle = function(matColor, number)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"drawCardsWithReshuffle\", number)\n    end\n  end\n\n  -- Returns the resource counter amount\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param type string Counter to target\n  PlayermatApi.getCounterValue = function(matColor, type)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getCounterValue\", type)\n    end\n  end\n\n  -- Returns a list of mat colors that have an investigator placed\n  PlayermatApi.getUsedMatColors = function()\n    local usedColors = {}\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local searchPos = mat.positionToWorld(localInvestigatorPosition)\n      local searchResult = searchLib.atPosition(searchPos, \"isCardOrDeck\")\n      if #searchResult > 0 then\n        table.insert(usedColors, matColor)\n      end\n    end\n    return usedColors\n  end\n\n  -- Returns a list of investigator card objects\n  PlayermatApi.getUsedInvestigatorCards = function()\n    local usedCards = {}\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local searchPos = mat.positionToWorld(localInvestigatorPosition)\n      local searchResult = searchLib.atPosition(searchPos, \"isCardOrDeck\")\n      if #searchResult > 0 then\n        usedCards[matColor] = searchResult[1]\n      end\n    end\n    return usedCards\n  end\n\n  -- Returns investigator name\n  ---@param matColor string Color of the playmat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getInvestigatorName = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      local searchPos = mat.positionToWorld(localInvestigatorPosition)\n      local searchResult = searchLib.atPosition(searchPos, \"isCardOrDeck\")\n      if #searchResult == 1 then\n        return searchResult[1].getName()\n      end\n    end\n    return \"\"\n  end\n\n  -- Resets the specified skill tracker to \"1, 1, 1, 1\"\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.resetSkillTracker = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"resetSkillTracker\")\n    end\n  end\n\n  -- Updates the XML for the slot symbols based on the slotData table\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.updateSlotSymbols = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"updateSlotSymbols\")\n    end\n  end\n\n  -- Finds all objects on the playermat and associated set aside zone and returns a table\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param filter? string Name of the filte function (see util/SearchLib)\n  PlayermatApi.searchAroundPlayermat = function(matColor, filter)\n    local objList = {}\n    for _, mat in pairs(getMatForColor(matColor)) do\n      for _, obj in ipairs(mat.call(\"searchAroundSelf\", filter)) do\n        table.insert(objList, obj)\n      end\n    end\n    return objList\n  end\n\n  -- Discard a non-hidden card from the corresponding player's hand\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.doDiscardOne = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"doDiscardOne\")\n    end\n  end\n\n  -- Spawns the regular action tokens\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.spawnActionTokens = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"spawnActionTokens\")\n    end\n  end\n\n  -- Triggers the metadata sync for all playermats\n  PlayermatApi.syncAllCustomizableCards = function()\n    for _, mat in pairs(getMatForColor(\"All\")) do\n      mat.call(\"syncAllCustomizableCards\")\n    end\n  end\n\n  -- moves + rotates a playermat (and related objects)\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param position table New position for the playermat\n  ---@param rotationY number New y-rotation for the playermat (X and Z will be 0)\n  PlayermatApi.moveAndRotate = function(matColor, position, rotationY)\n    -- get mat and related objects\n    local mat = guidReferenceApi.getObjectByOwnerAndType(matColor, \"Playermat\")\n    local matObjects = guidReferenceApi.getObjectsByOwner(matColor)\n\n    if not mat then return end\n\n    -- use current value if undefined\n    position = position or mat.getPosition()\n    rotationY = rotationY or mat.getRotation().y\n\n    -- store relative positions\n    local storedPositions = {}\n    for _, obj in pairs(matObjects) do\n      if obj ~= mat then\n        storedPositions[obj.getGUID()] = mat.positionToLocal(obj.getPosition())\n      end\n    end\n\n    -- also get objects on the mat\n    local objectsOnMat = searchLib.onObject(mat)\n    for _, obj in ipairs(objectsOnMat) do\n      if obj ~= mat and storedPositions[obj.getGUID()] == nil and obj.interactable ~= false then\n        storedPositions[obj.getGUID()] = mat.positionToLocal(obj.getPosition())\n      end\n    end\n\n    -- move main mat\n    mat.setPosition(position)\n    mat.setRotation({ 0, rotationY, 0 })\n\n    -- set new position + rotation (preserve object X / Z rotation)\n    for guid, pos in pairs(storedPositions) do\n      local obj = getObjectFromGUID(guid)\n      obj.setPosition(mat.positionToWorld(pos))\n\n      -- offset the rotation by 180 degrees if the guid matches the player hand zones\n      local finalRotationY = rotationY\n      if obj.type == \"Hand\" then\n        finalRotationY = rotationY + 180\n      end\n\n      obj.setRotation(obj.getRotation():setAt(\"y\", finalRotationY))\n    end\n  end\n\n  return PlayermatApi\nend\nend)\n__bundle_register(\"util/SearchLib\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local SearchLib = {}\n  local filterFunctions = {\n    isCard = function(x) return x.type == \"Card\" end,\n    isDeck = function(x) return x.type == \"Deck\" end,\n    isCardOrDeck = function(x) return x.type == \"Card\" or x.type == \"Deck\" end,\n    isClue = function(x) return x.memo == \"clueDoom\" and x.is_face_down == false end,\n    isDoom = function(x) return x.memo == \"clueDoom\" and x.is_face_down == true end,\n    isInteractable = function(x) return x.interactable end,\n    isTileOrToken = function(x) return not x.Book and (x.type == \"Tile\" or x.type == \"Generic\") end,\n    isUniversalToken = function(x) return x.getMemo() == \"universalActionAbility\" end,\n  }\n\n  -- performs the actual search and returns a filtered list of object references\n  ---@param pos tts__Vector Global position\n  ---@param rot? tts__Vector Global rotation\n  ---@param size table Size\n  ---@param filter? string Name of the filter function\n  ---@param direction? table Direction (positive is up)\n  ---@param maxDistance? number Distance for the cast\n  local function returnSearchResult(pos, rot, size, filter, direction, maxDistance)\n    local filterFunc = filter and filterFunctions[filter]\n    local searchResult = Physics.cast({\n      origin       = pos,\n      direction    = direction or { 0, 1, 0 },\n      orientation  = rot or { 0, 0, 0 },\n      type         = 3,\n      size         = size,\n      max_distance = maxDistance or 0\n    })\n\n    -- filter the result for matching objects\n    local objList = {}\n    for _, v in ipairs(searchResult) do\n      if (not filter or filterFunc(v.hit_object)) then\n        table.insert(objList, v.hit_object)\n      end\n    end\n    return objList\n  end\n\n  -- searches the specified area\n  function SearchLib.inArea(pos, rot, size, filter)\n    return returnSearchResult(pos, rot, size, filter)\n  end\n\n  -- searches the area on an object\n  function SearchLib.onObject(obj, filter, scale)\n    scale = scale or 1\n    local pos = obj.getPosition() + Vector(0, 1, 0) -- offset by half the cast's height\n    local size = obj.getBounds().size:scale(scale):setAt(\"y\", 2)\n    return returnSearchResult(pos, _, size, filter)\n  end\n\n  -- searches the specified position (a single point)\n  function SearchLib.atPosition(pos, filter)\n    local size = { 0.1, 2, 0.1 }\n    return returnSearchResult(pos, _, size, filter)\n  end\n\n  -- searches below the specified position (downwards until y = 0)\n  function SearchLib.belowPosition(pos, filter)\n    local size = { 0.1, 2, 0.1 }\n    local direction = { 0, -1, 0 }\n    local maxDistance = pos.y\n    return returnSearchResult(pos, _, size, filter, direction, maxDistance)\n  end\n\n  return SearchLib\nend\nend)\nreturn __bundle_require(\"__root\")",
      "LuaScriptState": "{\"isHelperEnabled\":false}",
      "XmlUI": "",
      "CustomUIAssets": [
        {
          "Type": 1,
          "Name": "font_teutonic-arkham",
          "URL": "https://steamusercontent-a.akamaihd.net/ugc/2027213118467703445/89328E273B4C5180BF491516CE998DE3C604E162/"
        }
      ]
    },
    {
      "GUID": "6818e0",
      "Name": "Card",
      "Transform": {
        "posX": -38.0674744,
        "posY": 1.53350925,
        "posZ": 10.03059,
        "rotX": 0.0009974277,
        "rotY": 269.9977,
        "rotZ": 359.9936,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Lodge Neophyte",
      "Description": "Humanoid. Cultist. Silver Twilight.",
      "GMNotes": "{\n  \"id\": \"05095\",\n  \"type\": \"Enemy\",\n  \"class\": \"Mythos\",\n  \"traits\": \"Humanoid. Cultist. Silver Twilight.\",\n  \"uses\": [\n    {\n      \"count\": 2,\n      \"type\": \"Doom\",\n      \"token\": \"doom\"\n    }\n  ],\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 231810,
      "SidewaysCard": false,
      "CustomDeck": {
        "2318": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/829135524526809828/AB799C8FFD9024655A9F179CCFF1EE30DE0D3C75/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "692e5f",
      "Name": "Card",
      "Transform": {
        "posX": -23.6399956,
        "posY": 1.533567,
        "posZ": -7.65000153,
        "rotX": 0.0006949974,
        "rotY": 269.992432,
        "rotZ": 180.00296,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Easttown",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01132\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Crescent\",\n    \"connections\": \"Circle|Triangle\"\n  },\n  \"locationBack\": {\n    \"icons\": \"Crescent\",\n    \"connections\": \"Circle|Triangle\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232313,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "6fa7fa",
      "Name": "Card",
      "Transform": {
        "posX": 14.5015,
        "posY": 1.49510384,
        "posZ": -16.158,
        "rotX": 1.81425165E-07,
        "rotY": 269.9982,
        "rotZ": -2.862735E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Track Shoes",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"05036\",\n  \"type\": \"Asset\",\n  \"class\": \"Survivor\",\n  \"cost\": 3,\n  \"level\": 0,\n  \"traits\": \"Item. Clothing. Footwear.\",\n  \"agilityIcons\": 1,\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 274608,
      "SidewaysCard": false,
      "CustomDeck": {
        "2746": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1016065725025946328/561232524C8EAA4B4371B28652F78969E6ED6FFB/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "80628f",
      "Name": "Card",
      "Transform": {
        "posX": 7.8698,
        "posY": 1.49510384,
        "posZ": 15.7728,
        "rotX": -4.89999756E-08,
        "rotY": 270.000061,
        "rotZ": 7.304148E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Inspiring Presence",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"03228\",\n  \"type\": \"Skill\",\n  \"class\": \"Guardian\",\n  \"level\": 0,\n  \"traits\": \"Innate.\",\n  \"willpowerIcons\": 1,\n  \"intellectIcons\": 1,\n  \"combatIcons\": 1,\n  \"cycle\": \"The Path to Carcosa\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 226301,
      "SidewaysCard": false,
      "CustomDeck": {
        "2263": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860341956212466/C93A881D22B4F7E429025CFAE677DC2EB341D6A6/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "833305",
      "Name": "Card",
      "Transform": {
        "posX": 11.131,
        "posY": 1.49510384,
        "posZ": -0.170899987,
        "rotX": 4.30024478E-08,
        "rotY": 269.991455,
        "rotZ": 1.86821325E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Elusive",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"01050\",\n  \"alternate_ids\": [\n    \"01550\"\n  ],\n  \"type\": \"Event\",\n  \"class\": \"Rogue\",\n  \"cost\": 2,\n  \"level\": 0,\n  \"traits\": \"Tactic.\",\n  \"intellectIcons\": 1,\n  \"agilityIcons\": 1,\n  \"cycle\": \"Core\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 368712,
      "SidewaysCard": false,
      "CustomDeck": {
        "3687": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860672861853482/578CFD93B087B0ADA085E7A99062E6191772D6BD/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "869d4c",
      "Name": "Card",
      "Transform": {
        "posX": 11.131,
        "posY": 1.49510384,
        "posZ": -16.1709,
        "rotX": -1.3593576E-08,
        "rotY": 269.9689,
        "rotZ": 1.16719313E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Trial by Fire",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"05281\",\n  \"type\": \"Event\",\n  \"class\": \"Survivor\",\n  \"cost\": 3,\n  \"level\": 0,\n  \"traits\": \"Spirit.\",\n  \"wildIcons\": 1,\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 374418,
      "SidewaysCard": false,
      "CustomDeck": {
        "3744": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1016065725025946328/561232524C8EAA4B4371B28652F78969E6ED6FFB/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "8dce44",
      "Name": "Card",
      "Transform": {
        "posX": 7.8432,
        "posY": 1.49510384,
        "posZ": 7.8037,
        "rotX": -4.529645E-08,
        "rotY": 269.9899,
        "rotZ": -9.689685E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Crack the Case",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"05110\",\n  \"type\": \"Event\",\n  \"class\": \"Seeker\",\n  \"cost\": 0,\n  \"level\": 0,\n  \"traits\": \"Insight.\",\n  \"intellectIcons\": 1,\n  \"cycle\": \"The Circle Undone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 277812,
      "SidewaysCard": false,
      "CustomDeck": {
        "2778": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1016065725025943833/DE98A03934DF8FF5B3CF6C53143B15BFC3ED7341/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "95b160",
      "Name": "Card",
      "Transform": {
        "posX": -15.3636436,
        "posY": 1.53352582,
        "posZ": -2.38959074,
        "rotX": 0.001267313,
        "rotY": 270.0366,
        "rotZ": 359.99408,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Senator Nathaniel Rhodes",
      "Description": "Adept Politician",
      "GMNotes": "{\n  \"id\": \"54025\",\n  \"type\": \"Enemy\",\n  \"class\": \"Mythos\",\n  \"traits\": \"Humanoid. Cultist. Silver Twilight.\",\n  \"uses\": [\n    {\n      \"count\": 2,\n      \"type\": \"Clue\",\n      \"token\": \"clue\"\n    },\n    {\n      \"count\": 2,\n      \"type\": \"Doom\",\n      \"token\": \"doom\"\n    }\n  ],\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 449600,
      "SidewaysCard": false,
      "CustomDeck": {
        "4496": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1697276706766470010/D835D3A12B12173C78B2FFA055FEFD6042AEDD38/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 6,
          "NumHeight": 6,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "95fb5e",
      "Name": "Card",
      "Transform": {
        "posX": -55.0001,
        "posY": 1.56360507,
        "posZ": 8.531498,
        "rotX": 1.25510011E-08,
        "rotY": 179.997269,
        "rotZ": -1.21623387E-08,
        "scaleX": 1.15,
        "scaleY": 1.0,
        "scaleZ": 1.15
      },
      "Nickname": "Charlie Kane",
      "Description": "The Politician",
      "GMNotes": "{\n  \"id\": \"09018\",\n  \"type\": \"Investigator\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Civic. Socialite.\",\n  \"willpowerIcons\": 1,\n  \"intellectIcons\": 1,\n  \"combatIcons\": 1,\n  \"agilityIcons\": 1,\n  \"cycle\": \"The Scarlet Keys\",\n  \"extraToken\": \"None\",\n  \"signatures\": [\n    {\n      \"09019\": 1,\n      \"09020\": 1\n    }\n  ]\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 843405,
      "SidewaysCard": true,
      "CustomDeck": {
        "8434": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1814412497119606067/D4B307834101CF1589A9A9AEEC4CE2F65E7DF02F/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1814412497119606436/4C276FC15C46EEB0C65BAE449E7D94445B3E1B57/",
          "NumWidth": 4,
          "NumHeight": 2,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "9bec2d",
      "Name": "Card",
      "Transform": {
        "posX": -17.03999,
        "posY": 1.53357387,
        "posZ": -7.650005,
        "rotX": 0.000568067655,
        "rotY": 270.019348,
        "rotZ": 180.002426,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Missing Persons",
      "Description": "Act 1c",
      "GMNotes": "{\n  \"id\": \"04126a\",\n  \"type\": \"Location\",\n  \"cycle\": \"Standalone\",\n  \"locationBack\": {\n    \"victory\": 1,\n    \"icons\": \"FromEasttown\",\n    \"connections\": \"Crescent\",\n    \"uses\": [\n      {\n        \"count\": 2,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  },\n  \"clueThresholdPerInvestigator\": 1\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 234523,
      "SidewaysCard": false,
      "CustomDeck": {
        "2345": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777202805/81C13FF317351E1956828A006E42B5F958402706/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777204414/069B45DA5FC54E05F7D416CA87A45E9FF478C840/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "acb83a",
      "Name": "Card",
      "Transform": {
        "posX": -65.0,
        "posY": 3.4951,
        "posZ": 16.1,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Unexpected Courage",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"01093\",\n  \"type\": \"Skill\",\n  \"class\": \"Neutral\",\n  \"level\": 0,\n  \"traits\": \"Innate.\",\n  \"wildIcons\": 2,\n  \"cycle\": \"Core\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 368508,
      "SidewaysCard": false,
      "CustomDeck": {
        "3685": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860341956216650/56BA7AB3BBDC1F3C1EA8709F0761D4846B45AF83/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "acd0da",
      "Name": "Card",
      "Transform": {
        "posX": 11.1321,
        "posY": 1.49510384,
        "posZ": 7.82870054,
        "rotX": -4.13669227E-07,
        "rotY": 270.000031,
        "rotZ": 8.2589645E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "\"I've got a plan!\"",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"02107\",\n  \"type\": \"Event\",\n  \"class\": \"Seeker\",\n  \"cost\": 3,\n  \"level\": 0,\n  \"traits\": \"Insight. Tactic.\",\n  \"intellectIcons\": 1,\n  \"combatIcons\": 1,\n  \"cycle\": \"The Dunwich Legacy\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 368418,
      "SidewaysCard": false,
      "CustomDeck": {
        "3684": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860341956220005/42E220A3221D2BFA22F1B3A71EEE346A8B0AAD77/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "af8db2",
      "Name": "Card",
      "Transform": {
        "posX": -30.2400017,
        "posY": 1.533568,
        "posZ": 2.35587254E-06,
        "rotX": 0.000683666731,
        "rotY": 270.001648,
        "rotZ": 180.002884,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Rivertown",
      "Description": "Arkham. Central.",
      "GMNotes": "{\n  \"id\": \"01125\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham. Central.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Circle\",\n    \"connections\": \"Crescent|Diamond|Square|Tilde|Hourglass\"\n  },\n  \"locationBack\": {\n    \"icons\": \"Circle\",\n    \"connections\": \"Crescent|Diamond|Square|Tilde|Hourglass\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232306,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b5b8db",
      "Name": "Card",
      "Transform": {
        "posX": -23.6399975,
        "posY": 1.53356779,
        "posZ": 1.78598748E-06,
        "rotX": 0.0006907749,
        "rotY": 269.99707,
        "rotZ": 180.0029,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Downtown",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01130\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Triangle\",\n    \"connections\": \"Crescent|Tee\"\n  },\n  \"locationBack\": {\n    \"icons\": \"Triangle\",\n    \"connections\": \"Crescent|Tee\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232311,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c5f67a",
      "Name": "Card",
      "Transform": {
        "posX": -17.0399876,
        "posY": 1.533568,
        "posZ": 2.95345058E-06,
        "rotX": 0.0006841267,
        "rotY": 269.970734,
        "rotZ": 180.002884,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Town Hall",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"04143\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Standalone\",\n  \"locationFront\": {\n    \"icons\": \"FromDowntown\",\n    \"connections\": \"Triangle\"\n  },\n  \"locationBack\": {\n    \"victory\": 1,\n    \"icons\": \"FromDowntown\",\n    \"connections\": \"Triangle\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 235507,
      "SidewaysCard": false,
      "CustomDeck": {
        "2355": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777261131/3E6F9DF9591B05CCE2257F910B261776662220BF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777261683/0D1AA3DD1777795A7A85C5891B15A2EC85BEDBD3/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c83097",
      "Name": "Card",
      "Transform": {
        "posX": -23.6399975,
        "posY": 1.53360486,
        "posZ": -15.3001041,
        "rotX": 4.653885E-08,
        "rotY": 270.005768,
        "rotZ": 180.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Velma's Diner",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"04141\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Standalone\",\n  \"locationFront\": {\n    \"icons\": \"FromEasttown\",\n    \"connections\": \"Crescent\"\n  },\n  \"locationBack\": {\n    \"icons\": \"FromEasttown\",\n    \"connections\": \"Crescent\"\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 235505,
      "SidewaysCard": false,
      "CustomDeck": {
        "2355": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777261131/3E6F9DF9591B05CCE2257F910B261776662220BF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1467561769777261683/0D1AA3DD1777795A7A85C5891B15A2EC85BEDBD3/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ce0dd5",
      "Name": "Card",
      "Transform": {
        "posX": 7.8564,
        "posY": 1.49510384,
        "posZ": -16.2037,
        "rotX": -3.88818471E-08,
        "rotY": 270.000061,
        "rotZ": -1.0694178E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Lucky!",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"01080\",\n  \"alternate_ids\": [\n    \"01580\"\n  ],\n  \"type\": \"Event\",\n  \"class\": \"Survivor\",\n  \"cost\": 1,\n  \"level\": 0,\n  \"traits\": \"Fortune.\",\n  \"cycle\": \"Core\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 368810,
      "SidewaysCard": false,
      "CustomDeck": {
        "3688": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860672864134253/9A6E0399D3624C5FFBD6CAFE5D4B988436CC65AC/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d2ad6e",
      "Name": "Card",
      "Transform": {
        "posX": -23.6398945,
        "posY": 1.533567,
        "posZ": 7.65000868,
        "rotX": 0.0006903714,
        "rotY": 269.990723,
        "rotZ": 180.00296,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Northside",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01134\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Tee\",\n    \"connections\": \"Diamond|Triangle\"\n  },\n  \"locationBack\": {\n    \"victory\": 1,\n    \"icons\": \"Tee\",\n    \"connections\": \"Diamond|Triangle\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232315,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "d6771f",
      "Name": "Card",
      "Transform": {
        "posX": 14.4355,
        "posY": 1.49510384,
        "posZ": 7.8224,
        "rotX": -1.89576937E-07,
        "rotY": 270.000061,
        "rotZ": 5.01482944E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Fieldwork",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"03024\",\n  \"type\": \"Asset\",\n  \"class\": \"Seeker\",\n  \"cost\": 2,\n  \"level\": 0,\n  \"traits\": \"Talent.\",\n  \"agilityIcons\": 1,\n  \"cycle\": \"The Path to Carcosa\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 368429,
      "SidewaysCard": false,
      "CustomDeck": {
        "3684": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/960860341956220005/42E220A3221D2BFA22F1B3A71EEE346A8B0AAD77/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "dba516",
      "Name": "CardCustom",
      "Transform": {
        "posX": -3.714,
        "posY": 1.59660506,
        "posZ": -10.4000034,
        "rotX": 7.63730945E-09,
        "rotY": 270.018463,
        "rotZ": -1.79223729E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Scenario",
      "Description": "Election Night",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 846500,
      "SidewaysCard": false,
      "CustomDeck": {
        "8465": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/50204544123955607/56C417BE341337FCE7F165FC8B49C42263F7C191/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/50204544123955670/854BD94644FED01DBAD57A1D81B60F727688E6D3/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e1b8fc",
      "Name": "Card",
      "Transform": {
        "posX": -30.2399,
        "posY": 1.53347516,
        "posZ": -7.65030527,
        "rotX": 0.0018225566,
        "rotY": 269.988373,
        "rotZ": 180.009338,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Graveyard",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01133\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Hourglass\",\n    \"connections\": \"Circle\"\n  },\n  \"locationBack\": {\n    \"victory\": 1,\n    \"icons\": \"Hourglass\",\n    \"connections\": \"Circle\",\n    \"uses\": [\n      {\n        \"count\": 2,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232314,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e470cd",
      "Name": "Card",
      "Transform": {
        "posX": 7.9071,
        "posY": 1.49510384,
        "posZ": -8.1789,
        "rotX": 4.66783874E-08,
        "rotY": 270.000061,
        "rotZ": -2.32879685E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Premonition",
      "Description": "",
      "GMNotes": "{\n  \"id\": \"04199\",\n  \"type\": \"Event\",\n  \"class\": \"Mystic\",\n  \"cost\": 0,\n  \"level\": 0,\n  \"traits\": \"Augury.\",\n  \"intellectIcons\": 1,\n  \"agilityIcons\": 1,\n  \"cycle\": \"The Forgotten Age\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 276300,
      "SidewaysCard": false,
      "CustomDeck": {
        "2763": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1016065725025945336/04E36F64C2CBE1B4905FF44A869C75EC52CB3A56/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e88ba8",
      "Name": "Card",
      "Transform": {
        "posX": -55.2122,
        "posY": 1.56360507,
        "posZ": 19.9709,
        "rotX": -9.706929E-09,
        "rotY": 270.0002,
        "rotZ": -6.167269E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Harold Walsted",
      "Description": "Curator of the Museum",
      "GMNotes": "{\n  \"id\": \"02138\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"cost\": 0,\n  \"traits\": \"Ally. Miskatonic.\",\n  \"cycle\": \"Standalone\"\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 846232,
      "SidewaysCard": false,
      "CustomDeck": {
        "8462": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/782999241295993974/70871F727ABBAB3DB22003051B5E1FBF8999AEEB/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f3aa75",
      "Name": "CardCustom",
      "Transform": {
        "posX": -2.9400003,
        "posY": 1.59660506,
        "posZ": -5.10410166,
        "rotX": 4.70835069E-08,
        "rotY": 270.0,
        "rotZ": -1.36375853E-08,
        "scaleX": 0.714955747,
        "scaleY": 1.0,
        "scaleZ": 0.714955747
      },
      "Nickname": "Act - Campaigning",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 846700,
      "SidewaysCard": false,
      "CustomDeck": {
        "8467": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/50204544123954174/EDEEFFBE2DD0BAAC3091F64E3FE86861EDDA1345/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/50205812344264515/A5C5E41B05ED39FD011CE0CBE7AE0AC03FBC6EF4/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "f455e2",
      "Name": "Notecard",
      "Transform": {
        "posX": 18.7341,
        "posY": 1.551499,
        "posZ": -4.4711,
        "rotX": -9.751216E-08,
        "rotY": 89.9908,
        "rotZ": 4.12863E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Election Night Setup",
      "Description": "Make sure that there is:\n- 2 doom on each enemy other than Keeper of Secrets\n- 2 clues on Graveyard and Curiositie Shoppe, 1 clue on each other location",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "fac63b",
      "Name": "Card",
      "Transform": {
        "posX": -36.84,
        "posY": 1.533567,
        "posZ": 7.65000629,
        "rotX": 0.0006948104,
        "rotY": 270.0312,
        "rotZ": 180.00296,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "St. Mary's Hospital",
      "Description": "Arkham.",
      "GMNotes": "{\n  \"id\": \"01128\",\n  \"type\": \"Location\",\n  \"traits\": \"Arkham.\",\n  \"cycle\": \"Core\",\n  \"locationFront\": {\n    \"icons\": \"Plus\",\n    \"connections\": \"Diamond|Square\"\n  },\n  \"locationBack\": {\n    \"icons\": \"Plus\",\n    \"connections\": \"Diamond|Square\",\n    \"uses\": [\n      {\n        \"count\": 1,\n        \"type\": \"Clue\",\n        \"token\": \"clue\"\n      }\n    ]\n  }\n}",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Tags": [
        "Location",
        "ScenarioCard"
      ],
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": true,
      "CardID": 232309,
      "SidewaysCard": false,
      "CustomDeck": {
        "2323": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377431393/4752E394498B81694A370AA6BB05BC5A4E55FD30/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/775106514377430450/FDA37585F019D453CF383D975CF1AB631ECF64B7/",
          "NumWidth": 10,
          "NumHeight": 7,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    }
  ],
  "AttachedDecals": [
    {
      "Transform": {
        "posX": -0.0021877822,
        "posY": -0.08963572,
        "posZ": -0.00288731651,
        "rotX": 270.0,
        "rotY": 359.869568,
        "rotZ": 0.0,
        "scaleX": 2.00000215,
        "scaleY": 2.00000238,
        "scaleZ": 2.00000262
      },
      "CustomDecal": {
        "Name": "dunwich_back",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
        "Size": 7.4
      }
    }
  ]
}