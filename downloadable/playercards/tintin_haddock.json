    {
      "GUID": "662b53",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": 1.4300946,
        "posY": 0.9599992,
        "posZ": 2.79478359,
        "rotX": 0,
        "rotY": 270,
        "rotZ": 0,
        "scaleX": 2.21,
        "scaleY": 0.46,
        "scaleZ": 2.42
      },
      "Nickname": "Tintin & Haddock Investigators",
      "Description": "",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168386304/3487BE3FDA8C1798B8DBE3A99A31FBCA793724C1/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.5.2\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n  local bagObjList = self.getObjects()\r\n  for _, bagObj in ipairs(bagObjList) do\r\n    local data = bagObj.lua_script_state\r\n      if data ~= nil then\r\n        local j = JSON.decode(data)\r\n        if j ~= nil and j.ml ~= nil then\r\n          for guid, entry in pairs(j.ml) do\r\n            memoryList[guid] = entry\r\n          end\r\n        end\r\n      end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n  local objTable = {}\r\n  local curObj = {}\r\n\r\n  for guid in pairs(memoryListBackup) do\r\n    curObj = getObjectFromGUID(guid)\r\n    table.insert(objTable, curObj)\r\n  end\r\n\r\n  return objTable\r\n  -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n      objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n      objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            local dummyIndex = howManyButtons\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n              color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\r\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\r\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\r\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(index, obj, move)\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n       theList = moveList\r\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n         local prevObj = getObjectFromGUID(previousGuid)\r\n         prevObj.highlightOff()\r\n         self.editButton({index=previousIndex, color=colorMove})\r\n         theList[previousGuid] = nil\r\n       end\r\n       previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n      color = {0.75,0.25,0.25,0.6}\r\n      if move == true then\r\n        color = colorMove\r\n      end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n      memoryList = memoryListBackup\r\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n  for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n        self.clearButtons()\r\n        createMemoryActionButtons()\r\n        local count = 0\r\n        for guid in pairs(memoryList) do\r\n            count = count + 1\r\n            memoryListBackup[guid] = nil\r\n            local obj = getObjectFromGUID(guid)\r\n            if obj ~= nil then obj.highlightOff() end\r\n        end\r\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n        memoryList = memoryListBackup\r\n        updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\r\n        font_size=130, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n---    self.createButton({\r\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\r\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n---    })\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objects Placed\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n\tlocal angle = math.rad(obj.getRotation().y)\r\n  local x = desiredPos.x * math.sin(angle)\r\n\tlocal z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n  local mult = 10^(dec or 0)\r\n  return math.floor(num * mult + 0.5) / mult\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"085cc2\":{\"lock\":false,\"pos\":{\"x\":53.574,\"y\":1.4951,\"z\":19.3821},\"rot\":{\"x\":0,\"y\":269.9992,\"z\":0}},\"2e75c6\":{\"lock\":false,\"pos\":{\"x\":56.5681,\"y\":1.4951,\"z\":23.9515},\"rot\":{\"x\":0,\"y\":269.9994,\"z\":0}},\"514997\":{\"lock\":false,\"pos\":{\"x\":59.3896,\"y\":1.4951,\"z\":23.6103},\"rot\":{\"x\":0,\"y\":269.9993,\"z\":0}},\"5bc31e\":{\"lock\":false,\"pos\":{\"x\":56.703,\"y\":1.4951,\"z\":19.342},\"rot\":{\"x\":0,\"y\":269.9998,\"z\":0}},\"ad3ffb\":{\"lock\":false,\"pos\":{\"x\":49.8969,\"y\":1.4951,\"z\":23.9568},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"d99ead\":{\"lock\":false,\"pos\":{\"x\":59.3778,\"y\":1.4951,\"z\":19.4968},\"rot\":{\"x\":0,\"y\":269.9993,\"z\":0}},\"e80b7d\":{\"lock\":false,\"pos\":{\"x\":49.5281,\"y\":1.4951,\"z\":19.2891},\"rot\":{\"x\":0,\"y\":269.9987,\"z\":0}},\"ee26c1\":{\"lock\":false,\"pos\":{\"x\":53.6677,\"y\":1.4951,\"z\":23.8922},\"rot\":{\"x\":0,\"y\":269.9999,\"z\":0}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "085cc2",
          "Name": "CardCustom",
          "Transform": {
            "posX": 53.574,
            "posY": 1.49510384,
            "posZ": 19.3821,
            "rotX": 2.13604654E-08,
            "rotY": 269.9992,
            "rotZ": -3.20785347E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Nestor",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"cdb00dc4-39e6-428b-82e4-ed8c84f67059\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Ally. Assistant\",\"wildIcons\":2,\"cost\":3}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 548100,
          "SidewaysCard": false,
          "CustomDeck": {
            "5481": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168539686/192B37F1529CE37DF4D51EF1AADE1B7D47B22CCD/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "2e75c6",
          "Name": "CardCustom",
          "Transform": {
            "posX": 56.5681,
            "posY": 1.49510384,
            "posZ": 23.9515,
            "rotX": 1.36793744E-07,
            "rotY": 269.9994,
            "rotZ": -1.4180057E-07,
            "scaleX": 0.6,
            "scaleY": 1.0,
            "scaleZ": 0.6
          },
          "Nickname": "Tintin",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"49d546ed-c9a6-4bcb-8b2a-d499ed180813\",\"type\":\"Minicard\",\"id\": \"Z9970-m\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Investigator",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 547600,
          "SidewaysCard": false,
          "CustomDeck": {
            "5476": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168533005/1EE16D7145E053A74A1DCEE36211A3E9B93C43A5/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168533190/312067072E2EFCD57F1529A6E992E8E28A04E0BC/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "514997",
          "Name": "CardCustom",
          "Transform": {
            "posX": 59.3896,
            "posY": 1.49510384,
            "posZ": 23.6103,
            "rotX": 1.76101153E-07,
            "rotY": 269.9993,
            "rotZ": -1.14350826E-07,
            "scaleX": 0.7828339,
            "scaleY": 1.0,
            "scaleZ": 0.7828339
          },
          "Nickname": "Tintin",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"17a5215a-a3d8-4ea7-9e0b-f1090b6311cf\",\"type\":\"Investigator\",\"class\":\"Seeker\",\"traits\":\"Reporter. Wayfarer\",\"agilityIcons\":3,\"combatIcons\":3,\"intellectIcons\":3,\"willpowerIcons\":3,\"id\":\"Z7970\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Investigator",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 547500,
          "SidewaysCard": false,
          "CustomDeck": {
            "5475": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168523160/5622FD470232AD375B62C6CD3DBB81B4E89D8619/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168523390/B0E45650FD7EF484C97AD1D0B9650DB1DED42C2B/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "5bc31e",
          "Name": "CardCustom",
          "Transform": {
            "posX": 56.703,
            "posY": 1.49510384,
            "posZ": 19.342,
            "rotX": 1.32787846E-07,
            "rotY": 269.9998,
            "rotZ": -4.454352E-07,
            "scaleX": 0.6,
            "scaleY": 1.0,
            "scaleZ": 0.6
          },
          "Nickname": "Archibald Haddock",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"8c9c899e-879b-411d-bb3c-474fe49d6507\",\"type\":\"Minicard\",\"id\": \"Z2955-m\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Investigator",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 548000,
          "SidewaysCard": false,
          "CustomDeck": {
            "5480": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168538103/18BD3D41FA7E1E0E7AAD69796BFE08B72A5EC90C/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168538258/53489FE13D18D8E5641531E2279D95E4C9B9913C/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "ad3ffb",
          "Name": "CardCustom",
          "Transform": {
            "posX": 49.8969,
            "posY": 1.49510384,
            "posZ": 23.9568,
            "rotX": -6.28466E-08,
            "rotY": 270.0,
            "rotZ": 1.907708E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "In Over Your Head",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"23dcd154-d789-4c0b-a42e-1b88be71e5bc\",\"type\":\"Treachery\",\"traits\":\"Blunder\",\"weakness\":true}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 547800,
          "SidewaysCard": false,
          "CustomDeck": {
            "5478": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168535524/6A3F8A4CB820BB3F991AE8C14B0F92102EA8E119/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "d99ead",
          "Name": "CardCustom",
          "Transform": {
            "posX": 59.3778,
            "posY": 1.49510384,
            "posZ": 19.4968,
            "rotX": 7.852999E-09,
            "rotY": 269.9993,
            "rotZ": 3.75133E-08,
            "scaleX": 0.7828339,
            "scaleY": 1.0,
            "scaleZ": 0.7828339
          },
          "Nickname": "Archibald Haddock",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"278f0f28-2666-4607-9296-5d3871b42f81\",\"type\":\"Investigator\",\"class\":\"Rogue\",\"traits\":\"Wayfarer\",\"agilityIcons\":3,\"combatIcons\":4,\"intellectIcons\":2,\"willpowerIcons\":3,\"id\":\"Z2955\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Investigator",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 547900,
          "SidewaysCard": false,
          "CustomDeck": {
            "5479": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168536799/A09C8CAE6773D3447ECB17AD4F6B1D3354C5EF3F/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168536997/4A011B39727C16A8299F30B501FAA5F9B052BE80/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e80b7d",
          "Name": "CardCustom",
          "Transform": {
            "posX": 49.5281,
            "posY": 1.49510384,
            "posZ": 19.2891,
            "rotX": -1.85704977E-07,
            "rotY": 269.9987,
            "rotZ": 1.38505825E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Mood Swings",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"06442961-8fe6-4b9b-b84a-a951f8e6467c\",\"type\":\"Treachery\",\"traits\":\"Flaw. Madness\",\"weakness\":true}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 548200,
          "SidewaysCard": false,
          "CustomDeck": {
            "5482": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168540699/DF8E8741FA2DC945C3F954C6B3DA64AC2926D436/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "ee26c1",
          "Name": "CardCustom",
          "Transform": {
            "posX": 53.6677,
            "posY": 1.49510384,
            "posZ": 23.8922,
            "rotX": 1.329855E-07,
            "rotY": 269.999939,
            "rotZ": -1.44583183E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Snowy",
          "Description": "",
          "GMNotes": "{\"TtsZoopGuid\":\"d5f854fb-cf68-4184-8594-9125269bcaef\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Ally. Creature\",\"agilityIcons\":1,\"willpowerIcons\":1,\"wildIcons\":1,\"cost\":3}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 547700,
          "SidewaysCard": false,
          "CustomDeck": {
            "5477": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1870696131168534687/F783E2B77B21485764F5AFA5C36A7859987928F6/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        }
      ],
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    }