{
  "GUID": "bc4aba",
  "Name": "Custom_Model_Bag",
  "Transform": {
    "posX": 45.4602966,
    "posY": 1.48149908,
    "posZ": 14.6941032,
    "rotX": 6.41586553e-08,
    "rotY": 269.0856,
    "rotZ": -2.14492772e-07,
    "scaleX": 2.21,
    "scaleY": 0.46,
    "scaleZ": 2.42
  },
  "Nickname": "Across the Obelisk",
  "Description": "mint tea fan",
  "ColorDiffuse": {
    "r": 1.0,
    "g": 1.0,
    "b": 1.0
  },
  "HideWhenFaceDown": false,
  "CustomMesh": {
    "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/2484383016213830769/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176767100/E87BFD87510A2AABD961538E504A4008F82C8AEC/",
    "MaterialIndex": 3,
    "TypeIndex": 6,
    "CustomShader": {
      "SpecularColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "SpecularIntensity": 0.0,
      "SpecularSharpness": 2.0,
      "FresnelStrength": 0.0
    }
  },
  "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend",
  "LuaScriptState": "{\"ml\":{\"0bab7b\":{\"lock\":false,\"pos\":{\"x\":69.3188018798828,\"y\":1.49510383605957,\"z\":-16.8729000091553},\"rot\":{\"x\":1.27518561043871E-07,\"y\":269.99951171875,\"z\":-1.45289493502787E-06}},\"1a562e\":{\"lock\":false,\"pos\":{\"x\":69.3252029418945,\"y\":1.49510371685028,\"z\":-31.8729000091553},\"rot\":{\"x\":1.21199491331936E-07,\"y\":270.002014160156,\"z\":3.24004622598295E-06}},\"1c522b\":{\"lock\":false,\"pos\":{\"x\":48.3036003112793,\"y\":1.49510383605957,\"z\":18.1180953979492},\"rot\":{\"x\":4.33555911172334E-08,\"y\":270.000091552734,\"z\":-1.1858671769005E-06}},\"32cd3a\":{\"lock\":false,\"pos\":{\"x\":69.3218994140625,\"y\":1.49510383605957,\"z\":-24.3729000091553},\"rot\":{\"x\":-1.27768222668578E-08,\"y\":270.001403808594,\"z\":-1.37477820771892E-06}},\"610efd\":{\"lock\":false,\"pos\":{\"x\":58.8069000244141,\"y\":1.49510359764099,\"z\":10.6225996017456},\"rot\":{\"x\":-2.91288665721368E-06,\"y\":269.999145507813,\"z\":-1.24119696920388E-06}},\"66f3a4\":{\"lock\":false,\"pos\":{\"x\":55.3241004943848,\"y\":1.51687169075012,\"z\":-29.3789005279541},\"rot\":{\"x\":4.09931487865833E-07,\"y\":270.0087890625,\"z\":-6.74564759606255E-08}},\"6bcaba\":{\"lock\":false,\"pos\":{\"x\":69.3038024902344,\"y\":1.49510383605957,\"z\":18.1271953582764},\"rot\":{\"x\":-3.77786797400859E-08,\"y\":270.000091552734,\"z\":-1.40417864713527E-06}},\"73bc75\":{\"lock\":false,\"pos\":{\"x\":48.3069000244141,\"y\":1.49510383605957,\"z\":10.6181001663208},\"rot\":{\"x\":-1.30742678905449E-08,\"y\":269.999206542969,\"z\":-1.22721678508242E-06}},\"b3fd17\":{\"lock\":false,\"pos\":{\"x\":58.8218994140625,\"y\":1.49510383605957,\"z\":-24.3773994445801},\"rot\":{\"x\":-7.48173345499481E-09,\"y\":269.999938964844,\"z\":-1.5125427808016E-06}},\"b75b15\":{\"lock\":false,\"pos\":{\"x\":48.3101005554199,\"y\":1.49510371685028,\"z\":3.11809968948364},\"rot\":{\"x\":-1.91370460811413E-07,\"y\":269.999938964844,\"z\":-1.99153328139801E-06}},\"bf1bde\":{\"lock\":false,\"pos\":{\"x\":48.3003997802734,\"y\":1.49510383605957,\"z\":25.6181964874268},\"rot\":{\"x\":9.07294719354468E-08,\"y\":269.998992919922,\"z\":-1.31662511648756E-06}},\"d9711f\":{\"lock\":false,\"pos\":{\"x\":44.8026,\"y\":1.5169,\"z\":20.6166},\"rot\":{\"x\":0,\"y\":269.9989,\"z\":0}},\"e00001\":{\"lock\":false,\"pos\":{\"x\":65.8058013916016,\"y\":1.49510383605957,\"z\":13.1255941390991},\"rot\":{\"x\":3.02547604746906E-08,\"y\":269.999206542969,\"z\":-5.39785958153516E-07}},\"e00002\":{\"lock\":false,\"pos\":{\"x\":65.8071975708008,\"y\":1.49510383605957,\"z\":10.6254987716675},\"rot\":{\"x\":-3.58278278156376E-08,\"y\":269.997985839844,\"z\":-5.99717679961032E-07}},\"e00003\":{\"lock\":false,\"pos\":{\"x\":69.3069000244141,\"y\":1.49510383605957,\"z\":10.6270999908447},\"rot\":{\"x\":2.01892504492207E-07,\"y\":269.999908447266,\"z\":-7.69001644584932E-07}},\"e00004\":{\"lock\":false,\"pos\":{\"x\":69.3058013916016,\"y\":1.49510371685028,\"z\":13.1270990371704},\"rot\":{\"x\":-4.25595878539298E-08,\"y\":270.004699707031,\"z\":3.66477109992047E-07}},\"e00005\":{\"lock\":false,\"pos\":{\"x\":69.3155975341797,\"y\":1.49510371685028,\"z\":-9.37290000915527},\"rot\":{\"x\":8.53484323215525E-08,\"y\":269.998809814453,\"z\":-1.35494781261514E-06}},\"e00006\":{\"lock\":false,\"pos\":{\"x\":69.3089981079102,\"y\":1.49510383605957,\"z\":5.62709951400757},\"rot\":{\"x\":3.99392064309723E-07,\"y\":270.008392333984,\"z\":3.75063848423451E-07}},\"e00007\":{\"lock\":false,\"pos\":{\"x\":65.8109970092773,\"y\":1.49510383605957,\"z\":3.12559962272644},\"rot\":{\"x\":-2.73786984195112E-08,\"y\":269.999694824219,\"z\":-6.52562903269427E-07}},\"e00008\":{\"lock\":false,\"pos\":{\"x\":65.8090972900391,\"y\":1.49510383605957,\"z\":5.62559986114502},\"rot\":{\"x\":-1.63730476288038E-07,\"y\":269.999786376953,\"z\":-6.74273508138867E-07}},\"e00009\":{\"lock\":false,\"pos\":{\"x\":69.3102035522461,\"y\":1.49510383605957,\"z\":3.12719941139221},\"rot\":{\"x\":4.76927475290267E-08,\"y\":270,\"z\":-9.50195953919319E-07}},\"e0000a\":{\"lock\":false,\"pos\":{\"x\":69.3004989624023,\"y\":1.49510383605957,\"z\":25.6271953582764},\"rot\":{\"x\":6.11231385505562E-08,\"y\":269.999389648438,\"z\":-1.69931900018128E-06}},\"e0000b\":{\"lock\":false,\"pos\":{\"x\":65.8007965087891,\"y\":1.49510383605957,\"z\":25.6254959106445},\"rot\":{\"x\":5.64334996511207E-08,\"y\":269.997772216797,\"z\":-5.99359623265627E-07}},\"e0000c\":{\"lock\":false,\"pos\":{\"x\":65.8002014160156,\"y\":1.49510371685028,\"z\":28.1255989074707},\"rot\":{\"x\":2.33724470888319E-08,\"y\":269.997985839844,\"z\":1.90938499144977E-06}},\"e0000d\":{\"lock\":false,\"pos\":{\"x\":58.8101005554199,\"y\":1.49510371685028,\"z\":3.12259984016418},\"rot\":{\"x\":-4.21401665562371E-07,\"y\":270.001007080078,\"z\":-1.8359655769018E-06}},\"e0000e\":{\"lock\":false,\"pos\":{\"x\":69.2994003295898,\"y\":1.49510383605957,\"z\":28.1270980834961},\"rot\":{\"x\":7.39799546067843E-08,\"y\":269.999206542969,\"z\":2.76286613143384E-07}},\"e0000f\":{\"lock\":false,\"pos\":{\"x\":58.8154983520508,\"y\":1.49510383605957,\"z\":-9.37740039825439},\"rot\":{\"x\":2.07963367415687E-07,\"y\":270.000579833984,\"z\":-9.63174329626781E-07}},\"e00010\":{\"lock\":false,\"pos\":{\"x\":69.3025970458984,\"y\":1.49510383605957,\"z\":20.6270942687988},\"rot\":{\"x\":3.43012409587118E-08,\"y\":269.982788085938,\"z\":-1.2652269560931E-06}},\"e00011\":{\"lock\":false,\"pos\":{\"x\":65.8039016723633,\"y\":1.49510383605957,\"z\":18.1254959106445},\"rot\":{\"x\":6.14958253208897E-08,\"y\":269.999786376953,\"z\":-5.98550855102076E-07}},\"e00012\":{\"lock\":false,\"pos\":{\"x\":65.8183975219727,\"y\":1.49510383605957,\"z\":20.6400966644287},\"rot\":{\"x\":5.25540357898535E-08,\"y\":269.999389648438,\"z\":-4.92028391363419E-07}},\"e00013\":{\"lock\":false,\"pos\":{\"x\":58.8003997802734,\"y\":1.49510383605957,\"z\":25.6226959228516},\"rot\":{\"x\":2.34622604011747E-07,\"y\":270.001892089844,\"z\":-1.40019994887552E-06}},\"e00014\":{\"lock\":false,\"pos\":{\"x\":58.8251991271973,\"y\":1.49510383605957,\"z\":-31.8775005340576},\"rot\":{\"x\":9.47921350302749E-08,\"y\":270.00048828125,\"z\":3.24279699270846E-06}},\"e00015\":{\"lock\":false,\"pos\":{\"x\":58.8036994934082,\"y\":1.49510371685028,\"z\":18.1226978302002},\"rot\":{\"x\":6.37524664170996E-08,\"y\":269.999786376953,\"z\":-1.24334223983169E-06}},\"e00016\":{\"lock\":false,\"pos\":{\"x\":65.8143997192383,\"y\":1.49510383605957,\"z\":-6.87440013885498},\"rot\":{\"x\":-1.44913300914595E-07,\"y\":270.000366210938,\"z\":1.82872224741004E-06}},\"e00017\":{\"lock\":false,\"pos\":{\"x\":65.8156967163086,\"y\":1.49510383605957,\"z\":-9.3744010925293},\"rot\":{\"x\":2.3022737494216E-08,\"y\":270.000701904297,\"z\":-4.90214688397828E-07}},\"e00019\":{\"lock\":false,\"pos\":{\"x\":69.3143997192383,\"y\":1.49510359764099,\"z\":-6.87290000915527},\"rot\":{\"x\":-3.2931941973402E-07,\"y\":270.000213623047,\"z\":2.76236988838718E-07}},\"e0001b\":{\"lock\":false,\"pos\":{\"x\":69.3175964355469,\"y\":1.49510383605957,\"z\":-14.3729000091553},\"rot\":{\"x\":-1.24901447406955E-07,\"y\":270.000854492188,\"z\":3.58560072299952E-07}},\"e0001c\":{\"lock\":false,\"pos\":{\"x\":65.8187026977539,\"y\":1.49510383605957,\"z\":-16.8743991851807},\"rot\":{\"x\":-1.87372850568579E-09,\"y\":270.00048828125,\"z\":-5.16916372816922E-07}},\"e0001d\":{\"lock\":false,\"pos\":{\"x\":65.818000793457,\"y\":1.49510371685028,\"z\":-14.3745002746582},\"rot\":{\"x\":3.53323130752869E-08,\"y\":270.000061035156,\"z\":-3.14401802370412E-07}},\"e00020\":{\"lock\":false,\"pos\":{\"x\":69.3240966796875,\"y\":1.49510383605957,\"z\":-29.3729000091553},\"rot\":{\"x\":-2.7196795926443E-08,\"y\":270.000213623047,\"z\":-1.23546215036185E-06}},\"e00021\":{\"lock\":false,\"pos\":{\"x\":65.9243011474609,\"y\":1.49510383605957,\"z\":-31.8791007995605},\"rot\":{\"x\":5.75802516777912E-09,\"y\":270.002502441406,\"z\":-5.29665612702956E-07}},\"e00022\":{\"lock\":false,\"pos\":{\"x\":65.8243026733398,\"y\":1.49510383605957,\"z\":-29.3745002746582},\"rot\":{\"x\":2.31112338155981E-08,\"y\":270.004089355469,\"z\":-5.82266125093156E-07}},\"e00025\":{\"lock\":false,\"pos\":{\"x\":69.32080078125,\"y\":1.49510383605957,\"z\":-21.8729000091553},\"rot\":{\"x\":-1.03740951828968E-07,\"y\":269.999694824219,\"z\":-5.02396403589955E-07}},\"e00026\":{\"lock\":false,\"pos\":{\"x\":65.8208999633789,\"y\":1.49510383605957,\"z\":-21.8743991851807},\"rot\":{\"x\":-2.83814642898506E-08,\"y\":270.000793457031,\"z\":-5.36929974259692E-07}},\"e00027\":{\"lock\":false,\"pos\":{\"x\":65.8228988647461,\"y\":1.49510383605957,\"z\":-24.3743991851807},\"rot\":{\"x\":1.7401323049171E-08,\"y\":270.00048828125,\"z\":-5.66653454825428E-07}},\"e0002b\":{\"lock\":false,\"pos\":{\"x\":48.3143997192383,\"y\":1.49510383605957,\"z\":-6.88190031051636},\"rot\":{\"x\":-3.34473924112899E-07,\"y\":270,\"z\":-5.0924415972986E-07}},\"e0002c\":{\"lock\":false,\"pos\":{\"x\":44.8154983520508,\"y\":1.49510383605957,\"z\":-9.38339996337891},\"rot\":{\"x\":1.50664732245787E-07,\"y\":270,\"z\":-3.62658312269559E-07}},\"e00030\":{\"lock\":false,\"pos\":{\"x\":44.8003997802734,\"y\":1.49510383605957,\"z\":25.6164970397949},\"rot\":{\"x\":-2.00523029292299E-08,\"y\":270.003295898438,\"z\":-5.10379265961092E-07}},\"e00031\":{\"lock\":false,\"pos\":{\"x\":44.7994003295898,\"y\":1.49510383605957,\"z\":28.1165962219238},\"rot\":{\"x\":-5.33176489625475E-08,\"y\":270.002685546875,\"z\":-5.32799788288685E-07}},\"e00033\":{\"lock\":false,\"pos\":{\"x\":48.2993011474609,\"y\":1.49510383605957,\"z\":28.1177940368652},\"rot\":{\"x\":-1.45285961039576E-08,\"y\":270.003295898438,\"z\":3.15704028253094E-07}},\"e00035\":{\"lock\":false,\"pos\":{\"x\":48.3058013916016,\"y\":1.49510383605957,\"z\":13.1180934906006},\"rot\":{\"x\":-3.18997422255052E-07,\"y\":269.996368408203,\"z\":-3.88811571383485E-07}},\"e00036\":{\"lock\":false,\"pos\":{\"x\":44.8069000244141,\"y\":1.49510383605957,\"z\":10.6165990829468},\"rot\":{\"x\":-1.96420124609631E-08,\"y\":269.999908447266,\"z\":-5.38674726158206E-07}},\"e00037\":{\"lock\":false,\"pos\":{\"x\":44.8058013916016,\"y\":1.49510383605957,\"z\":13.1165952682495},\"rot\":{\"x\":3.6021475580128E-07,\"y\":270.000366210938,\"z\":-4.5370720158644E-07}},\"e0003a\":{\"lock\":false,\"pos\":{\"x\":48.3089981079102,\"y\":1.49510383605957,\"z\":5.61819982528687},\"rot\":{\"x\":-6.33657236903673E-07,\"y\":269.996887207031,\"z\":2.85382355968977E-07}},\"e0003b\":{\"lock\":false,\"pos\":{\"x\":44.8101005554199,\"y\":1.49510383605957,\"z\":3.11659955978394},\"rot\":{\"x\":-3.78414775070723E-08,\"y\":269.998413085938,\"z\":-5.02005832458963E-07}},\"e0003c\":{\"lock\":false,\"pos\":{\"x\":44.8089981079102,\"y\":1.49510383605957,\"z\":5.61659955978394},\"rot\":{\"x\":-5.09722781316668E-07,\"y\":269.998504638672,\"z\":-8.17718159851211E-07}},\"e0003f\":{\"lock\":false,\"pos\":{\"x\":48.3026008605957,\"y\":1.49510383605957,\"z\":20.6180934906006},\"rot\":{\"x\":5.3246136388907E-08,\"y\":269.996887207031,\"z\":3.04384258242862E-07}},\"e00041\":{\"lock\":false,\"pos\":{\"x\":44.8036994934082,\"y\":1.49510383605957,\"z\":18.1165962219238},\"rot\":{\"x\":7.25483744190569E-08,\"y\":269.99951171875,\"z\":-6.37812320292142E-07}},\"e00045\":{\"lock\":false,\"pos\":{\"x\":55.3058013916016,\"y\":1.49510383605957,\"z\":13.1210956573486},\"rot\":{\"x\":8.08268154628422E-08,\"y\":270,\"z\":-4.97307496516441E-07}},\"e00046\":{\"lock\":false,\"pos\":{\"x\":55.3069000244141,\"y\":1.49510383605957,\"z\":10.6211004257202},\"rot\":{\"x\":3.68001053629996E-07,\"y\":269.999755859375,\"z\":-4.95279550705163E-07}},\"e00048\":{\"lock\":false,\"pos\":{\"x\":58.8058013916016,\"y\":1.49510383605957,\"z\":13.1225938796997},\"rot\":{\"x\":-2.6636706706995E-07,\"y\":269.999969482422,\"z\":-4.40259498191153E-07}},\"e0004a\":{\"lock\":false,\"pos\":{\"x\":58.8089981079102,\"y\":1.49510383605957,\"z\":5.62260007858276},\"rot\":{\"x\":-3.87210945973493E-07,\"y\":270,\"z\":-4.31388201604932E-07}},\"e0004b\":{\"lock\":false,\"pos\":{\"x\":55.3101005554199,\"y\":1.49510383605957,\"z\":3.1210994720459},\"rot\":{\"x\":1.48285606016429E-08,\"y\":270,\"z\":-6.11470511557854E-07}},\"e0004c\":{\"lock\":false,\"pos\":{\"x\":55.3089981079102,\"y\":1.49510383605957,\"z\":5.6210994720459},\"rot\":{\"x\":-1.11046647433E-08,\"y\":270,\"z\":-5.20411902016349E-07}},\"e0004f\":{\"lock\":false,\"pos\":{\"x\":58.7994003295898,\"y\":1.49510383605957,\"z\":28.122594833374},\"rot\":{\"x\":-6.06185723839303E-09,\"y\":270.000061035156,\"z\":-5.0556371888888E-07}},\"e00050\":{\"lock\":false,\"pos\":{\"x\":55.2994003295898,\"y\":1.49510383605957,\"z\":28.1210956573486},\"rot\":{\"x\":4.63581883991537E-08,\"y\":269.999938964844,\"z\":-5.99081829477655E-07}},\"e00051\":{\"lock\":false,\"pos\":{\"x\":55.3004989624023,\"y\":1.49510383605957,\"z\":25.6210956573486},\"rot\":{\"x\":4.27658655155483E-08,\"y\":269.999938964844,\"z\":-6.68802499603771E-07}},\"e00054\":{\"lock\":false,\"pos\":{\"x\":58.8026008605957,\"y\":1.49510383605957,\"z\":20.622594833374},\"rot\":{\"x\":1.70374434560472E-08,\"y\":269.999694824219,\"z\":-1.21008122277999E-06}},\"e00055\":{\"lock\":false,\"pos\":{\"x\":55.3026008605957,\"y\":1.49510383605957,\"z\":20.6210956573486},\"rot\":{\"x\":6.61359962350616E-08,\"y\":269.999938964844,\"z\":-6.34010461908474E-07}},\"e00056\":{\"lock\":false,\"pos\":{\"x\":55.3036994934082,\"y\":1.49510383605957,\"z\":18.1210956573486},\"rot\":{\"x\":-4.0466577644338E-08,\"y\":269.999786376953,\"z\":-4.94876417178602E-07}},\"e0005a\":{\"lock\":false,\"pos\":{\"x\":55.3186988830566,\"y\":1.49510383605957,\"z\":-16.8789005279541},\"rot\":{\"x\":-3.0121086069812E-07,\"y\":269.999908447266,\"z\":-5.27162171692908E-07}},\"e0005b\":{\"lock\":false,\"pos\":{\"x\":55.3176002502441,\"y\":1.49510383605957,\"z\":-14.3789005279541},\"rot\":{\"x\":-3.48233832880851E-08,\"y\":269.999908447266,\"z\":-5.35665094503202E-07}},\"e0005d\":{\"lock\":false,\"pos\":{\"x\":58.8176002502441,\"y\":1.49510383605957,\"z\":-14.3774013519287},\"rot\":{\"x\":-8.36477020982329E-09,\"y\":270,\"z\":2.84961231500347E-07}},\"e0005f\":{\"lock\":false,\"pos\":{\"x\":58.8208999633789,\"y\":1.49510383605957,\"z\":-21.8775005340576},\"rot\":{\"x\":-1.43492172810511E-07,\"y\":270.000854492188,\"z\":-1.13378644073237E-06}},\"e00060\":{\"lock\":false,\"pos\":{\"x\":55.3218994140625,\"y\":1.49510383605957,\"z\":-24.3789005279541},\"rot\":{\"x\":1.26828307855931E-08,\"y\":270.00048828125,\"z\":-5.61194269721454E-07}},\"e00061\":{\"lock\":false,\"pos\":{\"x\":55.3208999633789,\"y\":1.49510383605957,\"z\":-21.8789005279541},\"rot\":{\"x\":-1.0391559612799E-08,\"y\":270,\"z\":-5.04303386605898E-07}},\"e00064\":{\"lock\":false,\"pos\":{\"x\":58.8143997192383,\"y\":1.49510383605957,\"z\":-6.87740087509155},\"rot\":{\"x\":-3.52334232900375E-08,\"y\":269.999938964844,\"z\":-1.3196616919231E-06}},\"e00065\":{\"lock\":false,\"pos\":{\"x\":55.3143997192383,\"y\":1.49510383605957,\"z\":-6.8789005279541},\"rot\":{\"x\":1.5600264191562E-08,\"y\":269.999786376953,\"z\":-5.27303427588777E-07}},\"e00066\":{\"lock\":false,\"pos\":{\"x\":55.3154983520508,\"y\":1.49510383605957,\"z\":-9.3789005279541},\"rot\":{\"x\":-1.57351536245187E-07,\"y\":269.999786376953,\"z\":-6.48736261155136E-07}},\"e00069\":{\"lock\":false,\"pos\":{\"x\":58.8238983154297,\"y\":1.49510383605957,\"z\":-29.377799987793},\"rot\":{\"x\":5.20878167264982E-08,\"y\":270.005401611328,\"z\":-1.29771171941684E-06}},\"e0006a\":{\"lock\":false,\"pos\":{\"x\":55.3251991271973,\"y\":1.49510383605957,\"z\":-31.8789005279541},\"rot\":{\"x\":1.85299118271587E-08,\"y\":270.014404296875,\"z\":-5.44935915058886E-07}},\"e7d3ca\":{\"lock\":false,\"pos\":{\"x\":44.8406,\"y\":1.5265,\"z\":-6.8528},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"eb8a5f\":{\"lock\":false,\"pos\":{\"x\":48.3154983520508,\"y\":1.49510383605957,\"z\":-9.3818998336792},\"rot\":{\"x\":-3.89823036073267E-08,\"y\":270,\"z\":-1.24216910535324E-06}},\"fc3310\":{\"lock\":false,\"pos\":{\"x\":58.8186988830566,\"y\":1.49510383605957,\"z\":-16.8773994445801},\"rot\":{\"x\":-3.30946647864039E-08,\"y\":270.000061035156,\"z\":-1.27611951938889E-06}}}}",
  "ContainedObjects": [
    {
      "GUID": "d9711f",
      "Name": "Deck",
      "Transform": {
        "posX": 44.8026,
        "posY": 1.51687169,
        "posZ": 20.6165924,
        "rotX": 2.989322e-08,
        "rotY": 269.998932,
        "rotZ": -7.33949e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Tags": [
        "PlayerCard"
      ],
      "Hands": false,
      "DeckIDs": [
        103700,
        103700,
        6612500
      ],
      "CustomDeck": {
        "1037": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459567033/BD2C5F75CA3953153F465B0CEE5096DDB4B649B0/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "66125": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459568138/9A36C60A98ED148A406EBAA8A0A26E29A84136FA/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "ContainedObjects": [
        {
          "GUID": "e00040",
          "Name": "Card",
          "Transform": {
            "posX": 44.802597,
            "posY": 1.85632122,
            "posZ": 20.6165676,
            "rotX": 0.00157840492,
            "rotY": 269.998871,
            "rotZ": 359.984558,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Black Talons",
          "GMNotes": "{\"id\":\"ATO29\",\"type\":\"Skill\",\"class\":\"Rogue\",\"traits\":\"Practiced. Expert.\",\"level\":0,\"wildIcons\":3,\"TtsZoopGuid\":\"ATO29\"}",
          "Tags": [
            "PlayerCard"
          ],
          "CardID": 103700,
          "CustomDeck": {
            "1037": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459721816/754196B99F0A569B8335E41E66E4FC1467AEDC69/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "bd01eb",
          "Name": "Card",
          "Transform": {
            "posX": 44.802597,
            "posY": 1.8915242,
            "posZ": 20.61657,
            "rotX": 359.9437,
            "rotY": 269.99884,
            "rotZ": 359.9643,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Black Talons",
          "GMNotes": "{\"id\":\"ATO29\",\"type\":\"Skill\",\"class\":\"Rogue\",\"traits\":\"Practiced. Expert.\",\"level\":0,\"wildIcons\":3,\"TtsZoopGuid\":\"ATO29\"}",
          "Tags": [
            "PlayerCard"
          ],
          "CardID": 103700,
          "CustomDeck": {
            "1037": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459721816/754196B99F0A569B8335E41E66E4FC1467AEDC69/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "847489",
          "Name": "Card",
          "Transform": {
            "posX": 44.61409,
            "posY": 1.57071209,
            "posZ": 20.57586,
            "rotX": 0.00101993466,
            "rotY": 270.0,
            "rotZ": -0.000303446577,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Subterfuge",
          "GMNotes": "{\"id\":\"ATO91\",\"type\":\"Asset\",\"class\":\"Rogue\",\"traits\":\"Talent. Trick.\",\"permanent\":true,\"uses\":[{\"count\":0,\"token\":\"resource\",\"type\":\"Secret\"}],\"TtsZoopGuid\":\"ATO91\"}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 6612500,
          "CustomDeck": {
            "66125": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459568138/9A36C60A98ED148A406EBAA8A0A26E29A84136FA/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        }
      ]
    },
    {
      "GUID": "0bab7b",
      "Name": "Card",
      "Transform": {
        "posX": 69.3188,
        "posY": 1.49510384,
        "posZ": -16.8729,
        "rotX": 1.4204187e-07,
        "rotY": 269.9995,
        "rotZ": -3.73884546e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Malukah",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO79\",\"id\":\"ATO40-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611700,
      "CustomDeck": {
        "66117": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580149/5571033FBB25F8F7A2E52EB3B206E515172D7EF7/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580214/E9C7BFE159A9767649C5893C0BD73321534A90B7/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "1a562e",
      "Name": "Card",
      "Transform": {
        "posX": 69.3252,
        "posY": 1.49510384,
        "posZ": -31.8729,
        "rotX": -9.676489e-08,
        "rotY": 270.002,
        "rotZ": 7.60321257e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Navalea",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO81\",\"id\":\"ATO46-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610300,
      "CustomDeck": {
        "66103": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580255/22B13E9F2743413CCDD1FF5B5ED3D582C142F532/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580297/F3C7C3C21E9C1F80EB515C3E1E82EE6D3A30AD8D/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "1c522b",
      "Name": "Card",
      "Transform": {
        "posX": 48.3036,
        "posY": 1.49510384,
        "posZ": 18.1180954,
        "rotX": -1.64220722e-07,
        "rotY": 270.000061,
        "rotZ": -1.5240056e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Thuls",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO75\",\"id\":\"ATO28-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610800,
      "CustomDeck": {
        "66108": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580404/F3086EA8F276CA62BCDE45A568A811141E23FB71/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580449/82F3B02FF997D151B631E050DBFCD00F93C773C6/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "32cd3a",
      "Name": "Card",
      "Transform": {
        "posX": 69.3219,
        "posY": 1.49510384,
        "posZ": -24.3729,
        "rotX": -1.6638009e-07,
        "rotY": 270.0014,
        "rotZ": 2.11394465e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Nezglekt",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO80\",\"id\":\"ATO43-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611800,
      "CustomDeck": {
        "66118": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580476/2A60F749889A54833D45CDC5E5FEECF3CD874879/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580508/321685D8E03559388A86A7FA4A5C94F4C9128C47/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "610efd",
      "Name": "Card",
      "Transform": {
        "posX": 58.8069,
        "posY": 1.49510384,
        "posZ": 10.6226,
        "rotX": -3.713048e-07,
        "rotY": 269.999146,
        "rotZ": -2.68726637e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Amelia",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO72\",\"id\":\"ATO19-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6612000,
      "CustomDeck": {
        "66120": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580535/2CBD569D2FBFC7307D549DD178ABEB8D77A61694/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580580/7FDA69FDE54152871A3AED5C3E2DEA037455F828/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "66f3a4",
      "Name": "Deck",
      "Transform": {
        "posX": 55.3241,
        "posY": 1.51687169,
        "posZ": -29.3789,
        "rotX": 1.3222369e-07,
        "rotY": 270.0088,
        "rotZ": -6.411544e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Tags": [
        "PlayerCard"
      ],
      "Hands": false,
      "DeckIDs": [
        106300,
        106200,
        106400
      ],
      "CustomDeck": {
        "1063": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580604/0D694965A634812052A5639DF3ADAED623F3BF58/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "1062": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580627/08282C58EC0815C7154863C505D2A2C4AA686F40/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "1064": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580660/C68D73A7408F644A3502AA3E2A3F80CC83C9D41C/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "ContainedObjects": [
        {
          "GUID": "e0006c",
          "Name": "Card",
          "Transform": {
            "posX": 55.32732,
            "posY": 1.86281693,
            "posZ": -36.8789177,
            "rotX": 0.00218021357,
            "rotY": 270.008759,
            "rotZ": 359.9791,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Premium Meat",
          "GMNotes": "{\"id\":\"ATO61\",\"type\":\"Skill\",\"class\":\"Survivor\",\"traits\":\"Supply.\",\"wildIcons\":3,\"TtsZoopGuid\":\"ATO61\"}",
          "Tags": [
            "PlayerCard"
          ],
          "CardID": 106300,
          "CustomDeck": {
            "1063": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580604/0D694965A634812052A5639DF3ADAED623F3BF58/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "e0006b",
          "Name": "Card",
          "Transform": {
            "posX": 55.3273,
            "posY": 1.89227164,
            "posZ": -36.8789,
            "rotX": 0.0232596751,
            "rotY": 270.013428,
            "rotZ": 0.0001504251,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Meat",
          "GMNotes": "{\"id\":\"ATO60\",\"type\":\"Skill\",\"class\":\"Survivor\",\"traits\":\"Supply.\",\"wildIcons\":2,\"TtsZoopGuid\":\"ATO60\"}",
          "Tags": [
            "PlayerCard"
          ],
          "CardID": 106200,
          "CustomDeck": {
            "1062": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580627/08282C58EC0815C7154863C505D2A2C4AA686F40/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "e0006d",
          "Name": "Card",
          "Transform": {
            "posX": 55.32732,
            "posY": 1.95764089,
            "posZ": -36.8789139,
            "rotX": 3.948703e-06,
            "rotY": 270.005157,
            "rotZ": 0.7748512,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Spoiled Meat",
          "GMNotes": "{\"id\":\"ATO59\",\"type\":\"Skill\",\"class\":\"Survivor\",\"traits\":\"Supply.\",\"wildIcons\":1,\"TtsZoopGuid\":\"ATO59\"}",
          "Tags": [
            "PlayerCard"
          ],
          "CardID": 106400,
          "CustomDeck": {
            "1064": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580660/C68D73A7408F644A3502AA3E2A3F80CC83C9D41C/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        }
      ]
    },
    {
      "GUID": "6bcaba",
      "Name": "Card",
      "Transform": {
        "posX": 69.3038,
        "posY": 1.49510384,
        "posZ": 18.1271954,
        "rotX": -1.9113287e-07,
        "rotY": 270.000061,
        "rotZ": 1.33128879e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Reginald",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO67\",\"id\":\"ATO04-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610000,
      "CustomDeck": {
        "66100": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580718/798FCAFEFF53919D184E95033B168C01302C06EE/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580759/660BD4458CA181FF3A380CFE51B1674154F2A598/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "73bc75",
      "Name": "Card",
      "Transform": {
        "posX": 48.3069,
        "posY": 1.49510384,
        "posZ": 10.6181,
        "rotX": 6.005152e-08,
        "rotY": 269.9992,
        "rotZ": -5.634854e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Gustav",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO76\",\"id\":\"ATO31-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610200,
      "CustomDeck": {
        "66102": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580794/FB7CD219139383AFB0F8ABB11C7CB327447C0DED/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580807/E7103A467706091D02AF3B5ACF6D6F50DED97903/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "b3fd17",
      "Name": "Card",
      "Transform": {
        "posX": 58.8219,
        "posY": 1.49510384,
        "posZ": -24.3774,
        "rotX": 8.292139e-08,
        "rotY": 269.999939,
        "rotZ": -5.36369555e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Grukli",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO84\",\"id\":\"ATO55-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611000,
      "CustomDeck": {
        "66110": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580848/A9B61C012DCE29C58BAED06110B0C61259D4FFC5/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580861/6B8AC1F9EA5D9AA5F7882790A712773D6356A862/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "b75b15",
      "Name": "Card",
      "Transform": {
        "posX": 48.3101,
        "posY": 1.49510384,
        "posZ": 3.11809969,
        "rotX": 2.56234145e-08,
        "rotY": 269.999939,
        "rotZ": -7.361836e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Sylvie",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO77\",\"id\":\"ATO34-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610100,
      "CustomDeck": {
        "66101": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580890/1388C5C1D0582510C8118383A98A690DE3AA39A9/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580908/971EBD7F0AFA29CF13CFC713F2A27D935D6A0A6B/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "bf1bde",
      "Name": "Card",
      "Transform": {
        "posX": 48.3004,
        "posY": 1.49510384,
        "posZ": 25.6181965,
        "rotX": -6.370683e-08,
        "rotY": 269.999,
        "rotZ": -3.31641644e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Andrin",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO74\",\"id\":\"ATO25-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611500,
      "CustomDeck": {
        "66115": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580928/CA59AA2B7ABCFFAA0E34456CDC8CE379908E3C3F/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176580958/ECEE33FDAE9CAE79F20A7BEB4908E74E7A4EEFCC/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00001",
      "Name": "Card",
      "Transform": {
        "posX": 65.8058,
        "posY": 1.49510384,
        "posZ": 13.1255941,
        "rotX": -1.44902605e-08,
        "rotY": 269.9992,
        "rotZ": -7.79814542e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Unforgiving Nature",
      "GMNotes": "{\"id\":\"ATO08\",\"type\":\"Asset\",\"class\":\"Guardian\",\"traits\":\"Ritual.\",\"cost\":2,\"intellectIcons\":1,\"willpowerIcons\":1,\"wildIcons\":1,\"TtsZoopGuid\":\"ATO08\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 100000,
      "CustomDeck": {
        "1000": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226180935825/ECBC21C07E8C10737E2449158AC5C8DA3D36416F/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00002",
      "Name": "Card",
      "Transform": {
        "posX": 65.8072,
        "posY": 1.49510384,
        "posZ": 10.6254988,
        "rotX": -2.08357633e-07,
        "rotY": 269.998,
        "rotZ": 5.49067423e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Ylmer's Seed",
      "GMNotes": "{\"id\":\"ATO09\",\"type\":\"Asset\",\"traits\":\"Item. Task.\",\"cost\":2,\"weakness\":true,\"TtsZoopGuid\":\"ATO09\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 100100,
      "CustomDeck": {
        "1001": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581316/3C5CCF1A3DC3658F89D13B3C98A6921B18BFD2D4/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00003",
      "Name": "Card",
      "Transform": {
        "posX": 69.3069,
        "posY": 1.49510384,
        "posZ": 10.6271,
        "rotX": -2.009902e-07,
        "rotY": 269.999939,
        "rotZ": 3.733538e-08,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Bree",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO68\",\"id\":\"ATO07-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610600,
      "CustomDeck": {
        "66106": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581415/9FE7BB0308FD9CBCE5F07F364EE5C9FE25FE437F/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581488/C3FF202DB0C7BB951157751E8963253AD1388019/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00004",
      "Name": "Card",
      "Transform": {
        "posX": 69.3058,
        "posY": 1.49510384,
        "posZ": 13.127099,
        "rotX": 5.09719627e-08,
        "rotY": 270.0047,
        "rotZ": -1.05448358e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Bree",
      "Description": "The Warden",
      "GMNotes": "{\"id\":\"ATO07\",\"type\":\"Investigator\",\"class\":\"Guardian\",\"traits\":\"Warden.\",\"agilityIcons\":3,\"combatIcons\":4,\"intellectIcons\":2,\"willpowerIcons\":3,\"TtsZoopGuid\":\"ATO07\",\"signatures\":[{\"ATO08\":1,\"ATO09\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 100200,
      "CustomDeck": {
        "1002": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581573/6BCE803D0B70E574E90CBBD6A42DFD1B4AF300E0/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581697/D8AB568F163613F7E08DB5E3B03D389D9694B3E4/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00005",
      "Name": "Card",
      "Transform": {
        "posX": 69.3156,
        "posY": 1.49510384,
        "posZ": -9.3729,
        "rotX": 2.77248432e-07,
        "rotY": 269.9988,
        "rotZ": -8.12786652e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Evelyn",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO78\",\"id\":\"ATO37-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611400,
      "CustomDeck": {
        "66114": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581783/03137ADE46313DEE0CA1F9C8CF479DCF7CFCE255/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581842/280C3CDB6624C991343EDF6FC59DA6E2FCBE753B/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00006",
      "Name": "Card",
      "Transform": {
        "posX": 69.309,
        "posY": 1.49510384,
        "posZ": 5.62709951,
        "rotX": 1.760942e-07,
        "rotY": 270.0084,
        "rotZ": 4.37994e-08,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Laia",
      "Description": "The Paladin",
      "GMNotes": "{\"id\":\"ATO10\",\"type\":\"Investigator\",\"class\":\"Guardian\",\"traits\":\"Chosen. Blessed.\",\"agilityIcons\":3,\"combatIcons\":4,\"intellectIcons\":1,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO10\",\"extraToken\":\"FreeTrigger\",\"signatures\":[{\"ATO11\":1,\"ATO12\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 100300,
      "CustomDeck": {
        "1003": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581904/5B29DCEA5570CAFA7779D60A028B064BD9C7EF38/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176581995/02B33C28777109B0131011EC11C59A0AD9E1289B/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00007",
      "Name": "Card",
      "Transform": {
        "posX": 65.811,
        "posY": 1.49510384,
        "posZ": 3.12559938,
        "rotX": -1.57054089e-07,
        "rotY": 269.9997,
        "rotZ": -1.97556986e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Basthet's Trial",
      "GMNotes": "{\"id\":\"ATO12\",\"type\":\"Treachery\",\"traits\":\"Task.\",\"weakness\":true,\"permanent\":true,\"TtsZoopGuid\":\"ATO12\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 100400,
      "CustomDeck": {
        "1004": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582065/E834626BF43A0FDEE3DED56644D6F269B727DBFF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00008",
      "Name": "Card",
      "Transform": {
        "posX": 65.8091,
        "posY": 1.49510384,
        "posZ": 5.6256,
        "rotX": -1.15301546e-07,
        "rotY": 269.9998,
        "rotZ": -2.26767241e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Consecration",
      "GMNotes": "{\"id\":\"ATO11\",\"type\":\"Event\",\"class\":\"Guardian\",\"traits\":\"Ritual. Blessed. Upgrade.\",\"cost\":2,\"combatIcons\":1,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO11\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 100500,
      "CustomDeck": {
        "1005": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582111/828202C0AD609321F749EB79490BABF533830AD4/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00009",
      "Name": "Card",
      "Transform": {
        "posX": 69.3102,
        "posY": 1.49510384,
        "posZ": 3.12719941,
        "rotX": -3.30938917e-07,
        "rotY": 270.0,
        "rotZ": 3.463624e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Laia",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO69\",\"id\":\"ATO10-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611100,
      "CustomDeck": {
        "66111": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582173/F7F36DDD575437AA928C93D5EAD76F1A7DE66184/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582247/6387B8D7137C6FFD3318AEA7DEBA7EE9DC6557C9/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0000a",
      "Name": "Card",
      "Transform": {
        "posX": 69.3005,
        "posY": 1.49510384,
        "posZ": 25.6271954,
        "rotX": -6.754536e-08,
        "rotY": 269.9994,
        "rotZ": 1.64081328e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Magnus",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO66\",\"id\":\"ATO01-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611300,
      "CustomDeck": {
        "66113": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582266/0314C7B9F362CD4A7B6A46522B981F91C13A5250/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582307/D09EAA4041F6BD7A2663B840ABEB8FC017ABFBE6/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0000b",
      "Name": "Card",
      "Transform": {
        "posX": 65.8008,
        "posY": 1.49510384,
        "posZ": 25.6254959,
        "rotX": 1.51936248e-07,
        "rotY": 269.997742,
        "rotZ": -2.88850373e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Open Wound",
      "GMNotes": "{\"id\":\"ATO03\",\"type\":\"Treachery\",\"traits\":\"Injury.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO03\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 100600,
      "CustomDeck": {
        "1006": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582333/31CA4AD339B2FD7A0AA1ACFAE7E72B1BED7C8F2D/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0000c",
      "Name": "Card",
      "Transform": {
        "posX": 65.8002,
        "posY": 1.49510384,
        "posZ": 28.1255989,
        "rotX": -4.18909458e-08,
        "rotY": 269.998,
        "rotZ": 2.199235e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Wolf Guard",
      "GMNotes": "{\"id\":\"ATO02\",\"type\":\"Asset\",\"class\":\"Guardian\",\"traits\":\"Item. Armor.\",\"cost\":2,\"agilityIcons\":1,\"combatIcons\":1,\"TtsZoopGuid\":\"ATO02\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 100700,
      "CustomDeck": {
        "1007": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582405/7C3BD85A1A2B9329B3ABAA2A55D4A96114DB667E/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0000d",
      "Name": "Card",
      "Transform": {
        "posX": 58.8101,
        "posY": 1.49510384,
        "posZ": 3.12259984,
        "rotX": -1.54441679e-07,
        "rotY": 270.001,
        "rotZ": -9.774424e-09,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Nenukil",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO73\",\"id\":\"ATO22-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611600,
      "CustomDeck": {
        "66116": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582539/974F54F28076600B14107B62503E705B68565394/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582615/7F3C353FAF607B32304D336657DB38D7DC45444D/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0000e",
      "Name": "Card",
      "Transform": {
        "posX": 69.2994,
        "posY": 1.49510384,
        "posZ": 28.1270981,
        "rotX": -6.92783964e-09,
        "rotY": 269.9992,
        "rotZ": -1.14228605e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Magnus",
      "Description": "The Mercenary",
      "GMNotes": "{\"id\":\"ATO01\",\"type\":\"Investigator\",\"class\":\"Guardian\",\"traits\":\"Civic. Veteran.\",\"agilityIcons\":4,\"combatIcons\":5,\"intellectIcons\":2,\"willpowerIcons\":1,\"TtsZoopGuid\":\"ATO01\",\"extraToken\":\"Reaction\",\"signatures\":[{\"ATO02\":1,\"ATO03\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 100800,
      "CustomDeck": {
        "1008": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582630/DA0B8DF5836378C35ABC38D346E11F8A4678B346/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582661/7942D618E2F507DA20D9B53A97ECD4428067D9F1/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0000f",
      "Name": "Card",
      "Transform": {
        "posX": 58.8155,
        "posY": 1.49510384,
        "posZ": -9.3774,
        "rotX": 4.92701e-09,
        "rotY": 270.00058,
        "rotZ": -1.66766938e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Ottis",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO82\",\"id\":\"ATO49-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611200,
      "CustomDeck": {
        "66112": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582716/2FCD3A44897A8FBEEC0718AD8487B442091938AE/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582752/5E9E47242300DE86B55C9EE86F3DCDA54FFB246C/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00010",
      "Name": "Card",
      "Transform": {
        "posX": 69.3026,
        "posY": 1.49510384,
        "posZ": 20.6270943,
        "rotX": 2.41360823e-07,
        "rotY": 269.9828,
        "rotZ": -1.60200557e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Reginald",
      "Description": "The Cleric",
      "GMNotes": "{\"id\":\"ATO04\",\"type\":\"Investigator\",\"class\":\"Guardian\",\"traits\":\"Believer. Blessed.\",\"agilityIcons\":2,\"combatIcons\":2,\"intellectIcons\":4,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO04\",\"extraToken\":\"FreeTrigger\",\"signatures\":[{\"ATO05\":1,\"ATO06\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 100900,
      "CustomDeck": {
        "1009": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582792/DC0B5B4126ACFAF1169DAB0B94D95DCA340B3527/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582824/E588499FCFBD7041E2918EB8BE4E775C0A03F8D6/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00011",
      "Name": "Card",
      "Transform": {
        "posX": 65.8039,
        "posY": 1.49510384,
        "posZ": 18.1254959,
        "rotX": 1.4592338e-07,
        "rotY": 269.9998,
        "rotZ": -2.567532e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Death's Door",
      "GMNotes": "{\"id\":\"ATO06\",\"type\":\"Treachery\",\"traits\":\"Injury.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO06\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 101000,
      "CustomDeck": {
        "1010": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582869/3D9B6BBACA68D9A0B782C19554F58CE64BCC8775/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00012",
      "Name": "Card",
      "Transform": {
        "posX": 65.8184,
        "posY": 1.49510384,
        "posZ": 20.6400967,
        "rotX": 6.660628e-08,
        "rotY": 269.9994,
        "rotZ": 3.22356186e-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Focus Heal",
      "GMNotes": "{\"id\":\"ATO05\",\"type\":\"Asset\",\"class\":\"Guardian\",\"traits\":\"Ritual. Blessed.\",\"cost\":2,\"intellectIcons\":1,\"willpowerIcons\":1,\"TtsZoopGuid\":\"ATO05\"}",
      "Tags": [
        "Asset",
        "CardThatSeals",
        "PlayerCard"
      ],
      "CardID": 101100,
      "CustomDeck": {
        "1011": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582926/616E8D1EF8884C24967721207E58802D2F8223AF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"playercards/cards/FavoroftheSun1\")\nend)\n__bundle_register(\"playercards/cards/FavoroftheSun1\", function(require, _LOADED, __bundle_register, __bundle_modules)\nVALID_TOKENS = {\n  [\"Bless\"] = true\n}\n\nKEEP_OPEN = true\nMAX_SEALED = 3\nRESOLVE_TOKEN = true\n\nrequire(\"playercards/CardsThatSealTokens\")\nend)\n__bundle_register(\"accessories/TokenArrangerApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local TokenArrangerApi = {}\n  local guidReferenceApi = require(\"core/GUIDReferenceApi\")\n\n  -- local function to call the token arranger, if it is on the table\n  ---@param functionName string Name of the function to cal\n  ---@param argument? table Parameter to pass\n  local function callIfExistent(functionName, argument)\n    local tokenArranger = guidReferenceApi.getObjectByOwnerAndType(\"Mythos\", \"TokenArranger\")\n    if tokenArranger ~= nil then\n      tokenArranger.call(functionName, argument)\n    end\n  end\n\n  -- updates the token modifiers with the provided data\n  ---@param fullData table Contains the chaos token metadata\n  TokenArrangerApi.onTokenDataChanged = function(fullData)\n    callIfExistent(\"onTokenDataChanged\", fullData)\n  end\n\n  -- deletes already laid out tokens\n  TokenArrangerApi.deleteCopiedTokens = function()\n    callIfExistent(\"deleteCopiedTokens\")\n  end\n\n  -- updates the laid out tokens\n  TokenArrangerApi.layout = function()\n    Wait.time(function() callIfExistent(\"layout\") end, 0.1)\n  end\n\n  return TokenArrangerApi\nend\nend)\n__bundle_register(\"chaosbag/BlessCurseManagerApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local BlessCurseManagerApi = {}\n  local guidReferenceApi = require(\"core/GUIDReferenceApi\")\n\n  local function getManager()\n    return guidReferenceApi.getObjectByOwnerAndType(\"Mythos\", \"BlessCurseManager\")\n  end\n\n  -- removes all taken tokens and resets the counts\n  BlessCurseManagerApi.removeTakenTokensAndReset = function()\n    local BlessCurseManager = getManager()\n    Wait.time(function() BlessCurseManager.call(\"removeTakenTokens\", \"Bless\") end, 0.05)\n    Wait.time(function() BlessCurseManager.call(\"removeTakenTokens\", \"Curse\") end, 0.10)\n    Wait.time(function() BlessCurseManager.call(\"doReset\", \"White\") end, 0.15)\n  end\n\n  -- updates the internal count (called by cards that seal bless/curse tokens)\n  ---@param type string Type of chaos token (\"Bless\" or \"Curse\")\n  ---@param guid string GUID of the token\n  BlessCurseManagerApi.sealedToken = function(type, guid)\n    getManager().call(\"sealedToken\", { type = type, guid = guid })\n  end\n\n  -- updates the internal count (called by cards that seal bless/curse tokens)\n  ---@param type string Type of chaos token (\"Bless\" or \"Curse\")\n  ---@param guid string GUID of the token\n  ---@param fromBag? boolean Whether or not token was just drawn from the chaos bag\n  BlessCurseManagerApi.releasedToken = function(type, guid, fromBag)\n    getManager().call(\"releasedToken\", { type = type, guid = guid, fromBag = fromBag })\n  end\n\n  -- updates the internal count (called by cards that seal bless/curse tokens)\n  ---@param type string Type of chaos token (\"Bless\" or \"Curse\")\n  ---@param guid string GUID of the token\n  BlessCurseManagerApi.returnedToken = function(type, guid)\n    getManager().call(\"returnedToken\", { type = type, guid = guid })\n  end\n\n  -- broadcasts the current status for bless/curse tokens\n  ---@param playerColor string Color of the player to show the broadcast to\n  BlessCurseManagerApi.broadcastStatus = function(playerColor)\n    getManager().call(\"broadcastStatus\", playerColor)\n  end\n\n  -- removes all bless / curse tokens from the chaos bag and play\n  ---@param playerColor string Color of the player to show the broadcast to\n  BlessCurseManagerApi.removeAll = function(playerColor)\n    getManager().call(\"doRemove\", playerColor)\n  end\n\n  -- adds bless / curse sealing to the hovered card\n  ---@param playerColor string Color of the player to show the broadcast to\n  ---@param hoveredObject tts__Object Hovered object\n  BlessCurseManagerApi.addBlurseSealingMenu = function(playerColor, hoveredObject)\n    getManager().call(\"addMenuOptions\", { playerColor = playerColor, hoveredObject = hoveredObject })\n  end\n\n  -- adds bless / curse to the chaos bag\n  ---@param type string Type of chaos token (\"Bless\" or \"Curse\")\n  BlessCurseManagerApi.addToken = function(type)\n    getManager().call(\"addToken\", type)\n  end\n\n  -- removes bless / curse from the chaos bag\n  ---@param type string Type of chaos token (\"Bless\" or \"Curse\")\n  BlessCurseManagerApi.removeToken = function(type)\n    getManager().call(\"removeToken\", type)\n  end\n\n  BlessCurseManagerApi.getBlessCurseInBag = function()\n    return getManager().call(\"getBlessCurseInBag\", {})\n  end\n\n  return BlessCurseManagerApi\nend\nend)\n__bundle_register(\"chaosbag/ChaosBagApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local ChaosBagApi = {}\n\n  -- respawns the chaos bag with a new state of tokens\n  ---@param tokenList table List of chaos token ids\n  ChaosBagApi.setChaosBagState = function(tokenList)\n    Global.call(\"setChaosBagState\", tokenList)\n  end\n\n  -- returns a Table List of chaos token ids in the current chaos bag\n  -- requires copying the data into a new table because TTS is weird about handling table return values in Global\n  ChaosBagApi.getChaosBagState = function()\n    local chaosBagContentsCatcher = Global.call(\"getChaosBagState\")\n    local chaosBagContents = {}\n    for _, v in ipairs(chaosBagContentsCatcher) do\n      table.insert(chaosBagContents, v)\n    end\n    return chaosBagContents\n  end\n\n  -- checks scripting zone for chaos bag (also called by a lot of objects!)\n  ChaosBagApi.findChaosBag = function()\n    return Global.call(\"findChaosBag\")\n  end\n\n  -- returns a table of object references to the tokens in play (does not include sealed tokens!)\n  ChaosBagApi.getTokensInPlay = function()\n    return Global.call(\"getChaosTokensinPlay\")\n  end\n\n  -- returns all sealed tokens on cards to the chaos bag\n  ---@param playerColor string Color of the player to show the broadcast to\n  ChaosBagApi.releaseAllSealedTokens = function(playerColor)\n    Global.call(\"releaseAllSealedTokens\", playerColor)\n  end\n\n  -- returns all drawn tokens to the chaos bag\n  ChaosBagApi.returnChaosTokens = function()\n    Global.call(\"returnChaosTokens\")\n  end\n\n  -- removes the specified chaos token from the chaos bag\n  ---@param id string ID of the chaos token\n  ChaosBagApi.removeChaosToken = function(id)\n    Global.call(\"removeChaosToken\", id)\n  end\n\n  -- returns a chaos token to the bag and calls all relevant functions\n  ---@param token tts__Object Chaos token to return\n  ---@param fromBag boolean whether or not the token to return was in the middle of being drawn (true) or elsewhere (false)\n  ChaosBagApi.returnChaosTokenToBag = function(token, fromBag)\n    Global.call(\"returnChaosTokenToBag\", { token = token, fromBag = fromBag })\n  end\n\n  -- spawns the specified chaos token and puts it into the chaos bag\n  ---@param id string ID of the chaos token\n  ChaosBagApi.spawnChaosToken = function(id)\n    Global.call(\"spawnChaosToken\", id)\n  end\n\n  -- Checks to see if the chaos bag can be manipulated.  If a player is searching the bag when tokens\n  -- are drawn or replaced a TTS bug can cause those tokens to vanish.  Any functions which change the\n  -- contents of the bag should check this method before doing so.\n  -- This method will broadcast a message to all players if the bag is being searched.\n  ---@return any: True if the bag is manipulated, false if it should be blocked.\n  ChaosBagApi.canTouchChaosTokens = function()\n    return Global.call(\"canTouchChaosTokens\")\n  end\n\n  ChaosBagApi.activeRedrawEffect = function(validTokens, invalidTokens, returnToPool, drawSpecificToken)\n    Global.call(\"activeRedrawEffect\", {\n      validTokens = validTokens,\n      invalidTokens = invalidTokens,\n      returnToPool = returnToPool,\n      drawSpecificToken = drawSpecificToken\n    })\n  end\n\n  ChaosBagApi.getReadableTokenName = function(tokenName)\n    return Global.call(\"getReadableTokenName\", tokenName)\n  end\n\n  ChaosBagApi.getChaosTokenName = function(chosenToken)\n    return Global.call(\"getChaosTokenName\", chosenToken)\n  end\n\n  -- draws a chaos token to a playermat\n  ---@param mat tts__Object Playermat that triggered this\n  ---@param drawAdditional boolean Controls whether additional tokens should be drawn\n  ---@param tokenType? string Name of token (e.g. \"Bless\") to be drawn from the bag\n  ---@param guidToBeResolved? string GUID of the sealed token to be resolved instead of drawing a token from the bag\n  ---@param takeParameters? table Position and rotation of the location where the new token should be drawn to, usually to replace a returned token\n  ---@return tts__Object: Object reference to the token that was drawn\n  ChaosBagApi.drawChaosToken = function(mat, drawAdditional, tokenType, guidToBeResolved, takeParameters)\n    return Global.call(\"drawChaosToken\", {\n      mat = mat,\n      drawAdditional = drawAdditional,\n      tokenType = tokenType,\n      guidToBeResolved = guidToBeResolved,\n      takeParameters = takeParameters\n    })\n  end\n\n  -- returns a Table List of chaos token ids in the current chaos bag\n  -- requires copying the data into a new table because TTS is weird about handling table return values in Global\n  ChaosBagApi.getIdUrlMap = function()\n    return Global.getTable(\"ID_URL_MAP\")\n  end\n\n  return ChaosBagApi\nend\nend)\n__bundle_register(\"core/GUIDReferenceApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local GUIDReferenceApi = {}\n\n  local function getGuidHandler()\n    return getObjectFromGUID(\"123456\")\n  end\n\n  -- Returns the matching object\n  ---@param owner string Parent object for this search\n  ---@param type string Type of object to search for\n  ---@return any: Object reference to the matching object\n  GUIDReferenceApi.getObjectByOwnerAndType = function(owner, type)\n    return getGuidHandler().call(\"getObjectByOwnerAndType\", { owner = owner, type = type })\n  end\n\n  -- Returns all matching objects as a table with references\n  ---@param type string Type of object to search for\n  ---@return table: List of object references to matching objects\n  GUIDReferenceApi.getObjectsByType = function(type)\n    return getGuidHandler().call(\"getObjectsByType\", type)\n  end\n\n  -- Returns all matching objects as a table with references\n  ---@param owner string Parent object for this search\n  ---@return table: List of object references to matching objects\n  GUIDReferenceApi.getObjectsByOwner = function(owner)\n    return getGuidHandler().call(\"getObjectsByOwner\", owner)\n  end\n\n  -- Sends new information to the reference handler to edit the main index\n  ---@param owner string Parent of the object\n  ---@param type string Type of the object\n  ---@param guid string GUID of the object\n  GUIDReferenceApi.editIndex = function(owner, type, guid)\n    return getGuidHandler().call(\"editIndex\", {\n      owner = owner,\n      type = type,\n      guid = guid\n    })\n  end\n\n  -- Returns the owner of an object or the object it's located on\n  ---@param object tts__GameObject Object for this search\n  ---@return string: Parent of the object or object it's located on\n  GUIDReferenceApi.getOwnerOfObject = function(object)\n    return getGuidHandler().call(\"getOwnerOfObject\", object)\n  end\n\n  return GUIDReferenceApi\nend\nend)\n__bundle_register(\"playercards/CardsThatSealTokens\", function(require, _LOADED, __bundle_register, __bundle_modules)\n--[[ Library for cards that seal tokens\nThis file is used to add sealing option to cards' context menu.\nNOTE: all cards are allowed to release a single token to enable Hallow and A Watchful Peace,\nand to release all sealed tokens to allow for cards that might leave play with sealed tokens on them.\nValid options (set before requiring this file):\n\nMAX_SEALED          --@type: number (maximum number of tokens allowable by the card to be sealed)\n  - required for all cards\n  - if MAX_SEALED is more than 1, then an XML label is created for the topmost token indicating the number of sealed tokens\n  - gives an error if user tries to seal additional tokens on the card\n  - example usage: \"The Chthonian Stone\"\n    > MAX_SEALED = 1\n\nUPDATE_ON_HOVER     --@type: boolean\n  - automatically updates the context menu options when the card is hovered\n  - the \"Read Bag\" function reads the content of the chaos bag to update the context menu\n  - example usage: \"Unrelenting\" (to only display valid tokens)\n\nKEEP_OPEN           --@type: boolean\n- meant for cards that seal single tokens multiple times (one by one)\n- makes the context menu stay open after selecting an option\n- example usage: \"Unrelenting\"\n\nSHOW_MULTI_RELEASE  --@type: number (maximum amount of tokens to release at once)\n  - enables an entry in the context menu\n  - this entry allows releasing of multiple tokens at once, to the maximum number\n  - does not fail if there are fewer than the maximum sealed\n  - example usage: \"Nephthys\" (to release up to 3 bless tokens at once)  \n\nSHOW_MULTI_RETURN   --@type: number (amount of tokens to return to pool at once)\n  - enables an entry in the context menu\n  - this entry allows returning tokens to the token pool\n  - fails if not enough tokens are sealed\n  - example usage: \"Nephthys\" (to return 3 bless tokens at once)\n\nSHOW_MULTI_SEAL     --@type: number (amount of tokens to seal at once)\n  - enables an entry in the context menu\n  - this entry allows sealing of multiple tokens at once\n  - example usage: \"Holy Spear\" (to seal two bless tokens at once)\n\nVALID_TOKENS        --@type: table ([tokenName] = true)\n  - this table defines which tokens should be abled to be sealed\n  - needs to be defined for each card -> even if empty\n  - example usage: \"The Chthonian Stone\"\n    > VALID_TOKENS = {\n    >   [\"Skull\"]       = true,\n    >   [\"Cultist\"]     = true,\n    >   [\"Tablet\"]      = true,\n    >   [\"Elder Thing\"] = true,\n    > }\n\nINVALID_TOKENS      --@type: table ([tokenName] = true)\n  - this table defines which tokens are invalid for sealing\n  - only needs to be defined if needed\n  - usually combined with empty \"VALID_TOKENS\" table\n  - example usage: \"Protective Incantation\" (not allowed to seal Auto-fail)\n\n----------------------------------------------------------\nExample 1: Crystalline Elder Sign\nThis card can only seal the \"+1\" or \"Elder Sign\" token,\nit does not need specific options for multi-sealing or releasing.\nThus it should be implemented like this:\n  > VALID_TOKENS = {\n  >   [\"+1\"] = true,\n  >   [\"Elder Sign\"] = true\n  > }\n  > MAX_SEALED = 1\n  > require...\n----------------------------------------------------------\nExample 2: Holy Spear\nThis card features the following abilities (just listing the relevant parts):\n- releasing a single bless token\n- sealing two bless tokens\nThus it should be implemented like this:\n  > VALID_TOKENS = {\n  >   [\"Bless\"] = true\n  > }\n  > SHOW_MULTI_SEAL = 2\n  > MAX_SEALED = 10\n  > require...\n----------------------------------------------------------]]\n\nlocal blessCurseManagerApi = require(\"chaosbag/BlessCurseManagerApi\")\nlocal chaosBagApi = require(\"chaosbag/ChaosBagApi\")\nlocal guidReferenceApi = require(\"core/GUIDReferenceApi\")\nlocal playermatApi = require(\"playermat/PlayermatApi\")\nlocal tokenArrangerApi = require(\"accessories/TokenArrangerApi\")\n\nlocal sealedTokens = {}\nlocal ID_URL_MAP = {}\nlocal tokensInBag = {}\n\n-- XML background color for each token for label when stacked\nlocal tokenColor  = {\n  [\"Skull\"] = \"#4A0400E6\",\n  [\"Cultist\"] = \"#173B0BE6\",\n  [\"Tablet\"] = \"#1D2238E6\",\n  [\"Elder Thing\"] = \"#4D2331E6\",\n  [\"Auto-fail\"] = \"#9B0004E6\",\n  [\"Bless\"] = \"#9D702CE6\",\n  [\"Curse\"] = \"#633A84E6\",\n  [\"Frost\"] = \"#4A487BE6\",\n  [\"Elder Sign\"] = \"#50A8CEE6\",\n  [\"\"] = \"#77674DE6\"\n}\n\nfunction updateSave()\n  self.script_state = JSON.encode(sealedTokens)\nend\n\nfunction onLoad(savedData)\n  sealedTokens = JSON.decode(savedData) or {}\n  ID_URL_MAP = chaosBagApi.getIdUrlMap()\n  generateContextMenu()\n  self.addTag(\"CardThatSeals\")\nend\n\n-- builds the context menu\nfunction generateContextMenu()\n  self.addContextMenuItem(\"Release one token\", releaseOneToken)\n\n  -- conditional release options\n  if MAX_SEALED > 1 then\n    self.addContextMenuItem(\"Release all tokens\", releaseAllTokens)\n  end\n\n  if SHOW_MULTI_RELEASE then\n    self.addContextMenuItem(\"Release \" .. SHOW_MULTI_RELEASE .. \" token(s)\", releaseMultipleTokens)\n  end\n\n  if RESOLVE_TOKEN then\n    local firstTokenType\n    for tokenType, val in pairs(VALID_TOKENS) do\n      firstTokenType = tokenType\n      break\n    end\n    self.addContextMenuItem(\"Resolve \" .. firstTokenType, resolveSealed)\n  end\n\n  -- conditional release option\n  if SHOW_MULTI_RETURN then\n    self.addContextMenuItem(\"Return \" .. SHOW_MULTI_RETURN .. \" token(s)\", returnMultipleTokens)\n  end\n\n  -- main context menu options to seal tokens\n  for _, map in pairs(ID_URL_MAP) do\n    if (VALID_TOKENS[map.name] ~= nil) or (UPDATE_ON_HOVER and tokensInBag[map.name] and not INVALID_TOKENS[map.name]) then\n      if not SHOW_MULTI_SEAL then\n        self.addContextMenuItem(\"Seal \" .. map.name, function(playerColor)\n          sealToken(map.name, playerColor)\n        end, KEEP_OPEN)\n      else\n        self.addContextMenuItem(\"Seal \" .. SHOW_MULTI_SEAL .. \" \" .. map.name, function(playerColor)\n          readBag()\n          local allowed = true\n          local notFound\n\n          for name, _ in pairs(VALID_TOKENS) do\n            if (tokensInBag[name] or 0) < SHOW_MULTI_SEAL then\n              allowed = false\n              notFound = name\n            end\n          end\n\n          if allowed then\n            for i = SHOW_MULTI_SEAL, 1, -1 do\n              sealToken(map.name, playerColor)\n            end\n          else\n            printToColor(\"Not enough \" .. notFound .. \" tokens in the chaos bag.\", playerColor)\n          end\n        end)\n      end\n    end\n  end\nend\n\n-- generates a list of chaos tokens that is in the chaos bag\nfunction readBag()\n  local chaosbag = chaosBagApi.findChaosBag()\n  tokensInBag = {}\n\n  for _, token in ipairs(chaosbag.getObjects()) do\n    tokensInBag[token.name] = (tokensInBag[token.name] or 0) + 1\n  end\nend\n\nfunction resetSealedTokens()\n  sealedTokens = {}\n  updateSave()\nend\n\n-- native event from TTS - used to update the context menu for cards like \"Unrelenting\"\nfunction onHover()\n  if UPDATE_ON_HOVER then\n    readBag()\n    self.clearContextMenu()\n    generateContextMenu()\n  end\nend\n\n-- seals the named token on this card\nfunction sealToken(name, playerColor)\n  if #sealedTokens >= MAX_SEALED then\n    printToColor(\"Cannot seal any more tokens on this card\", playerColor, \"Red\")\n    return\n  end\n  if not chaosBagApi.canTouchChaosTokens() then return end\n  local chaosbag = chaosBagApi.findChaosBag()\n  for i, obj in ipairs(chaosbag.getObjects()) do\n    if obj.name == name then\n      chaosbag.takeObject({\n        position = self.getPosition() + Vector(0, 0.5 + 0.1 * #sealedTokens, 0),\n        rotation = self.getRotation(),\n        index = i - 1,\n        smooth = false,\n        callback_function = function(token)\n          local guid = token.getGUID()\n          table.insert(sealedTokens, guid)\n          tokenArrangerApi.layout()\n          if name == \"Bless\" or name == \"Curse\" then\n            blessCurseManagerApi.sealedToken(name, guid)\n          end\n          -- destroy XML on just covered token\n          if #sealedTokens > 1 then\n            local coveredToken = getObjectFromGUID(sealedTokens[#sealedTokens - 1])\n            if coveredToken ~= nil then\n              coveredToken.UI.setXml(\"\")\n            else\n              table.remove(sealedTokens, #sealedTokens - 1)\n            end\n          end\n          updateStackSize()\n          updateSave()\n        end\n      })\n      return\n    end\n  end\n  printToColor(name .. \" token not found in chaos bag\", playerColor)\nend\n\n-- release the last sealed token\nfunction releaseOneToken(playerColor)\n  if not chaosBagApi.canTouchChaosTokens() then return end\n  if #sealedTokens == 0 then\n    printToColor(\"No sealed token(s) found\", playerColor)\n  else\n    printToColor(\"Releasing token\", playerColor)\n    putTokenAway(table.remove(sealedTokens))\n    updateSave()\n  end\nend\n\n-- release up to multiple tokens at once with no minimum\nfunction releaseMultipleTokens(playerColor)\n  if #sealedTokens == 0 then\n    printToColor(\"Not enough tokens sealed.\", playerColor)\n    return\n  end\n\n  local numRemoved = SHOW_MULTI_RELEASE\n  if #sealedTokens < SHOW_MULTI_RELEASE then\n    numRemoved = #sealedTokens\n  end\n\n  for i = 1, numRemoved do\n    putTokenAway(table.remove(sealedTokens))\n  end\n  updateSave()\n  printToColor(\"Releasing \" .. numRemoved .. \" tokens\", playerColor)\nend\n\n-- releases all sealed tokens\nfunction releaseAllTokens(playerColor)\n  if not chaosBagApi.canTouchChaosTokens() then return end\n  if #sealedTokens == 0 then\n    printToColor(\"No sealed token(s) found\", playerColor)\n  else\n    printToColor(\"Releasing token(s)\", playerColor)\n    for _, guid in ipairs(sealedTokens) do\n      putTokenAway(guid)\n    end\n    sealedTokens = {}\n    updateSave()\n  end\nend\n\n-- returns multiple tokens at once to the token pool\nfunction returnMultipleTokens(playerColor)\n  if SHOW_MULTI_RETURN <= #sealedTokens then\n    for i = 1, SHOW_MULTI_RETURN do\n      returnToken(table.remove(sealedTokens))\n    end\n    updateSave()\n    printToColor(\"Returning \" .. SHOW_MULTI_RETURN .. \" tokens\", playerColor)\n  else\n    printToColor(\"Not enough tokens sealed.\", playerColor)\n  end\nend\n\n-- returns the token (referenced by GUID) to the chaos bag\nfunction putTokenAway(guid)\n  local token = getObjectFromGUID(guid)\n  if not token then return end\n\n  local name = token.getName()\n  local chaosbag = chaosBagApi.findChaosBag()\n  chaosbag.putObject(token)\n  tokenArrangerApi.layout()\n  if name == \"Bless\" or name == \"Curse\" then\n    blessCurseManagerApi.releasedToken(name, guid)\n  end\n  updateStackSize()\nend\n\n-- returns the token to the pool (== removes it)\nfunction returnToken(guid)\n  local token = getObjectFromGUID(guid)\n  if not token then return end\n\n  local name = token.getName()\n  token.destruct()\n  if name == \"Bless\" or name == \"Curse\" then\n    blessCurseManagerApi.returnedToken(name, guid)\n  end\n  updateStackSize()\nend\n\n-- resolves sealed token as if it came from the chaos bag\nfunction resolveSealed()\n  if #sealedTokens == 0 then\n    broadcastToAll(\"No tokens sealed.\", \"Red\")\n    return\n  end\n  local closestMatColor = playermatApi.getMatColorByPosition(self.getPosition())\n  local mat = guidReferenceApi.getObjectByOwnerAndType(closestMatColor, \"Playermat\")\n  local guidToBeResolved = table.remove(sealedTokens)\n  local resolvedToken = getObjectFromGUID(guidToBeResolved)\n  resolvedToken.UI.setXml(\"\")\n  updateStackSize()\n  updateSave()\n  chaosBagApi.drawChaosToken(mat, true, _, guidToBeResolved)\nend\n\nfunction updateStackSize()\n  if MAX_SEALED == 1 then return end\n  if #sealedTokens == 0 then return end\n  -- get topmost sealed token\n  local topToken = getObjectFromGUID(sealedTokens[#sealedTokens])\n  local name = topToken.getName()\n\n  topToken.UI.setXmlTable({\n    {\n      tag = \"Panel\",\n      attributes = {\n        height = 380,\n        width = 380,\n        rotation = \"0 0 180\",\n        scale = \"0.2 0.2 1\",\n        position = \"0 0 -12\",\n        color = tokenColor[name] or \"#77674DE6\"\n      },\n      children = {\n        tag = \"Text\",\n        attributes = {\n          fontSize = \"380\",\n          font = \"font_teutonic-arkham\",\n          color = \"#ffffff\",\n          outline = \"#000000\",\n          outlineSize = \"8 -8\",\n          text = \"x\" .. #sealedTokens\n        }\n      }\n    }\n  })\nend\nend)\n__bundle_register(\"playermat/PlayermatApi\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local PlayermatApi = {}\n  local guidReferenceApi = require(\"core/GUIDReferenceApi\")\n  local searchLib = require(\"util/SearchLib\")\n  local localInvestigatorPosition = { x = -1.17, y = 1, z = -0.01 }\n\n  -- Convenience function to look up a mat's object by color, or get all mats.\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@return table: Single-element if only single playermat is requested\n  local function getMatForColor(matColor)\n    if matColor == \"All\" then\n      return guidReferenceApi.getObjectsByType(\"Playermat\")\n    else\n      return { matColor = guidReferenceApi.getObjectByOwnerAndType(matColor, \"Playermat\") }\n    end\n  end\n\n  -- Returns the color of the closest playermat\n  ---@param startPos table Starting position to get the closest mat from\n  PlayermatApi.getMatColorByPosition = function(startPos)\n    local result, smallestDistance\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local distance = Vector.between(startPos, mat.getPosition()):magnitude()\n      if smallestDistance == nil or distance < smallestDistance then\n        smallestDistance = distance\n        result = matColor\n      end\n    end\n    return result\n  end\n\n  -- Returns the color of the player's hand that is seated next to the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getPlayerColor = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.getVar(\"playerColor\")\n    end\n  end\n\n  -- Returns the color of the playermat that owns the playercolor's hand\n  ---@param handColor string Color of the playermat\n  PlayermatApi.getMatColor = function(handColor)\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local playerColor = mat.getVar(\"playerColor\")\n      if playerColor == handColor then\n        return matColor\n      end\n    end\n  end\n\n  -- Instructs a playermat to check for DES\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.checkForDES = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"checkForDES\")\n    end\n  end\n\n  -- Returns if there is the card \"Dream-Enhancing Serum\" on the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@return boolean: whether DES is present on the playermat\n  PlayermatApi.hasDES = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getDES\")\n    end\n  end\n\n  -- gets the slot data for the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getSlotData = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.getTable(\"slotData\")\n    end\n  end\n\n  -- sets the slot data for the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param newSlotData table New slot data for the playermat\n  PlayermatApi.loadSlotData = function(matColor, newSlotData)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.setTable(\"slotData\", newSlotData)\n      mat.call(\"updateSlotSymbols\")\n      return\n    end\n  end\n\n  -- Performs a search of the deck area of the requested playermat and returns the result as table\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getDeckAreaObjects = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getDeckAreaObjects\")\n    end\n  end\n\n  -- Flips the top card of the deck (useful after deck manipulation for Norman Withers)\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.flipTopCardFromDeck = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"flipTopCardFromDeck\")\n    end\n  end\n\n  -- Returns the position of the discard pile of the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getDiscardPosition = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"returnGlobalDiscardPosition\")\n    end\n  end\n\n  -- Returns the position of the draw pile of the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getDrawPosition = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"returnGlobalDrawPosition\")\n    end\n  end\n\n  -- Transforms a local position into a global position\n  ---@param localPos table Local position to be transformed\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.transformLocalPosition = function(localPos, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.positionToWorld(localPos)\n    end\n  end\n\n  -- Returns the rotation of the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.returnRotation = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.getRotation()\n    end\n  end\n\n  -- Returns a table with spawn data (position and rotation) for a helper object\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param helperName string Name of the helper object\n  PlayermatApi.getHelperSpawnData = function(matColor, helperName)\n    local resultTable = {}\n    local localPositionTable = {\n      [\"Hand Helper\"] = Vector( -0.055, 0, -1.132 ),\n      [\"Search Assistant\"] = Vector( -0.34, 0, -1.132 )\n    }\n\n    for color, mat in pairs(getMatForColor(matColor)) do\n      resultTable[color] = {\n        position = mat.positionToWorld(localPositionTable[helperName]),\n        rotation = mat.getRotation()\n      }\n    end\n    return resultTable\n  end\n\n\n  -- Triggers the Upkeep for the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param playerColor string Color of the calling player (for messages)\n  PlayermatApi.doUpkeepFromHotkey = function(matColor, playerColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"doUpkeepFromHotkey\", playerColor)\n    end\n  end\n\n  -- Handles discarding for the requested playermat for the provided list of objects\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param objList table List of objects to discard\n  PlayermatApi.discardListOfObjects = function(matColor, objList)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"discardListOfObjects\", objList)\n    end\n  end\n\n  -- Gets data about the active investigator\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getActiveInvestigatorData = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getActiveInvestigatorData\")\n    end\n  end\n\n  -- Gets data about the active investigator\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param newData table New active investigator data (class and id)\n  PlayermatApi.setActiveInvestigatorData = function(matColor, newData)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"setActiveInvestigatorData\", newData)\n    end\n  end\n\n  -- Returns the position for encounter card drawing\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param stack boolean If true, returns the leftmost position instead of the first empty from the right\n  PlayermatApi.getEncounterCardDrawPosition = function(matColor, stack)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return Vector(mat.call(\"getEncounterCardDrawPosition\", stack))\n    end\n  end\n\n  -- Sets the requested playermat's snap points to limit snapping to matching card types or not.  If\n  -- matchTypes is true, the main card slot snap points will only snap assets, while the\n  -- investigator area point will only snap Investigators.  If matchTypes is false, snap points will\n  -- be reset to snap all cards.\n  ---@param matchCardTypes boolean Whether snap points should only snap for the matching card types\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.setLimitSnapsByType = function(matchCardTypes, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"setLimitSnapsByType\", matchCardTypes)\n    end\n  end\n\n  -- Sets the requested playermat's draw 1 button to visible\n  ---@param isDrawButtonVisible boolean Whether the draw 1 button should be visible or not\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.showDrawButton = function(isDrawButtonVisible, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"showDrawButton\", isDrawButtonVisible)\n    end\n  end\n\n  -- Shows or hides the clickable clue counter for the requested playermat\n  ---@param showCounter boolean Whether the clickable counter should be present or not\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.clickableClues = function(showCounter, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"clickableClues\", showCounter)\n    end\n  end\n\n  -- Toggles the use of class textures for the requested playermat\n  ---@param state boolean Whether the class texture should be used or not\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.useClassTexture = function(state, matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"useClassTexture\", state)\n    end\n  end\n\n  -- updates the texture of the playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param overrideName? string Force a specific texture\n  PlayermatApi.updateTexture = function(matColor, overrideName)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"updateTexture\", overrideName)\n    end\n  end\n\n  -- Removes all clues (to the trash for tokens and counters set to 0) for the requested playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.removeClues = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"removeClues\")\n    end\n  end\n\n  -- Reports the clue count for the requested playermat\n  ---@param useClickableCounters boolean Controls which type of counter is getting checked\n  PlayermatApi.getClueCount = function(useClickableCounters, matColor)\n    local count = 0\n    for _, mat in pairs(getMatForColor(matColor)) do\n      count = count + mat.call(\"getClueCount\", useClickableCounters)\n    end\n    return count\n  end\n\n  -- Updates the specified owned counter\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param type string Counter to target\n  ---@param newValue number Value to set the counter to\n  ---@param modifier number If newValue is not provided, the existing value will be adjusted by this modifier\n  PlayermatApi.updateCounter = function(matColor, type, newValue, modifier)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"updateCounter\", { type = type, newValue = newValue, modifier = modifier })\n    end\n  end\n\n  -- Triggers the draw function for the specified playermat\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param number number Amount of cards to draw\n  PlayermatApi.drawCardsWithReshuffle = function(matColor, number)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"drawCardsWithReshuffle\", number)\n    end\n  end\n\n  -- Returns the resource counter amount\n  ---@param matColor string Color of the playermat - White, Orange, Green or Red (does not support \"All\")\n  ---@param type string Counter to target\n  PlayermatApi.getCounterValue = function(matColor, type)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      return mat.call(\"getCounterValue\", type)\n    end\n  end\n\n  -- Returns a list of mat colors that have an investigator placed\n  PlayermatApi.getUsedMatColors = function()\n    local usedColors = {}\n    for matColor, mat in pairs(getMatForColor(\"All\")) do\n      local searchPos = mat.positionToWorld(localInvestigatorPosition)\n      local searchResult = searchLib.atPosition(searchPos, \"isCardOrDeck\")\n      if #searchResult > 0 then\n        table.insert(usedColors, matColor)\n      end\n    end\n    return usedColors\n  end\n\n  -- Returns investigator name\n  ---@param matColor string Color of the playmat - White, Orange, Green or Red (does not support \"All\")\n  PlayermatApi.getInvestigatorName = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      local searchPos = mat.positionToWorld(localInvestigatorPosition)\n      local searchResult = searchLib.atPosition(searchPos, \"isCardOrDeck\")\n      if #searchResult == 1 then\n        return searchResult[1].getName()\n      end\n    end\n    return \"\"\n  end\n\n  -- Resets the specified skill tracker to \"1, 1, 1, 1\"\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.resetSkillTracker = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"resetSkillTracker\")\n    end\n  end\n\n  -- Updates the XML for the slot symbols based on the slotData table\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.updateSlotSymbols = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"updateSlotSymbols\")\n    end\n  end\n\n  -- Finds all objects on the playermat and associated set aside zone and returns a table\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  ---@param filter string Name of the filte function (see util/SearchLib)\n  PlayermatApi.searchAroundPlayermat = function(matColor, filter)\n    local objList = {}\n    for _, mat in pairs(getMatForColor(matColor)) do\n      for _, obj in ipairs(mat.call(\"searchAroundSelf\", filter)) do\n        table.insert(objList, obj)\n      end\n    end\n    return objList\n  end\n\n  -- Discard a non-hidden card from the corresponding player's hand\n  ---@param matColor string Color of the playermat - White, Orange, Green, Red or All\n  PlayermatApi.doDiscardOne = function(matColor)\n    for _, mat in pairs(getMatForColor(matColor)) do\n      mat.call(\"doDiscardOne\")\n    end\n  end\n\n  -- Triggers the metadata sync for all playermats\n  PlayermatApi.syncAllCustomizableCards = function()\n    for _, mat in pairs(getMatForColor(\"All\")) do\n      mat.call(\"syncAllCustomizableCards\")\n    end\n  end\n\n  return PlayermatApi\nend\nend)\n__bundle_register(\"util/SearchLib\", function(require, _LOADED, __bundle_register, __bundle_modules)\ndo\n  local SearchLib = {}\n  local filterFunctions = {\n    isCard = function(x) return x.type == \"Card\" end,\n    isDeck = function(x) return x.type == \"Deck\" end,\n    isCardOrDeck = function(x) return x.type == \"Card\" or x.type == \"Deck\" end,\n    isClue = function(x) return x.memo == \"clueDoom\" and x.is_face_down == false end,\n    isDoom = function(x) return x.memo == \"clueDoom\" and x.is_face_down == true end,\n    isTileOrToken = function(x) return x.type == \"Tile\" end,\n    isUniversalToken = function(x) return x.getMemo() == \"universalActionAbility\" end,\n  }\n\n  -- performs the actual search and returns a filtered list of object references\n  ---@param pos tts__Vector Global position\n  ---@param rot? tts__Vector Global rotation\n  ---@param size table Size\n  ---@param filter? string Name of the filter function\n  ---@param direction? table Direction (positive is up)\n  ---@param maxDistance? number Distance for the cast\n  local function returnSearchResult(pos, rot, size, filter, direction, maxDistance)\n    local filterFunc\n    if filter then\n      filterFunc = filterFunctions[filter]\n    end\n    local searchResult = Physics.cast({\n      origin       = pos,\n      direction    = direction or { 0, 1, 0 },\n      orientation  = rot or { 0, 0, 0 },\n      type         = 3,\n      size         = size,\n      max_distance = maxDistance or 0\n    })\n\n    -- filter the result for matching objects\n    local objList = {}\n    for _, v in ipairs(searchResult) do\n      if not filter or filterFunc(v.hit_object) then\n        table.insert(objList, v.hit_object)\n      end\n    end\n    return objList\n  end\n\n  -- searches the specified area\n  function SearchLib.inArea(pos, rot, size, filter)\n    return returnSearchResult(pos, rot, size, filter)\n  end\n\n  -- searches the area on an object\n  function SearchLib.onObject(obj, filter, scale)\n    scale = scale or 1\n    local pos = obj.getPosition()\n    local size = obj.getBounds().size:scale(scale):setAt(\"y\", 1)\n    return returnSearchResult(pos, _, size, filter)\n  end\n\n  -- searches the specified position (a single point)\n  function SearchLib.atPosition(pos, filter)\n    local size = { 0.1, 2, 0.1 }\n    return returnSearchResult(pos, _, size, filter)\n  end\n\n  -- searches below the specified position (downwards until y = 0)\n  function SearchLib.belowPosition(pos, filter)\n    local size = { 0.1, 2, 0.1 }\n    local direction = { 0, -1, 0 }\n    local maxDistance = pos.y\n    return returnSearchResult(pos, _, size, filter, direction, maxDistance)\n  end\n\n  return SearchLib\nend\nend)\nreturn __bundle_require(\"__root\")"
    },
    {
      "GUID": "e00013",
      "Name": "Card",
      "Transform": {
        "posX": 58.8004,
        "posY": 1.49510384,
        "posZ": 25.6226959,
        "rotX": 3.98589833e-07,
        "rotY": 270.0019,
        "rotZ": -4.52500785e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Wilbur",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO70\",\"id\":\"ATO13-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610700,
      "CustomDeck": {
        "66107": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176582989/7ABD4DEB9A968B324A74B5F06ECB8520CEC86D2E/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583012/A3A7D43A22B220C0A326FD18D23DFE902178D7CC/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00014",
      "Name": "Card",
      "Transform": {
        "posX": 58.8252,
        "posY": 1.49510384,
        "posZ": -31.8775,
        "rotX": 2.39225642e-07,
        "rotY": 270.0005,
        "rotZ": 6.24277448e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Yogger",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO85\",\"id\":\"ATO58-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610500,
      "CustomDeck": {
        "66105": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583069/497E7F685BCB1E25ABB5689892CDB1B8F1B5501A/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583127/7D29E7B5EEABE065E9BAEB0FE835C84218130492/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00015",
      "Name": "Card",
      "Transform": {
        "posX": 58.8037,
        "posY": 1.49510384,
        "posZ": 18.1226978,
        "rotX": 2.00264537e-07,
        "rotY": 269.9998,
        "rotZ": -7.228088e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Zek",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO71\",\"id\":\"ATO16-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6611900,
      "CustomDeck": {
        "66119": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583176/7643230CD6712FDB59F46045432559CE32ABEFAF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583216/09440913634BBAF0147471360404A0256CF45EAB/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00016",
      "Name": "Card",
      "Transform": {
        "posX": 65.8144,
        "posY": 1.49510384,
        "posZ": -6.8744,
        "rotX": -4.299494e-08,
        "rotY": 270.000366,
        "rotZ": 4.40107243e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Spell Echo",
      "GMNotes": "{\"id\":\"ATO38\",\"type\":\"Event\",\"class\":\"Mystic\",\"traits\":\"Spell.\",\"TtsZoopGuid\":\"ATO38\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 101200,
      "CustomDeck": {
        "1012": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583255/1CF85D5AC9F940F5FD4A8259659B16FAF11E0DBF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00017",
      "Name": "Card",
      "Transform": {
        "posX": 65.8157,
        "posY": 1.49510384,
        "posZ": -9.374401,
        "rotX": 1.59272062e-07,
        "rotY": 270.0007,
        "rotZ": -1.40591311e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Void Memory",
      "GMNotes": "{\"id\":\"ATO39\",\"type\":\"Treachery\",\"traits\":\"Madness. Omen.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO39\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 101300,
      "CustomDeck": {
        "1013": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583302/77F4820D90B97E89C5C1D0376E5CB78F14AC72EB/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00019",
      "Name": "Card",
      "Transform": {
        "posX": 69.3144,
        "posY": 1.49510384,
        "posZ": -6.8729,
        "rotX": -3.10102052e-07,
        "rotY": 270.0002,
        "rotZ": 1.55955064e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Evelyn",
      "Description": "The Elementalist",
      "GMNotes": "{\"id\":\"ATO37\",\"type\":\"Investigator\",\"class\":\"Mystic\",\"traits\":\"Scholar.\",\"agilityIcons\":4,\"combatIcons\":2,\"intellectIcons\":2,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO37\",\"signatures\":[{\"ATO38\":1,\"ATO39\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 101400,
      "CustomDeck": {
        "1014": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583376/83D143AD48BF278464EA221AD12FB6B3CC907926/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583442/ECB86132D6328FF5E1D39C93C42AAAD54A6D7E65/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0001b",
      "Name": "Card",
      "Transform": {
        "posX": 69.3176,
        "posY": 1.49510384,
        "posZ": -14.3729,
        "rotX": -1.16194848e-07,
        "rotY": 270.000854,
        "rotZ": 1.64336114e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Malukah",
      "Description": "The Voodoo Witch",
      "GMNotes": "{\"id\":\"ATO40\",\"type\":\"Investigator\",\"class\":\"Mystic\",\"traits\":\"Medic. Sorcerer.\",\"agilityIcons\":3,\"combatIcons\":1,\"intellectIcons\":3,\"willpowerIcons\":5,\"TtsZoopGuid\":\"ATO40\",\"extraToken\":\"FreeTrigger\",\"signatures\":[{\"ATO41\":1,\"ATO42\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 101500,
      "CustomDeck": {
        "1015": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583485/DAD5F559E3F4BB72B37F45C0CF431E5ECAB72F9A/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583521/A5D1B7AD415A0CF60F0FEE529311EC5EB487A767/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0001c",
      "Name": "Card",
      "Transform": {
        "posX": 65.8187,
        "posY": 1.49510384,
        "posZ": -16.8744,
        "rotX": -6.445465e-08,
        "rotY": 270.0005,
        "rotZ": -2.129923e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Exotic Ingredients",
      "GMNotes": "{\"id\":\"ATO42\",\"type\":\"Asset\",\"traits\":\"Item. Task.\",\"cost\":2,\"weakness\":true,\"TtsZoopGuid\":\"ATO42\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 101600,
      "CustomDeck": {
        "1016": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583549/AC102D01D4FFDC35AC3FCC8C7D8844203A5A8C2E/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0001d",
      "Name": "Card",
      "Transform": {
        "posX": 65.818,
        "posY": 1.49510384,
        "posZ": -14.3745,
        "rotX": 1.33644434e-07,
        "rotY": 270.000061,
        "rotZ": -1.046063e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Mojo",
      "GMNotes": "{\"id\":\"ATO41\",\"type\":\"Asset\",\"uses\":[{\"count\":0,\"token\":\"resource\",\"type\":\"Charge\"}],\"class\":\"Mystic\",\"traits\":\"Item. Charm. Blessed.\",\"cost\":1,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO41\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 101700,
      "CustomDeck": {
        "1017": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583577/4A1C1173E4870C468AAB28FCBD0659BDEE19CF96/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00020",
      "Name": "Card",
      "Transform": {
        "posX": 69.3241,
        "posY": 1.49510384,
        "posZ": -29.3729,
        "rotX": -2.11736136e-07,
        "rotY": 270.0002,
        "rotZ": -3.51378475e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Navalea",
      "Description": "The Fallen",
      "GMNotes": "{\"id\":\"ATO46\",\"type\":\"Investigator\",\"class\":\"Mystic\",\"traits\":\"Chosen. Cursed.\",\"agilityIcons\":3,\"combatIcons\":4,\"intellectIcons\":1,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO46\",\"extraToken\":\"FreeTrigger\",\"signatures\":[{\"ATO47\":1,\"ATO48\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 101800,
      "CustomDeck": {
        "1018": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583613/57D84A57521E71B6F47933E99AC841715ECC59A2/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583655/911EC2EECA34B46299DD2F07D0A64F9248666CE1/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00021",
      "Name": "Card",
      "Transform": {
        "posX": 65.9243,
        "posY": 1.49510384,
        "posZ": -31.8791,
        "rotX": -6.629887e-08,
        "rotY": 270.0025,
        "rotZ": -1.15188321e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Basthet's Wrath",
      "GMNotes": "{\"id\":\"ATO48\",\"type\":\"Treachery\",\"traits\":\"Curse.\",\"weakness\":true,\"permanent\":true,\"TtsZoopGuid\":\"ATO48\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 101900,
      "CustomDeck": {
        "1019": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583766/8A0EBAD59FA65C819D886B7DC577415AEC27B39A/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00022",
      "Name": "Card",
      "Transform": {
        "posX": 65.8243,
        "posY": 1.49510384,
        "posZ": -29.3745,
        "rotX": -2.18959819e-08,
        "rotY": 270.0041,
        "rotZ": -2.08141472e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Shadow Imbuement",
      "GMNotes": "{\"id\":\"ATO47\",\"type\":\"Asset\",\"class\":\"Mystic\",\"traits\":\"Ritual.\",\"cost\":2,\"combatIcons\":1,\"willpowerIcons\":1,\"TtsZoopGuid\":\"ATO47\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 102000,
      "CustomDeck": {
        "1020": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176583884/E7E3A318B6B3966BFC976521655319C6EC76A89D/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00025",
      "Name": "Card",
      "Transform": {
        "posX": 69.3208,
        "posY": 1.49510384,
        "posZ": -21.8729,
        "rotX": -5.95175749e-08,
        "rotY": 269.9997,
        "rotZ": -1.1726096e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Nezglekt",
      "Description": "The Prophet",
      "GMNotes": "{\"id\":\"ATO43\",\"type\":\"Investigator\",\"class\":\"Mystic\",\"traits\":\"Clairvoyant.\",\"agilityIcons\":2,\"combatIcons\":2,\"intellectIcons\":5,\"willpowerIcons\":3,\"TtsZoopGuid\":\"ATO43\",\"signatures\":[{\"ATO44\":1,\"ATO45\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 102100,
      "CustomDeck": {
        "1021": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226177151173/C85E8CF2C721CAAD3AFC86833F711913277EE77B/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584072/2FB9F5E72F6595D91E72D9C5B6BD6CD77EB3DC24/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00026",
      "Name": "Card",
      "Transform": {
        "posX": 65.8209,
        "posY": 1.49510384,
        "posZ": -21.8744,
        "rotX": -8.45475441e-08,
        "rotY": 270.0008,
        "rotZ": -1.35837709e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Fated Future",
      "GMNotes": "{\"id\":\"ATO44\",\"type\":\"Event\",\"class\":\"Mystic\",\"traits\":\"Augury.\",\"cost\":1,\"wildIcons\":1,\"TtsZoopGuid\":\"ATO44\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 102200,
      "CustomDeck": {
        "1022": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584137/F18991C6BFE8F85EC70FBA0C498B1F3FAECD098B/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00027",
      "Name": "Card",
      "Transform": {
        "posX": 65.8229,
        "posY": 1.49510384,
        "posZ": -24.3744,
        "rotX": 3.81788752e-08,
        "rotY": 270.0005,
        "rotZ": -2.09900961e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Tsnemo's Package",
      "GMNotes": "{\"id\":\"ATO45\",\"type\":\"Treachery\",\"traits\":\"Task.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO45\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 102300,
      "CustomDeck": {
        "1023": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176682905/389BCB0D4C664E947DAB914BA075C3D248F2ADEC/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0002b",
      "Name": "Card",
      "Transform": {
        "posX": 48.3144,
        "posY": 1.49510384,
        "posZ": -6.8819,
        "rotX": -9.800033e-07,
        "rotY": 270.0,
        "rotZ": -1.40157269e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Heiner",
      "Description": "The Sentinel",
      "GMNotes": "{\"id\":\"ATO63\",\"type\":\"Investigator\",\"class\":\"Neutral\",\"traits\":\"Construct.\",\"agilityIcons\":3,\"combatIcons\":3,\"intellectIcons\":3,\"willpowerIcons\":3,\"TtsZoopGuid\":\"ATO63\",\"signatures\":[{\"ATO64\":1,\"ATO65\":1,\"ATO87\":1,\"ATO88\":1,\"ATO89\":1,\"ATO90\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 102400,
      "CustomDeck": {
        "1024": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454995280/AAEFEA8254F620E89C4F8E07A951712285C68B65/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454995348/D1BC36C59CCAF625A7D8601987B3E0C1FC2D817E/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0002c",
      "Name": "Card",
      "Transform": {
        "posX": 44.8155,
        "posY": 1.49510384,
        "posZ": -9.3834,
        "rotX": 5.21158441e-08,
        "rotY": 270.0,
        "rotZ": -1.95656085e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Defunct Core",
      "GMNotes": "{\"id\":\"ATO65\",\"type\":\"Treachery\",\"traits\":\"Injury.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO65\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 102500,
      "CustomDeck": {
        "1025": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454995217/304EF4238C2C7BD12315E70485AD4A92929F655B/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00030",
      "Name": "Card",
      "Transform": {
        "posX": 44.8004,
        "posY": 1.49510384,
        "posZ": 25.616497,
        "rotX": -3.50951339e-08,
        "rotY": 270.0033,
        "rotZ": -1.39627531e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Untrustworthy",
      "GMNotes": "{\"id\":\"ATO27\",\"type\":\"Treachery\",\"traits\":\"Flaw.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO27\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 102700,
      "CustomDeck": {
        "1027": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584523/C0027CCC58A3AFE34FED4843E59472AB28A0372B/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00031",
      "Name": "Card",
      "Transform": {
        "posX": 44.7994,
        "posY": 1.49510384,
        "posZ": 28.1165962,
        "rotX": -1.92093069e-07,
        "rotY": 270.0027,
        "rotZ": 5.857373e-10,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Wild Hunt",
      "GMNotes": "{\"id\":\"ATO26\",\"type\":\"Event\",\"class\":\"Rogue\",\"traits\":\"Tactic.\",\"cost\":0,\"agilityIcons\":2,\"TtsZoopGuid\":\"ATO26\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 102800,
      "CustomDeck": {
        "1028": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584608/78BF9729AFF2E5D253F4DDF95E3F5D5ABF748562/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00033",
      "Name": "Card",
      "Transform": {
        "posX": 48.2993,
        "posY": 1.49510384,
        "posZ": 28.117794,
        "rotX": -1.19896285e-07,
        "rotY": 270.0033,
        "rotZ": 9.927569e-08,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Andrin",
      "Description": "The Ranger",
      "GMNotes": "{\"id\":\"ATO25\",\"type\":\"Investigator\",\"class\":\"Rogue\",\"traits\":\"Criminal.\",\"agilityIcons\":5,\"combatIcons\":3,\"intellectIcons\":2,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO25\",\"extraToken\":\"Reaction\",\"signatures\":[{\"ATO26\":1,\"ATO27\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 102900,
      "CustomDeck": {
        "1029": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584668/3B28DF306727D4156C1FFCB87744A40F94E98E24/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584732/40E8BDE12B7D53B9779BBBF9A5355ECC22AA03F1/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00035",
      "Name": "Card",
      "Transform": {
        "posX": 48.3058,
        "posY": 1.49510384,
        "posZ": 13.1180935,
        "rotX": 1.68413177e-08,
        "rotY": 269.996368,
        "rotZ": -3.45342215e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Gustav",
      "Description": "The Minstrel",
      "GMNotes": "{\"id\":\"ATO31\",\"type\":\"Investigator\",\"class\":\"Rogue\",\"traits\":\"Performer. Socialite.\",\"agilityIcons\":4,\"combatIcons\":1,\"intellectIcons\":3,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO31\",\"extraToken\":\"Reaction\",\"signatures\":[{\"ATO32\":1,\"ATO33\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 103000,
      "CustomDeck": {
        "1030": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584785/2CD00F599F45A9B524D4C9A05E0D337526CB5810/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584850/B1899A43599CC257DF0568608DB4EFDD5745A90E/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00036",
      "Name": "Card",
      "Transform": {
        "posX": 44.8069,
        "posY": 1.49510384,
        "posZ": 10.6165991,
        "rotX": 9.075871e-08,
        "rotY": 269.999939,
        "rotZ": -7.418798e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Broken Lute",
      "GMNotes": "{\"id\":\"ATO33\",\"type\":\"Treachery\",\"traits\":\"Blunder.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO33\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 103100,
      "CustomDeck": {
        "1031": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584894/D0C668DC76F0E362002FFBF0685086D19B975E94/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00037",
      "Name": "Card",
      "Transform": {
        "posX": 44.8058,
        "posY": 1.49510384,
        "posZ": 13.1165953,
        "rotX": -3.07840176e-09,
        "rotY": 270.000366,
        "rotZ": 7.292719e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Heavy Metal",
      "GMNotes": "{\"id\":\"ATO32\",\"type\":\"Event\",\"class\":\"Rogue\",\"traits\":\"Spell. Song.\",\"cost\":2,\"agilityIcons\":1,\"willpowerIcons\":1,\"wildIcons\":1,\"TtsZoopGuid\":\"ATO32\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 103200,
      "CustomDeck": {
        "1032": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176584926/6C88FC38B3F85A0BF90AE1456B31F726921D7CCC/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0003a",
      "Name": "Card",
      "Transform": {
        "posX": 48.309,
        "posY": 1.49510384,
        "posZ": 5.6182,
        "rotX": -2.99976051e-07,
        "rotY": 269.9969,
        "rotZ": 2.30806208e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Sylvie",
      "Description": "The Archer",
      "GMNotes": "{\"id\":\"ATO34\",\"type\":\"Investigator\",\"class\":\"Rogue\",\"traits\":\"Warden.\",\"agilityIcons\":4,\"combatIcons\":4,\"intellectIcons\":2,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO34\",\"signatures\":[{\"ATO35\":1,\"ATO36\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 103300,
      "CustomDeck": {
        "1033": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585004/C19715DE729995EC4D5A5A52571BD31E2D739E44/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585064/5C8E3BE1FE13D8D1E747D5B1E2BAEC2C121EFA14/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0003b",
      "Name": "Card",
      "Transform": {
        "posX": 44.8101,
        "posY": 1.49510384,
        "posZ": 3.11659956,
        "rotX": -1.07799927e-07,
        "rotY": 269.9984,
        "rotZ": -9.476202e-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Frost Calamity",
      "GMNotes": "{\"id\":\"ATO36\",\"type\":\"Treachery\",\"traits\":\"Endtimes.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO36\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 103400,
      "CustomDeck": {
        "1034": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585104/4A25D35C837D419135505666C92EBF69447106F9/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0003c",
      "Name": "Card",
      "Transform": {
        "posX": 44.809,
        "posY": 1.49510384,
        "posZ": 5.61659956,
        "rotX": -9.172877e-08,
        "rotY": 269.9985,
        "rotZ": -2.618146e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Harley",
      "GMNotes": "{\"id\":\"ATO35\",\"type\":\"Asset\",\"class\":\"Rogue\",\"traits\":\"Ally. Creature.\",\"cost\":3,\"agilityIcons\":1,\"combatIcons\":1,\"willpowerIcons\":1,\"TtsZoopGuid\":\"ATO35\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 103500,
      "CustomDeck": {
        "1035": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585130/BA3FC8560083D3C8C4504AA554545463B96478DF/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0003f",
      "Name": "Card",
      "Transform": {
        "posX": 48.3026,
        "posY": 1.49510384,
        "posZ": 20.6180935,
        "rotX": 1.55063411e-08,
        "rotY": 269.9969,
        "rotZ": 5.087887e-08,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Thuls",
      "Description": "The Assassin",
      "GMNotes": "{\"id\":\"ATO28\",\"type\":\"Investigator\",\"class\":\"Rogue\",\"traits\":\"Hunter.\",\"agilityIcons\":5,\"combatIcons\":2,\"intellectIcons\":3,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO28\",\"signatures\":[{\"ATO29\":2,\"ATO91\":1,\"ATO30\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 103600,
      "CustomDeck": {
        "1036": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459877717/FB089483881F25311D54019704838EEBFFE13B95/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459871331/22D2BC21027C5A42013F3EDCD3000A7CC27F7174/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00041",
      "Name": "Card",
      "Transform": {
        "posX": 44.8037,
        "posY": 1.49510384,
        "posZ": 18.1165962,
        "rotX": 2.81465233e-08,
        "rotY": 269.9995,
        "rotZ": -2.689763e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Tulah",
      "GMNotes": "{\"id\":\"ATO30\",\"type\":\"Enemy\",\"traits\":\"Humanoid. Spider.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO30\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 103800,
      "CustomDeck": {
        "1038": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585384/A395D59C2EC9C16D5AAD1AA5CCD5714FC6B48653/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00045",
      "Name": "Card",
      "Transform": {
        "posX": 55.3058,
        "posY": 1.49510384,
        "posZ": 13.1210957,
        "rotX": 5.18334744e-08,
        "rotY": 270.0,
        "rotZ": -3.041715e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Eldritch Discharge",
      "GMNotes": "{\"id\":\"ATO20\",\"type\":\"Event\",\"class\":\"Seeker\",\"traits\":\"Spell. Paradox.\",\"cost\":0,\"intellectIcons\":1,\"wildIcons\":1,\"TtsZoopGuid\":\"ATO20\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 103900,
      "CustomDeck": {
        "1039": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585454/B5D5872601C7133111C7588628C68ABEE6CC90B2/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00046",
      "Name": "Card",
      "Transform": {
        "posX": 55.3069,
        "posY": 1.49510384,
        "posZ": 10.6211,
        "rotX": 7.543655e-08,
        "rotY": 269.999756,
        "rotZ": 5.690938e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Eldritch Rift",
      "GMNotes": "{\"id\":\"ATO21\",\"type\":\"Treachery\",\"traits\":\"Terror.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO21\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 104000,
      "CustomDeck": {
        "1040": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585508/FD8682547D291AF3538AA0AD5F32E5F157CA2918/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00048",
      "Name": "Card",
      "Transform": {
        "posX": 58.8058,
        "posY": 1.49510384,
        "posZ": 13.1225939,
        "rotX": -1.5157822e-07,
        "rotY": 269.999969,
        "rotZ": -1.33120679e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Amelia",
      "Description": "The Queen",
      "GMNotes": "{\"id\":\"ATO19\",\"type\":\"Investigator\",\"class\":\"Seeker\",\"traits\":\"Socialite. Scholar.\",\"agilityIcons\":3,\"combatIcons\":1,\"intellectIcons\":4,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO19\",\"extraToken\":\"Reaction\",\"signatures\":[{\"ATO20\":1,\"ATO21\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 104100,
      "CustomDeck": {
        "1041": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585542/D444DD949544C92212A2BF5BC37D98BB7C016448/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585603/78C51F6436C1F0FEBFC2D399C4FB3D99FE4FFFB6/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0004a",
      "Name": "Card",
      "Transform": {
        "posX": 58.809,
        "posY": 1.49510384,
        "posZ": 5.6226,
        "rotX": -3.35275319e-09,
        "rotY": 270.0,
        "rotZ": -9.923939e-08,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Nenukil",
      "Description": "The Engineer",
      "GMNotes": "{\"id\":\"ATO22\",\"type\":\"Investigator\",\"class\":\"Seeker\",\"traits\":\"Civic. Entrepreneur.\",\"agilityIcons\":4,\"combatIcons\":3,\"intellectIcons\":4,\"willpowerIcons\":1,\"TtsZoopGuid\":\"ATO22\",\"extraToken\":\"Reaction\",\"signatures\":[{\"ATO23\":1,\"ATO24\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 104200,
      "CustomDeck": {
        "1042": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585666/25EBC7137C6182A7EE8CD6E0D0D7E746D78F0694/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585708/34FD7B9CB0E4C7597A5E85D9CCCC63FC8717F485/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0004b",
      "Name": "Card",
      "Transform": {
        "posX": 55.3101,
        "posY": 1.49510384,
        "posZ": 3.12109947,
        "rotX": -1.43212034e-07,
        "rotY": 270.0,
        "rotZ": -2.23661925e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Forge Explosion",
      "GMNotes": "{\"id\":\"ATO24\",\"type\":\"Treachery\",\"traits\":\"Hazard.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO24\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 104300,
      "CustomDeck": {
        "1043": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585749/79A7D2FFAA987047EBD1F0903914B2B3DCBD3D1E/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0004c",
      "Name": "Card",
      "Transform": {
        "posX": 55.309,
        "posY": 1.49510384,
        "posZ": 5.62109947,
        "rotX": -1.289602e-07,
        "rotY": 270.0,
        "rotZ": 1.37012366e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Rocket Boots",
      "GMNotes": "{\"id\":\"ATO23\",\"type\":\"Asset\",\"class\":\"Seeker\",\"traits\":\"Item. Armor. Footwear.\",\"cost\":3,\"agilityIcons\":1,\"combatIcons\":1,\"intellectIcons\":1,\"TtsZoopGuid\":\"ATO23\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 104400,
      "CustomDeck": {
        "1044": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585784/5BF94798B1FDACC5FBCF0CC9DB570CD64FFDD743/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0004f",
      "Name": "Card",
      "Transform": {
        "posX": 58.7994,
        "posY": 1.49510384,
        "posZ": 28.1225948,
        "rotX": -6.789334e-08,
        "rotY": 270.000061,
        "rotZ": 1.21325092e-08,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Wilbur",
      "Description": "The Loremaster",
      "GMNotes": "{\"id\":\"ATO13\",\"type\":\"Investigator\",\"class\":\"Seeker\",\"traits\":\"Scholar.\",\"agilityIcons\":1,\"combatIcons\":3,\"intellectIcons\":5,\"willpowerIcons\":3,\"TtsZoopGuid\":\"ATO13\",\"signatures\":[{\"ATO14\":1,\"ATO15\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 104500,
      "CustomDeck": {
        "1045": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585814/E445759ED19980A4C3444F922D606EABCE476691/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585866/CB760F3CE6864E0F0CD7E3C56E13E31E880D5DDB/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00050",
      "Name": "Card",
      "Transform": {
        "posX": 55.2994,
        "posY": 1.49510384,
        "posZ": 28.1210957,
        "rotX": -4.003704e-08,
        "rotY": 269.999939,
        "rotZ": -3.20250564e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Energizer",
      "GMNotes": "{\"id\":\"ATO14\",\"type\":\"Asset\",\"class\":\"Seeker\",\"traits\":\"Talent.\",\"cost\":2,\"intellectIcons\":2,\"TtsZoopGuid\":\"ATO14\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 104600,
      "CustomDeck": {
        "1046": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25428404422872452/5A82FA8BB6A6C11F9D7CAA9DCA2EBF9E700926DE/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00051",
      "Name": "Card",
      "Transform": {
        "posX": 55.3005,
        "posY": 1.49510384,
        "posZ": 25.6210957,
        "rotX": -4.376278e-08,
        "rotY": 269.999939,
        "rotZ": -3.29964223e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Lost Knowledge",
      "GMNotes": "{\"id\":\"ATO15\",\"type\":\"Treachery\",\"traits\":\"Mystery.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO15\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 104700,
      "CustomDeck": {
        "1047": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176585981/58A13A5C115FE57F47DF22F2FC85C723E39848BC/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00054",
      "Name": "Card",
      "Transform": {
        "posX": 58.8026,
        "posY": 1.49510384,
        "posZ": 20.6225948,
        "rotX": -2.96900069e-08,
        "rotY": 269.9997,
        "rotZ": -1.4349979e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Zek",
      "Description": "The Warlock",
      "GMNotes": "{\"id\":\"ATO16\",\"type\":\"Investigator\",\"class\":\"Seeker\",\"traits\":\"Drifter. Cursed.\",\"agilityIcons\":3,\"combatIcons\":2,\"intellectIcons\":5,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO16\",\"extraToken\":\"Reaction\",\"signatures\":[{\"ATO17\":1,\"ATO18\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 104800,
      "CustomDeck": {
        "1048": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586040/DAAE7A9827EC37679602D0152CD523CB9542A498/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586109/9A5F5BD32AE463A93A54923585DD70E7091AF8C8/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00055",
      "Name": "Card",
      "Transform": {
        "posX": 55.3026,
        "posY": 1.49510384,
        "posZ": 20.6210957,
        "rotX": -4.17923864e-08,
        "rotY": 269.999939,
        "rotZ": -3.30505372e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Death's Embrace",
      "GMNotes": "{\"id\":\"ATO17\",\"type\":\"Event\",\"class\":\"Seeker\",\"traits\":\"Ritual. Cursed. Upgrade.\",\"cost\":2,\"agilityIcons\":1,\"intellectIcons\":2,\"TtsZoopGuid\":\"ATO17\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 104900,
      "CustomDeck": {
        "1049": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586158/B62904E737ACAC5E4A6A4E2BC89AD7036B489B2A/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00056",
      "Name": "Card",
      "Transform": {
        "posX": 55.3037,
        "posY": 1.49510384,
        "posZ": 18.1210957,
        "rotX": -1.50859421e-07,
        "rotY": 269.9998,
        "rotZ": 9.006631e-09,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "The Way Home",
      "GMNotes": "{\"id\":\"ATO18\",\"type\":\"Treachery\",\"traits\":\"Obstacle.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO18\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 105000,
      "CustomDeck": {
        "1050": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586215/2AA6461AAD85CC89E91C0FD0BC79DD10A188CA21/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0005a",
      "Name": "Card",
      "Transform": {
        "posX": 55.3187,
        "posY": 1.49510384,
        "posZ": -16.8789,
        "rotX": -5.62272451e-09,
        "rotY": 269.999939,
        "rotZ": -1.81166229e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Erekhal",
      "GMNotes": "{\"id\":\"ATO54\",\"type\":\"Enemy\",\"traits\":\"Humanoid. Cultist.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO54\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 105100,
      "CustomDeck": {
        "1051": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176683430/B3F8036A8AC86B0EB2568456024AA550EE991256/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0005b",
      "Name": "Card",
      "Transform": {
        "posX": 55.3176,
        "posY": 1.49510384,
        "posZ": -14.3789005,
        "rotX": 1.01761074e-07,
        "rotY": 269.999939,
        "rotZ": -9.07050364e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Phoenix",
      "GMNotes": "{\"id\":\"ATO53\",\"type\":\"Event\",\"class\":\"Survivor\",\"traits\":\"Spell.\",\"cost\":1,\"wildIcons\":2,\"TtsZoopGuid\":\"ATO53\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 105200,
      "CustomDeck": {
        "1052": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586360/17C9C7AF13BF12BE55F6697669E69D5F92961F95/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0005d",
      "Name": "Card",
      "Transform": {
        "posX": 58.8176,
        "posY": 1.49510384,
        "posZ": -14.3774014,
        "rotX": -1.55937112e-08,
        "rotY": 270.0,
        "rotZ": -3.19932525e-08,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Cornelius",
      "Description": "The Pyromancer",
      "GMNotes": "{\"id\":\"ATO52\",\"type\":\"Investigator\",\"class\":\"Survivor\",\"traits\":\"Cultist. Sorcerer.\",\"agilityIcons\":1,\"combatIcons\":3,\"intellectIcons\":4,\"willpowerIcons\":4,\"TtsZoopGuid\":\"ATO52\",\"signatures\":[{\"ATO53\":1,\"ATO54\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 105300,
      "CustomDeck": {
        "1053": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586427/F367FB8FE4B38794706BAA06215E9E6712085761/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586509/4A7825144B21C993E4E53D6EDA39223DCE9A96B6/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0005f",
      "Name": "Card",
      "Transform": {
        "posX": 58.8209,
        "posY": 1.49510384,
        "posZ": -21.8775,
        "rotX": -1.10552875e-07,
        "rotY": 270.000854,
        "rotZ": -1.81887671e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Grukli",
      "Description": "The Berserker",
      "GMNotes": "{\"id\":\"ATO55\",\"type\":\"Investigator\",\"class\":\"Survivor\",\"traits\":\"Wayfarer.\",\"agilityIcons\":3,\"combatIcons\":5,\"intellectIcons\":2,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO55\",\"signatures\":[{\"ATO56\":1,\"ATO57\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 105400,
      "CustomDeck": {
        "1054": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586571/2C3FDCCC8CF92225703BC410E2C355D879379F3E/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586655/ACD27E3671A68A199B66D213656FFB2249B85437/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00060",
      "Name": "Card",
      "Transform": {
        "posX": 55.3219,
        "posY": 1.49510384,
        "posZ": -24.3789,
        "rotX": -1.82072917e-08,
        "rotY": 270.0005,
        "rotZ": -5.992361e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Food Poisoning",
      "GMNotes": "{\"id\":\"ATO57\",\"type\":\"Treachery\",\"traits\":\"Injury.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO57\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 105500,
      "CustomDeck": {
        "1055": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586749/6E659EBB53EF2A95171AAFD578516C676E94B400/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00061",
      "Name": "Card",
      "Transform": {
        "posX": 55.3209,
        "posY": 1.49510384,
        "posZ": -21.8789,
        "rotX": -5.26539061e-08,
        "rotY": 270.0,
        "rotZ": 2.78978565e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Vigorous Fury",
      "GMNotes": "{\"id\":\"ATO56\",\"type\":\"Asset\",\"class\":\"Survivor\",\"traits\":\"Talent.\",\"permanent\":true,\"uses\":[{\"count\":0,\"token\":\"resource\",\"type\":\"Charge\"}],\"TtsZoopGuid\":\"ATO56\"}",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "CardID": 105600,
      "CustomDeck": {
        "1056": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586808/6E32166EC1BFB07A2A8E430C196836992C44A859/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00064",
      "Name": "Card",
      "Transform": {
        "posX": 58.8144,
        "posY": 1.49510384,
        "posZ": -6.877401,
        "rotX": 5.711415e-08,
        "rotY": 269.999939,
        "rotZ": -3.04423452e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Ottis",
      "Description": "The Priest",
      "GMNotes": "{\"id\":\"ATO49\",\"type\":\"Investigator\",\"class\":\"Survivor\",\"traits\":\"Believer. Blessed.\",\"agilityIcons\":2,\"combatIcons\":3,\"intellectIcons\":2,\"willpowerIcons\":5,\"TtsZoopGuid\":\"ATO49\",\"signatures\":[{\"ATO50\":1,\"ATO51\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 105700,
      "CustomDeck": {
        "1057": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586846/08FC275E757E2CF87197930AF68CE7EF0E60F7BB/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176586876/F50A42288BC79EB3E3514EC36855EBB15B7D6912/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00065",
      "Name": "Card",
      "Transform": {
        "posX": 55.3144,
        "posY": 1.49510384,
        "posZ": -6.87890053,
        "rotX": -4.4545323e-09,
        "rotY": 269.9998,
        "rotZ": -1.70220872e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Double Bubble",
      "GMNotes": "{\"id\":\"ATO50\",\"type\":\"Event\",\"class\":\"Survivor\",\"traits\":\"Spell. Improvised.\",\"cost\":1,\"TtsZoopGuid\":\"ATO50\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 105800,
      "CustomDeck": {
        "1058": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25428404422872991/AEDC523309DAB063F589A2F0C0D76BB1E4F93DAE/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00066",
      "Name": "Card",
      "Transform": {
        "posX": 55.3155,
        "posY": 1.49510384,
        "posZ": -9.378901,
        "rotX": -7.03141154e-08,
        "rotY": 269.9998,
        "rotZ": -1.80963227e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Werewolves",
      "GMNotes": "{\"id\":\"ATO51\",\"type\":\"Enemy\",\"traits\":\"Humanoid. Monster.\",\"weakness\":true,\"TtsZoopGuid\":\"ATO51\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 105900,
      "CustomDeck": {
        "1059": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176683141/27034C7FDF3A948718C23FD40A6E64C6DF2BCCC5/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e00069",
      "Name": "Card",
      "Transform": {
        "posX": 58.8239,
        "posY": 1.49510384,
        "posZ": -29.3778,
        "rotX": 7.87578855e-08,
        "rotY": 270.0054,
        "rotZ": -4.5398852e-07,
        "scaleX": 0.8214286,
        "scaleY": 1.0,
        "scaleZ": 0.8214286
      },
      "Nickname": "Yogger",
      "Description": "The Bandit",
      "GMNotes": "{\"id\":\"ATO58\",\"type\":\"Investigator\",\"class\":\"Survivor\",\"traits\":\"Criminal.\",\"agilityIcons\":2,\"combatIcons\":5,\"intellectIcons\":3,\"willpowerIcons\":2,\"TtsZoopGuid\":\"ATO58\",\"signatures\":[{\"ATO59\":1,\"ATO60\":1,\"ATO61\":1,\"ATO62\":1}]}",
      "Tags": [
        "Investigator",
        "PlayerCard"
      ],
      "CardID": 106000,
      "CustomDeck": {
        "1060": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770459912277/248A695DB58172F4272A2606526317E3EC34D3C6/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176788392/7AB8DA23696CC1E1FFBA2008CD6912016D4AB2EE/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e0006a",
      "Name": "Card",
      "Transform": {
        "posX": 55.3252,
        "posY": 1.49510384,
        "posZ": -31.8789,
        "rotX": 1.87464764e-08,
        "rotY": 270.0144,
        "rotZ": -2.010375e-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Betrayal",
      "GMNotes": "{\"id\":\"ATO62\",\"type\":\"Event\",\"traits\":\"Scheme.\",\"cost\":2,\"weakness\":true,\"TtsZoopGuid\":\"ATO62\"}",
      "Tags": [
        "PlayerCard"
      ],
      "CardID": 106100,
      "CustomDeck": {
        "1061": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176587217/394AAA9A33467D2D96531AC80F0892B3DC662A14/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e7d3ca",
      "Name": "Deck",
      "Transform": {
        "posX": 44.8406,
        "posY": 1.52649987,
        "posZ": -6.8528,
        "rotX": 6.620847e-08,
        "rotY": 270.0,
        "rotZ": 2.84399757e-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Tags": [
        "Asset",
        "PlayerCard"
      ],
      "Hands": false,
      "DeckIDs": [
        6612400,
        6612200,
        6612100,
        6612300,
        102600
      ],
      "CustomDeck": {
        "66124": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994722/DB01D6B2D254039E23FD1F768E52B26FC397330C/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "66122": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994673/44A491ABF4720B933222B4746CB4CC7D4A65421A/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "66121": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994617/5EE2A63FB243242E903CD9E3180781786BFDF8E3/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "66123": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994578/74BB3B864CB1BB067AFBF2A64B9D946C647FFF01/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        },
        "1026": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454995383/DF3FA2FD761523EF5302AD9222143C4AE483540F/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      },
      "ContainedObjects": [
        {
          "GUID": "207d0e",
          "Name": "Card",
          "Transform": {
            "posX": 44.8907,
            "posY": 1.49512327,
            "posZ": -19.85,
            "rotX": -0.00012949892,
            "rotY": 270.0,
            "rotZ": 0.00119721179,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Defense Mastery",
          "Description": "Reinforce",
          "GMNotes": "{\"id\":\"ATO90\",\"type\":\"Asset\",\"class\":\"Rogue\",\"traits\":\"Talent.\",\"agilityIcons\":1,\"TtsZoopGuid\":\"ATO90\"}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 6612400,
          "CustomDeck": {
            "66124": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994722/DB01D6B2D254039E23FD1F768E52B26FC397330C/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "18b94e",
          "Name": "Card",
          "Transform": {
            "posX": 44.9522858,
            "posY": 1.53115058,
            "posZ": -19.7687874,
            "rotX": 359.991821,
            "rotY": 270.0,
            "rotZ": 359.986084,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Defense Mastery",
          "Description": "Fortify",
          "GMNotes": "{\"id\":\"ATO89\",\"type\":\"Asset\",\"class\":\"Guardian\",\"traits\":\"Talent.\",\"combatIcons\":1,\"TtsZoopGuid\":\"ATO89\"}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 6612200,
          "CustomDeck": {
            "66122": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994673/44A491ABF4720B933222B4746CB4CC7D4A65421A/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "3e799b",
          "Name": "Card",
          "Transform": {
            "posX": 44.9490242,
            "posY": 1.57074034,
            "posZ": -19.4827652,
            "rotX": -0.000291618257,
            "rotY": 270.0,
            "rotZ": -0.000627555,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Defense Mastery",
          "Description": "Insulate",
          "GMNotes": "{\"id\":\"ATO88\",\"type\":\"Asset\",\"class\":\"Seeker\",\"traits\":\"Talent.\",\"intellectIcons\":1,\"TtsZoopGuid\":\"ATO88\"}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 6612100,
          "CustomDeck": {
            "66121": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994617/5EE2A63FB243242E903CD9E3180781786BFDF8E3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "2c7654",
          "Name": "Card",
          "Transform": {
            "posX": 45.0953751,
            "posY": 1.580346,
            "posZ": -19.3942814,
            "rotX": 0.00018291139,
            "rotY": 270.0,
            "rotZ": -0.000778369431,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Defense Mastery",
          "Description": "Courage",
          "GMNotes": "{\"id\":\"ATO87\",\"type\":\"Asset\",\"class\":\"Mystic\",\"traits\":\"Talent.\",\"willpowerIcons\":1,\"TtsZoopGuid\":\"ATO87\"}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 6612300,
          "CustomDeck": {
            "66123": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454994578/74BB3B864CB1BB067AFBF2A64B9D946C647FFF01/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        },
        {
          "GUID": "e0002d",
          "Name": "Card",
          "Transform": {
            "posX": 44.8144,
            "posY": 1.49500632,
            "posZ": -6.883403,
            "rotX": 0.00105761667,
            "rotY": 269.999969,
            "rotZ": 180.006592,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Steel Forge",
          "GMNotes": "{\"id\":\"ATO64\",\"type\":\"Asset\",\"class\":\"Survivor\",\"traits\":\"Talent.\",\"permanent\":true,\"TtsZoopGuid\":\"ATO64\"}",
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "CardID": 102600,
          "CustomDeck": {
            "1026": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454995383/DF3FA2FD761523EF5302AD9222143C4AE483540F/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          }
        }
      ]
    },
    {
      "GUID": "eb8a5f",
      "Name": "Card",
      "Transform": {
        "posX": 48.3155,
        "posY": 1.49510384,
        "posZ": -9.3819,
        "rotX": -1.57549167e-07,
        "rotY": 270.0,
        "rotZ": -3.93902326e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Heiner",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO86\",\"id\":\"ATO63-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610900,
      "CustomDeck": {
        "66109": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454996814/F72CA03A696D9E6C55D1E89B45BEC4EE86945202/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427770454996932/F323833597B99400713BA7B1E9D4AA8DA5FCFB36/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    },
    {
      "GUID": "fc3310",
      "Name": "Card",
      "Transform": {
        "posX": 58.8187,
        "posY": 1.49510384,
        "posZ": -16.8774,
        "rotX": 2.8223198e-07,
        "rotY": 270.000061,
        "rotZ": -7.849874e-07,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Cornelius",
      "GMNotes": "{\"type\":\"Minicard\",\"TtsZoopGuid\":\"ATO83\",\"id\":\"ATO52-m\"}",
      "Tags": [
        "Minicard",
        "ScenarioCard"
      ],
      "CardID": 6610400,
      "CustomDeck": {
        "66104": {
          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176587312/36693C10EC079C403283BF40995BC1647FDEFB2F/",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/25427226176587356/5911143795B9BF988CC363463F95AEA7DE635CC6/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": true,
          "Type": 0
        }
      }
    }
  ],
  "AttachedDecals": [
    {
      "Transform": {
        "posX": 0,
        "posY": -0.1,
        "posZ": 0,
        "rotX": 270,
        "rotY": 0,
        "rotZ": 0,
        "scaleX": 2,
        "scaleY": 2,
        "scaleZ": 2
      },
      "CustomDecal": {
        "Name": "dunwich_back",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
        "Size": 7.4
      }
    }
  ]
}
