{
  "GUID": "e4169b",
  "Name": "Custom_Model_Bag",
  "Transform": {
    "posX": 50.51717,
    "posY": 1.48149908,
    "posZ": -26.1600876,
    "rotX": 2.61512781e-07,
    "rotY": 270.016754,
    "rotZ": 1.41672515e-07,
    "scaleX": 2.21,
    "scaleY": 0.46,
    "scaleZ": 2.42
  },
  "Nickname": "Rogues",
  "Description": "Investigator Set",
  "ColorDiffuse": {
    "r": 1.0,
    "g": 1.0,
    "b": 1.0
  },
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomMesh": {
    "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/62583916778515333/9F0BE0C211BE3BD1725B4B855F5D3C9C0D020394/",
    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/2004702731853000680/0A438E16959C3D695C4C33AA5312C099CC8938B0/",
    "MaterialIndex": 3,
    "TypeIndex": 6,
    "CustomShader": {
      "SpecularColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "SpecularIntensity": 0.0,
      "SpecularSharpness": 2.0,
      "FresnelStrength": 0.0
    }
  },
  "LuaScript": "-- Utility memory bag by Directsun\n-- Version 2.5.2\n-- Fork of Memory Bag 2.0 by MrStump\n\nfunction updateSave()\n    local data_to_save = {[\"ml\"]=memoryList}\n    saved_data = JSON.encode(data_to_save)\n    self.script_state = saved_data\nend\n\nfunction combineMemoryFromBagsWithin()\n  local bagObjList = self.getObjects()\n  for _, bagObj in ipairs(bagObjList) do\n    local data = bagObj.lua_script_state\n      if data ~= nil then\n        local j = JSON.decode(data)\n        if j ~= nil and j.ml ~= nil then\n          for guid, entry in pairs(j.ml) do\n            memoryList[guid] = entry\n          end\n        end\n      end\n    end\nend\n\nfunction updateMemoryWithMoves()\n    memoryList = memoryListBackup\n    --get the first transposed object's coordinates\n    local obj = getObjectFromGUID(moveGuid)\n\n    -- p1 is where needs to go, p2 is where it was\n    local refObjPos = memoryList[moveGuid].pos\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\n    local movedRotation = obj.getRotation()\n    for guid, entry in pairs(memoryList) do\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\n        -- memoryList[guid].rot.x = movedRotation.x\n        -- memoryList[guid].rot.y = movedRotation.y\n        -- memoryList[guid].rot.z = movedRotation.z\n    end\n\n    --theList[obj.getGUID()] = {\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n    --    lock=obj.getLock()\n    --}\n    moveList = {}\nend\n\nfunction onload(saved_data)\n    fresh = true\n    if saved_data ~= \"\" then\n        local loaded_data = JSON.decode(saved_data)\n        --Set up information off of loaded_data\n        memoryList = loaded_data.ml\n    else\n        --Set up information for if there is no saved saved data\n        memoryList = {}\n    end\n\n    moveList = {}\n    moveGuid = nil\n\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        fresh = false\n        createMemoryActionButtons()\n    end\nend\n\n\n--Beginning Setup\n\n\n--Make setup button\nfunction createSetupButton()\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n--Triggered by Transpose button\nfunction buttonClick_transpose()\n    moveGuid = nil\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    moveList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(true)\n    createSetupActionButtons(true)\nend\n\n--Triggered by setup button,\nfunction buttonClick_setup()\n    memoryListBackup = duplicateTable(memoryList)\n    memoryList = {}\n    self.clearButtons()\n    createButtonsOnAllObjects(false)\n    createSetupActionButtons(false)\nend\n\nfunction getAllObjectsInMemory()\n  local objTable = {}\n  local curObj = {}\n\n  for guid in pairs(memoryListBackup) do\n    curObj = getObjectFromGUID(guid)\n    table.insert(objTable, curObj)\n  end\n\n  return objTable\n  -- return getAllObjects()\nend\n\n--Creates selection buttons on objects\nfunction createButtonsOnAllObjects(move)\n    local howManyButtons = 0\n\n    local objsToHaveButtons = {}\n    if move == true then\n      objsToHaveButtons = getAllObjectsInMemory()\n    else\n      objsToHaveButtons = getAllObjects()\n    end\n\n    for _, obj in ipairs(objsToHaveButtons) do\n        if obj ~= self then\n            local dummyIndex = howManyButtons\n            --On a normal bag, the button positions aren't the same size as the bag.\n            globalScaleFactor = 1 * 1/self.getScale().x\n            --Super sweet math to set button positions\n            local selfPos = self.getPosition()\n            local objPos = obj.getPosition()\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\n            local objPos = rotateLocalCoordinates(deltaPos, self)\n            objPos.x = -objPos.x * globalScaleFactor\n            objPos.y = objPos.y * globalScaleFactor + 2\n            objPos.z = objPos.z * globalScaleFactor * 0.9\n            --Offset rotation of bag\n            local rot = self.getRotation()\n            rot.y = -rot.y + 180\n            --Create function\n            local funcName = \"selectButton_\" .. howManyButtons\n            local func = function() buttonClick_selection(dummyIndex, obj, move) end\n            local color = {0.75,0.25,0.25,0.6}\n            local colorMove = {0,0,1,0.6}\n            if move == true then\n              color = colorMove\n            end\n            self.setVar(funcName, func)\n            self.createButton({\n                click_function=funcName, function_owner=self,\n                position=objPos, rotation=rot, height=500, width=500,\n                color=color,\n            })\n            howManyButtons = howManyButtons + 1\n        end\n    end\nend\n\n--Creates submit and cancel buttons\nfunction createSetupActionButtons(move)\n    self.createButton({\n        label=\"Cancel\", click_function=\"buttonClick_cancel\", function_owner=self,\n      position={-0.6,0.1,-2.1}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    self.createButton({\n        label=\"Submit\", click_function=\"buttonClick_submit\", function_owner=self,\n        position={-0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n\n    if move == false then\n      self.createButton({\n          label=\"Add\", click_function=\"buttonClick_add\", function_owner=self,\n          position={0.6,0.3,-2.1}, rotation={0,0,0}, height=220, width=550,\n          font_size=130, color={0,0,0}, font_color={0.25,1,0.25}\n      })\n\n        if fresh == false then\n            self.createButton({\n                label=\"Set New\", click_function=\"buttonClick_setNew\", function_owner=self,\n                position={0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={0.75,0.75,1}\n            })\n            self.createButton({\n                label=\"Remove\", click_function=\"buttonClick_remove\", function_owner=self,\n                position={0.6,0.3,-2.5}, rotation={0,0,0}, height=220, width=550,\n                font_size=130, color={0,0,0}, font_color={1,0.25,0.25}\n            })\n        end\n    end\n\n    self.createButton({\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\n        position={-0.6,0.3,-2.9}, rotation={0,0,0}, height=220, width=550,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\nend\n\n\n--During Setup\n\n\n--Checks or unchecks buttons\nfunction buttonClick_selection(index, obj, move)\n    local colorMove = {0,0,1,0.6}\n    local color = {0,1,0,0.6}\n\n    previousGuid = selectedGuid\n    selectedGuid = obj.getGUID()\n\n    theList = memoryList\n    if move == true then\n       theList = moveList\n       if previousGuid ~= nil and previousGuid ~= selectedGuid then\n         local prevObj = getObjectFromGUID(previousGuid)\n         prevObj.highlightOff()\n         self.editButton({index=previousIndex, color=colorMove})\n         theList[previousGuid] = nil\n       end\n       previousIndex = index\n    end\n\n    if theList[selectedGuid] == nil then\n        self.editButton({index=index, color=color})\n        --Adding pos/rot to memory table\n        local pos, rot = obj.getPosition(), obj.getRotation()\n        --I need to add it like this or it won't save due to indexing issue\n        theList[obj.getGUID()] = {\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\n            lock=obj.getLock()\n        }\n        obj.highlightOn({0,1,0})\n    else\n      color = {0.75,0.25,0.25,0.6}\n      if move == true then\n        color = colorMove\n      end\n        self.editButton({index=index, color=color})\n        theList[obj.getGUID()] = nil\n        obj.highlightOff()\n    end\nend\n\n--Cancels selection process\nfunction buttonClick_cancel()\n    memoryList = memoryListBackup\n    moveList = {}\n    self.clearButtons()\n    if next(memoryList) == nil then\n        createSetupButton()\n    else\n        createMemoryActionButtons()\n    end\n    removeAllHighlights()\n    broadcastToAll(\"Selection Canceled\", {1,1,1})\n    moveGuid = nil\nend\n\n--Saves selections\nfunction buttonClick_submit()\n    fresh = false\n    if next(moveList) ~= nil then\n        for guid in pairs(moveList) do\n            moveGuid = guid\n        end\n        if memoryListBackup[moveGuid] == nil then\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\n        else\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\n            self.clearButtons()\n            createMemoryActionButtons()\n            local count = 0\n            for guid in pairs(moveList) do\n                moveGuid = guid\n                count = count + 1\n                local obj = getObjectFromGUID(guid)\n                if obj ~= nil then obj.highlightOff() end\n            end\n            updateMemoryWithMoves()\n            updateSave()\n            buttonClick_place()\n        end\n    elseif next(memoryList) == nil and moveGuid == nil then\n      memoryList = memoryListBackup\n      broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\n    end\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\n    moveGuid = nil\nend\n\nfunction combineTables(first_table, second_table)\n  for k,v in pairs(second_table) do first_table[k] = v end\nend\n\nfunction buttonClick_add()\n    fresh = false\n    combineTables(memoryList, memoryListBackup)\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\n    combineMemoryFromBagsWithin()\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for guid in pairs(memoryList) do\n        count = count + 1\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then obj.highlightOff() end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    updateSave()\nend\n\nfunction buttonClick_remove()\n        broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\n        self.clearButtons()\n        createMemoryActionButtons()\n        local count = 0\n        for guid in pairs(memoryList) do\n            count = count + 1\n            memoryListBackup[guid] = nil\n            local obj = getObjectFromGUID(guid)\n            if obj ~= nil then obj.highlightOff() end\n        end\n        broadcastToAll(count..\" Objects Removed\", {1,1,1})\n        memoryList = memoryListBackup\n        updateSave()\nend\n\nfunction buttonClick_setNew()\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\n    self.clearButtons()\n    createMemoryActionButtons()\n    local count = 0\n    for _, obj in ipairs(getAllObjects()) do\n        guid = obj.guid\n        if memoryListBackup[guid] ~= nil then\n            count = count + 1\n            memoryListBackup[guid].pos = obj.getPosition()\n            memoryListBackup[guid].rot = obj.getRotation()\n            memoryListBackup[guid].lock = obj.getLock()\n        end\n    end\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\n    memoryList = memoryListBackup\n    updateSave()\nend\n\n--Resets bag to starting status\nfunction buttonClick_reset()\n    fresh = true\n    memoryList = {}\n    self.clearButtons()\n    createSetupButton()\n    removeAllHighlights()\n    broadcastToAll(\"Tool Reset\", {1,1,1})\n    updateSave()\nend\n\n\n--After Setup\n\n\n--Creates recall and place buttons\nfunction createMemoryActionButtons()\n    self.createButton({\n        label=\"Place\", click_function=\"buttonClick_place\", function_owner=self,\n        position={0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Recall\", click_function=\"buttonClick_recall\", function_owner=self,\n        position={-0.6,0.1,2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Setup\", click_function=\"buttonClick_setup\", function_owner=self,\n        position={0,0.1,-2.1}, rotation={0,0,0}, height=220, width=500,\n        font_size=130, color={0,0,0}, font_color={1,1,1}\n    })\n---    self.createButton({\n---      label=\"Move\", click_function=\"buttonClick_transpose\", function_owner=self,\n---      position={-2.8,0.3,0}, rotation={0,0,0}, height=350, width=800,\n---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\n---    })\nend\n\n--Sends objects from bag/table to their saved position/rotation\nfunction buttonClick_place()\n    local bagObjList = self.getObjects()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        --If obj is out on the table, move it to the saved pos/rot\n        if obj ~= nil then\n            obj.setPositionSmooth(entry.pos)\n            obj.setRotationSmooth(entry.rot)\n            obj.setLock(entry.lock)\n        else\n            --If obj is inside of the bag\n            for _, bagObj in ipairs(bagObjList) do\n                if bagObj.guid == guid then\n                    local item = self.takeObject({\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\n                    })\n                    item.setLock(entry.lock)\n                    break\n                end\n            end\n        end\n    end\n    broadcastToAll(\"Objects Placed\", {1,1,1})\nend\n\n--Recalls objects to bag from table\nfunction buttonClick_recall()\n    for guid, entry in pairs(memoryList) do\n        local obj = getObjectFromGUID(guid)\n        if obj ~= nil then self.putObject(obj) end\n    end\n    broadcastToAll(\"Objects Recalled\", {1,1,1})\nend\n\n\n--Utility functions\n\n\n--Find delta (difference) between 2 x/y/z coordinates\nfunction findOffsetDistance(p1, p2, obj)\n    local yOffset = 0\n    if obj ~= nil then\n        local bounds = obj.getBounds()\n        yOffset = (bounds.size.y - bounds.offset.y)\n    end\n    local deltaPos = {}\n    deltaPos.x = (p2.x-p1.x)\n    deltaPos.y = (p2.y-p1.y) + yOffset\n    deltaPos.z = (p2.z-p1.z)\n    return deltaPos\nend\n\n--Used to rotate a set of coordinates by an angle\nfunction rotateLocalCoordinates(desiredPos, obj)\n\tlocal objPos, objRot = obj.getPosition(), obj.getRotation()\n    local angle = math.rad(objRot.y)\n\tlocal x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\n\tlocal z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\n\t--return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\n    return {x=x, y=desiredPos.y, z=z}\nend\n\nfunction rotateMyCoordinates(desiredPos, obj)\n\tlocal angle = math.rad(obj.getRotation().y)\n  local x = desiredPos.x * math.sin(angle)\n\tlocal z = desiredPos.z * math.cos(angle)\n    return {x=x, y=desiredPos.y, z=z}\nend\n\n--Coroutine delay, in seconds\nfunction wait(time)\n    local start = os.time()\n    repeat coroutine.yield(0) until os.time() > start + time\nend\n\n--Duplicates a table (needed to prevent it making reference to the same objects)\nfunction duplicateTable(oldTable)\n    local newTable = {}\n    for k, v in pairs(oldTable) do\n        newTable[k] = v\n    end\n    return newTable\nend\n\n--Moves scripted highlight from all objects\nfunction removeAllHighlights()\n    for _, obj in ipairs(getAllObjects()) do\n        obj.highlightOff()\n    end\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend",
  "LuaScriptState": "{\"ml\":{\"0105d8\":{\"lock\":false,\"pos\":{\"x\":3.6197,\"y\":1.4951,\"z\":73.2266},\"rot\":{\"x\":0,\"y\":270.0002,\"z\":0}},\"0ebdac\":{\"lock\":false,\"pos\":{\"x\":3.6197,\"y\":1.4951,\"z\":80.8766},\"rot\":{\"x\":0,\"y\":270.024,\"z\":0}},\"1483ea\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":73.2266},\"rot\":{\"x\":0,\"y\":269.9843,\"z\":0}},\"1e6a5b\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":57.9266},\"rot\":{\"x\":0,\"y\":269.9998,\"z\":0}},\"2de149\":{\"lock\":false,\"pos\":{\"x\":13.5197,\"y\":1.4951,\"z\":80.8766},\"rot\":{\"x\":0,\"y\":270.0015,\"z\":0}},\"40426d\":{\"lock\":false,\"pos\":{\"x\":13.5197,\"y\":1.4951,\"z\":69.3966},\"rot\":{\"x\":0,\"y\":270,\"z\":0}},\"438589\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":61.7466},\"rot\":{\"x\":0,\"y\":270.0001,\"z\":0}},\"4c927a\":{\"lock\":false,\"pos\":{\"x\":13.5197,\"y\":1.4951,\"z\":84.7066},\"rot\":{\"x\":0,\"y\":269.9991,\"z\":0}},\"4d55e3\":{\"lock\":false,\"pos\":{\"x\":13.5197,\"y\":1.4951,\"z\":77.0566},\"rot\":{\"x\":0,\"y\":269.9992,\"z\":0}},\"4eba63\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":84.7066},\"rot\":{\"x\":0,\"y\":269.9931,\"z\":0}},\"65e42d\":{\"lock\":false,\"pos\":{\"x\":6.9197,\"y\":1.4951,\"z\":84.7066},\"rot\":{\"x\":0,\"y\":269.9734,\"z\":0}},\"68c9b4\":{\"lock\":false,\"pos\":{\"x\":10.2197,\"y\":1.4951,\"z\":73.2266},\"rot\":{\"x\":0,\"y\":269.9991,\"z\":0}},\"762ff0\":{\"lock\":false,\"pos\":{\"x\":6.9197,\"y\":1.4951,\"z\":77.0566},\"rot\":{\"x\":0,\"y\":269.9997,\"z\":0}},\"a1a74e\":{\"lock\":false,\"pos\":{\"x\":3.6197,\"y\":1.4951,\"z\":84.7066},\"rot\":{\"x\":0,\"y\":270.0262,\"z\":0}},\"abeb09\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":65.5766},\"rot\":{\"x\":0,\"y\":269.9999,\"z\":0}},\"ad8cf2\":{\"lock\":false,\"pos\":{\"x\":6.9197,\"y\":1.4951,\"z\":80.8766},\"rot\":{\"x\":0,\"y\":270.0294,\"z\":0}},\"c10d42\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":80.8766},\"rot\":{\"x\":0,\"y\":270.0233,\"z\":0}},\"cddb38\":{\"lock\":false,\"pos\":{\"x\":10.2197,\"y\":1.4951,\"z\":77.0566},\"rot\":{\"x\":0,\"y\":269.9995,\"z\":0}},\"e08a6c\":{\"lock\":false,\"pos\":{\"x\":13.5197,\"y\":1.4951,\"z\":73.2266},\"rot\":{\"x\":0,\"y\":269.9995,\"z\":0}},\"e8e1ff\":{\"lock\":false,\"pos\":{\"x\":10.2197,\"y\":1.4951,\"z\":84.7066},\"rot\":{\"x\":0,\"y\":270.023,\"z\":0}},\"ec73da\":{\"lock\":false,\"pos\":{\"x\":10.2197,\"y\":1.4951,\"z\":80.8766},\"rot\":{\"x\":0,\"y\":269.9965,\"z\":0}},\"ef984b\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":77.0566},\"rot\":{\"x\":0,\"y\":269.9995,\"z\":0}},\"f0acc0\":{\"lock\":false,\"pos\":{\"x\":6.9197,\"y\":1.4951,\"z\":73.2266},\"rot\":{\"x\":0,\"y\":269.9999,\"z\":0}},\"fcc84d\":{\"lock\":false,\"pos\":{\"x\":0.3197,\"y\":1.4951,\"z\":69.3966},\"rot\":{\"x\":0,\"y\":270.0001,\"z\":0}},\"ff54e5\":{\"lock\":false,\"pos\":{\"x\":3.6197,\"y\":1.4951,\"z\":77.0566},\"rot\":{\"x\":0,\"y\":270.0002,\"z\":0}}}}",
  "ContainedObjects": [
    {
      "GUID": "4c927a",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Simone LaRue",
      "GMNotes": "{\n  \"id\": \"ROG01-m\",\n  \"type\": \"Minicard\"\n}",
      "CardID": 866100,
      "CustomDeck": {
        "8661": {
          "FaceURL": "https://imgur.com/71Os77z.png",
          "BackURL": "https://imgur.com/sNsJts0.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "2de149",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.8062451,
        "scaleY": 1.0,
        "scaleZ": 0.8062451
      },
      "Nickname": "Simone LaRue",
      "Description": "The Forger",
      "GMNotes": "{\n  \"id\": \"ROG01\",\n  \"type\": \"Investigator\",\n  \"class\": \"Rogue\",\n  \"traits\": \"Criminal. Artist.\",\n  \"willpowerIcons\": 3,\n  \"intellectIcons\": 4,\n  \"combatIcons\": 2,\n  \"agilityIcons\": 3,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866200,
      "CustomDeck": {
        "8662": {
          "FaceURL": "https://imgur.com/zWSQ7Nv.png",
          "BackURL": "https://imgur.com/zj08iJg.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "4d55e3",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Expert Forgery",
      "GMNotes": "{\n  \"id\": \"ROG02\",\n  \"type\": \"Event\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Trick. Illicit.\",\n  \"agilityIcons\": 2,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866300,
      "CustomDeck": {
        "8663": {
          "FaceURL": "https://imgur.com/HBYgBad.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e08a6c",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Expert Forgery",
      "GMNotes": "{\n  \"id\": \"ROG02\",\n  \"type\": \"Event\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Trick. Illicit.\",\n  \"agilityIcons\": 2,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866300,
      "CustomDeck": {
        "8663": {
          "FaceURL": "https://imgur.com/HBYgBad.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "40426d",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Antiquities Dealer",
      "Description": "Weakness",
      "GMNotes": "{\n  \"id\": \"ROG03\",\n  \"type\": \"Enemy\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Humanoid.\",\n  \"weakness\": true,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866400,
      "CustomDeck": {
        "8664": {
          "FaceURL": "https://imgur.com/pWCNMA4.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "e8e1ff",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Riley MacCormack",
      "GMNotes": "{\n  \"id\": \"ROG04-m\",\n  \"type\": \"Minicard\"\n}",
      "CardID": 866500,
      "CustomDeck": {
        "8665": {
          "FaceURL": "https://imgur.com/9WTSh6l.png",
          "BackURL": "https://imgur.com/Dx4xFBU.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "ec73da",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.8062451,
        "scaleY": 1.0,
        "scaleZ": 0.8062451
      },
      "Nickname": "Riley MacCormack",
      "Description": "The Goon",
      "GMNotes": "{\n  \"id\": \"ROG04\",\n  \"type\": \"Investigator\",\n  \"class\": \"Rogue\",\n  \"traits\": \"Criminal.\",\n  \"willpowerIcons\": 1,\n  \"intellectIcons\": 3,\n  \"combatIcons\": 5,\n  \"agilityIcons\": 3,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866600,
      "CustomDeck": {
        "8666": {
          "FaceURL": "https://imgur.com/RyN8Ln8.png",
          "BackURL": "https://imgur.com/U5wCi1P.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "cddb38",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "\"Rough 'em up!\"",
      "GMNotes": "{\n  \"id\": \"ROG05\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"cost\": 2,\n  \"traits\": \"Talent. Illicit.\",\n  \"combatIcons\": 2,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866700,
      "CustomDeck": {
        "8667": {
          "FaceURL": "https://imgur.com/alLa7HI.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "68c9b4",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Retribution",
      "GMNotes": "{\n  \"id\": \"ROG06\",\n  \"type\": \"Treachery\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Flaw.\",\n  \"weakness\": true,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 866800,
      "CustomDeck": {
        "8668": {
          "FaceURL": "https://imgur.com/KhhJUhC.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "f0acc0",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Elliott Stone",
      "Description": "Weakness",
      "GMNotes": "{\n  \"type\": \"Enemy\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Detective. Humanoid.\",\n  \"weakness\": true,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 867200,
      "CustomDeck": {
        "8672": {
          "FaceURL": "https://imgur.com/TfOwreg.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "762ff0",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Pilfered Keys",
      "GMNotes": "{\n  \"id\": \"ROG08\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"startsInPlay\": true,\n  \"traits\": \"Item. Tool. Illicit.\",\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 867100,
      "CustomDeck": {
        "8671": {
          "FaceURL": "https://imgur.com/lovOuCN.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "ad8cf2",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.8062451,
        "scaleY": 1.0,
        "scaleZ": 0.8062451
      },
      "Nickname": "Elizabeth 'Lizzie' Cunningham",
      "Description": "The Burglar",
      "GMNotes": "{\n  \"id\": \"ROG07\",\n  \"type\": \"Investigator\",\n  \"class\": \"Rogue\",\n  \"traits\": \"Criminal.\",\n  \"willpowerIcons\": 2,\n  \"intellectIcons\": 3,\n  \"combatIcons\": 2,\n  \"agilityIcons\": 5,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 867000,
      "CustomDeck": {
        "8670": {
          "FaceURL": "https://imgur.com/lD2CYhq.png",
          "BackURL": "https://imgur.com/TPrf9xy.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "65e42d",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Elizabeth 'Lizzie' Cunningham",
      "GMNotes": "{\n  \"id\": \"ROG07-m\",\n  \"type\": \"Minicard\"\n}",
      "CardID": 866900,
      "CustomDeck": {
        "8669": {
          "FaceURL": "https://imgur.com/zyBUOSi.png",
          "BackURL": "https://imgur.com/yphFDA1.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "a1a74e",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Vernon Taylor",
      "GMNotes": "{\n  \"id\": \"ROG10-m\",\n  \"type\": \"Minicard\"\n}",
      "CardID": 867300,
      "CustomDeck": {
        "8673": {
          "FaceURL": "https://imgur.com/YJu0gK7.png",
          "BackURL": "https://imgur.com/2drcgHv.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "0ebdac",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.8062451,
        "scaleY": 1.0,
        "scaleZ": 0.8062451
      },
      "Nickname": "Vernon Taylor",
      "Description": "The Card Sharp",
      "GMNotes": "{\n  \"id\": \"ROG10\",\n  \"type\": \"Investigator\",\n  \"class\": \"Rogue\",\n  \"traits\": \"Criminal. Socialite.\",\n  \"willpowerIcons\": 2,\n  \"intellectIcons\": 4,\n  \"combatIcons\": 2,\n  \"agilityIcons\": 4,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 867400,
      "CustomDeck": {
        "8674": {
          "FaceURL": "https://imgur.com/MGKgsDb.png",
          "BackURL": "https://imgur.com/8CfR6GM.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "ff54e5",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Stacked Deck",
      "GMNotes": "{\n  \"id\": \"11ROG\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Item. Illicit.\",\n  \"intellectIcons\": 1,\n  \"wildIcons\": 2,\n  \"cycle\": \"Rogue\"\n}",
      "CardID": 867500,
      "CustomDeck": {
        "8675": {
          "FaceURL": "https://imgur.com/uvx0oBZ.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "0105d8",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Caught in the Act",
      "Description": "Weakness",
      "GMNotes": "{\n  \"id\": \"ROG12\",\n  \"type\": \"Treachery\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Flaw.\",\n  \"weakness\": true,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 867600,
      "CustomDeck": {
        "8676": {
          "FaceURL": "https://imgur.com/zFiTf1E.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "4eba63",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.6,
        "scaleY": 1.0,
        "scaleZ": 0.6
      },
      "Nickname": "Emily Gibson",
      "GMNotes": "{\n  \"id\": \"ROG13-m\",\n  \"type\": \"Minicard\"\n}",
      "CardID": 867700,
      "CustomDeck": {
        "8677": {
          "FaceURL": "https://imgur.com/YMRgN39.png",
          "BackURL": "https://imgur.com/VG2lKy9.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "c10d42",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 0.8062451,
        "scaleY": 1.0,
        "scaleZ": 0.8062451
      },
      "Nickname": "Emily GIbson",
      "Description": "The Grifter",
      "GMNotes": "{\n  \"id\": \"ROG13\",\n  \"type\": \"Investigator\",\n  \"class\": \"Rogue\",\n  \"traits\": \"Criminal. Sorcerer.\",\n  \"willpowerIcons\": 4,\n  \"intellectIcons\": 3,\n  \"combatIcons\": 2,\n  \"agilityIcons\": 3,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 868300,
      "CustomDeck": {
        "8683": {
          "FaceURL": "https://imgur.com/mfY3zGg.png",
          "BackURL": "https://imgur.com/yR3UgyW.png",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "ef984b",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Spirit Beacon",
      "GMNotes": "{\n  \"id\": \"ROG14\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"startsInPlay\": true,\n  \"traits\": \"Ritual. Cursed.\",\n  \"uses\": [\n    {\n      \"count\": 1,\n      \"type\": \"Soul\",\n      \"token\": \"resource\"\n    }\n  ],\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 867900,
      "CustomDeck": {
        "8679": {
          "FaceURL": "https://imgur.com/282G8Yn.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "1483ea",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Spirit Board",
      "GMNotes": "{\n  \"id\": \"21ROG\",\n  \"type\": \"Asset\",\n  \"class\": \"Neutral\",\n  \"cost\": 3,\n  \"traits\": \"Item. Charm.\",\n  \"willIcons\": 1,\n  \"wildIcons\": 2,\n  \"cycle\": \"Rogue\"\n}",
      "CardID": 873600,
      "CustomDeck": {
        "8736": {
          "FaceURL": "https://imgur.com/ipBm8Pf.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "fcc84d",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Hidden Past",
      "Description": "Weakness",
      "GMNotes": "{\n  \"id\": \"ROG17\",\n  \"type\": \"Treachery\",\n  \"class\": \"Neutral\",\n  \"traits\": \"Flaw. Madness.\",\n  \"weakness\": true,\n  \"cycle\": \"Rogues\"\n}",
      "CardID": 868100,
      "CustomDeck": {
        "8681": {
          "FaceURL": "https://imgur.com/hWij9BW.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "abeb09",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Haunting Spirit",
      "CardID": 868200,
      "CustomDeck": {
        "8682": {
          "FaceURL": "https://imgur.com/8pCVDPp.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "438589",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Haunting Spirit",
      "CardID": 868200,
      "CustomDeck": {
        "8682": {
          "FaceURL": "https://imgur.com/8pCVDPp.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    },
    {
      "GUID": "1e6a5b",
      "Name": "CardCustom",
      "Transform": {
        "rotY": 270,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Haunting Spirit",
      "CardID": 868200,
      "CustomDeck": {
        "8682": {
          "FaceURL": "https://imgur.com/8pCVDPp.png",
          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
          "NumWidth": 1,
          "NumHeight": 1,
          "BackIsHidden": true,
          "UniqueBack": false,
          "Type": 0
        }
      }
    }
  ],
  "AttachedDecals": [
    {
      "Transform": {
        "posX": 0.0,
        "posY": 0.0,
        "posZ": 0.0,
        "rotX": 270.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 2.0,
        "scaleY": 2.0,
        "scaleZ": 2.0
      },
      "CustomDecal": {
        "Name": "dunwich_back",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
        "Size": 7.4
      }
    }
  ]
}
